{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/front.jsx","webpack:///./src/twitch/logviewer/userinput.jsx","webpack:///./src/twitch/logviewer/index.jsx","webpack:///./src/twitch/logviewer/suggestchannelinput.jsx","webpack:///./src/twitch/logviewer/selectchannel.jsx","webpack:///./src/twitch/public/commands.jsx","webpack:///./src/twitch/public/index.jsx","webpack:///./src/index.jsx","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/twitch/api.jsx","webpack:///./src/twitch/dashboard/components/select_channel.jsx","webpack:///./src/twitch/dashboard/components/sidebar.jsx","webpack:///./src/twitch/dashboard/components/topbar.jsx","webpack:///./src/twitch/dashboard/components/bot_controls.jsx","webpack:///./src/twitch/dashboard/components/extra_auth.jsx","webpack:///./src/twitch/dashboard/dashboard.jsx","webpack:///./src/twitch/dashboard/commands.jsx","webpack:///./src/twitch/dashboard/command.jsx","webpack:///./src/twitch/dashboard/spotify.jsx","webpack:///./src/twitch/dashboard/components/discord_connect.jsx","webpack:///./src/twitch/dashboard/components/discord_live_notification.jsx","webpack:///./src/twitch/dashboard/discord.jsx","webpack:///./src/twitch/dashboard/admins.jsx","webpack:///./src/twitch/dashboard/filters.jsx","webpack:///./src/twitch/dashboard/components/filter.jsx","webpack:///./src/twitch/dashboard/filter_link.jsx","webpack:///./src/twitch/dashboard/filter_paragraph.jsx","webpack:///./src/twitch/dashboard/filter_symbol.jsx","webpack:///./src/twitch/dashboard/filter_caps.jsx","webpack:///./src/twitch/dashboard/filter_emote.jsx","webpack:///./src/twitch/dashboard/filter_non_latin.jsx","webpack:///./src/twitch/dashboard/filter_action.jsx","webpack:///./src/twitch/dashboard/filter_banned_words_groups.jsx","webpack:///./src/twitch/dashboard/filter_banned_words.jsx","webpack:///./src/twitch/dashboard/timers.jsx","webpack:///./src/twitch/dashboard/timer.jsx","webpack:///./src/twitch/dashboard/chat_alerts.jsx","webpack:///./src/twitch/dashboard/points_settings.jsx","webpack:///./src/twitch/dashboard/gambling_slots_settings.jsx","webpack:///./src/twitch/dashboard/gambling_roulette_settings.jsx","webpack:///./src/twitch/dashboard/index.jsx","webpack:///./src/utils.jsx","webpack:///./src/components/loading.jsx","webpack:///./src/twitch/utils.jsx","webpack:///./src/components/save_button.jsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Front","React","Component","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","id","className","tbot","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","to","UserInput","props","_this","_classCallCheck","this","_getPrototypeOf","state","users","defaultValue","fetchUsers","_assertThisInitialized","stateChange","e","_this2","target","api","concat","channel_id","params","suggest_name","then","setState","type","Downshift","stateChangeTypes","clickItem","changeInput","selectedItem","inputValue","keyDownArrowUp","keyDownArrowDown","highlightedIndex","_this3","react_default","downshift_esm","onStateChange","itemToString","item","_ref","getLabelProps","getInputProps","getItemProps","getToggleButtonProps","getMenuProps","isOpen","clearSelection","placeholder","onChange","map","index","_extends","style","backgroundColor","fontWeight","Logviewer","_this$state","logviewer_classCallCheck","logviewer_getPrototypeOf","query","qs","parse","location","search","_defineProperty","channel","loading","chatlog","loadBefore","logviewer_assertThisInitialized","loadAfter","match","setTitle","loadingChannel","loadChatlog","before_id","loadUserChatStats","user","message","show_mod_actions_only","_toConsumableArray","unshift","showLoadAfter","headers","showLoadBefore","catch","response","status","accessDenied","preventDefault","after_id","_this4","userChatStats","_this5","text","colSpan","textAlign","class","role","href","onClick","width","dateTime","created_at","whiteSpace","iso8601toLocalTime","renderTypeSymbol","moment","format","chat_messages","purges","timeouts","bans","renderAccessDenied","border","borderBottom","paddingLeft","Link","twitch_user","userinput","defaultChecked","htmlFor","renderUserStats","renderChatlog","SuggestChannelInput","channels","fetch","selected","SelectChannel","selectchannel_classCallCheck","selectchannel_getPrototypeOf","modOf","twitchLoginClick","selectchannel_assertThisInitialized","requireAuth","isAuthed","suggestchannelinput","renderModOf","renderLoginButton","Commands","_possibleConstructorReturn","commands","getCommands","document","title","managedUser","level","groups","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","iterator","next","done","cmd","includes","group_name","err","return","fontSize","group","userLevelName","user_level","Main","public_classCallCheck","public_possibleConstructorReturn","public_getPrototypeOf","errors","getChannel","error","renderError","Route","exact","path","component","prevProps","scrollTo","__webpack_exports__","react_dom__WEBPACK_IMPORTED_MODULE_0__","react_dom__WEBPACK_IMPORTED_MODULE_0___default","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","tbot_front__WEBPACK_IMPORTED_MODULE_4__","tbot_twitch_logviewer__WEBPACK_IMPORTED_MODULE_5__","tbot_twitch_logviewer_selectchannel__WEBPACK_IMPORTED_MODULE_6__","tbot_twitch_dashboard__WEBPACK_IMPORTED_MODULE_7__","tbot_twitch_public__WEBPACK_IMPORTED_MODULE_8__","ReactDOM","render","TwitchLogViewerSelectChannel","TwitchLogviewer","TwitchPublic","TwitchDashboard","getElementById","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","Error","code","keys","resolve","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","axios","interceptors","use","encodeURIComponent","pathname","Promise","reject","getChannels","tabIndex","margin","marginTop","borderRadius","data-dismiss","aria-label","onClose","aria-hidden","Sidebar","sidebar_classCallCheck","sidebar_getPrototypeOf","sidebar_assertThisInitialized","showSelectChannel","NavLink","activeClassName","selectChannelClick","renderPoints","renderConnect","select_channel","BotControls","bot_controls_classCallCheck","bot_controls_getPrototypeOf","bot_controls_defineProperty","bot_controls_assertThisInitialized","post","getSettings","delete","settings","active","joinClick","partClick","muted","muteClick","unmuteClick","chatlog_enabled","enableChatlogClick","disableChatlogClick","ExtraAuth","extra_auth_classCallCheck","extra_auth_possibleConstructorReturn","extra_auth_getPrototypeOf","getData","has_extra_auth","Dashboard","setHeader","es_Redirect","extra_auth","bot_controls","commands_classCallCheck","commands_possibleConstructorReturn","commands_getPrototypeOf","global_cooldown","user_cooldown","enabledWhenName","enabled_status","enabled","Command","command_classCallCheck","command_getPrototypeOf","command_defineProperty","command_assertThisInitialized","val","checked","saving","put","success","confirm","deleting","templates","JSON","stringify","mod_cooldown","public","getCommand","getTemplates","disabled","handleDelete","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","handleTemplate","label","temp","maxWidth","renderTemplates","onSubmit","handleSubmit","handleEvent","autoFocus","required","renderButton","renderDeleteButton","Spotify","spotify_classCallCheck","spotify_getPrototypeOf","spotify_defineProperty","spotify_assertThisInitialized","connecting","spotify","getStatus","connected","method","action","DiscordConnect","discord_connect_classCallCheck","discord_connect_getPrototypeOf","discord_connect_defineProperty","discord_connect_assertThisInitialized","discord","discord_live_notification_classCallCheck","discord_live_notification_getPrototypeOf","discord_live_notification_defineProperty","discord_live_notification_assertThisInitialized","saved","webhook_url","save_button","isSaving","isSaved","savedText","Discord","discord_classCallCheck","discord_possibleConstructorReturn","discord_getPrototypeOf","Fragment","discord_connect","discord_live_notification","Admins","admins_classCallCheck","admins_getPrototypeOf","admins_defineProperty","admins_assertThisInitialized","newAdmin","getAdmins","alert","admin","admins","levels","handleNewSubmit","handleNewEvent","renderNewAdmin","handleChangeLevel","Filters","filters_classCallCheck","filters_possibleConstructorReturn","filters_getPrototypeOf","filters","desc","getFilters","f","Filter","filter_classCallCheck","filter_getPrototypeOf","filter_assertThisInitialized","filter","exclude_user_level","warning_enabled","warning_message","warning_expire","timeout_message","timeout_duration","Filter_link","filter_link_classCallCheck","filter_link_getPrototypeOf","filter_link_assertThisInitialized","Array","isArray","whitelist","split","join","submit","rows","renderBase","Filter_symbol","filter_paragraph_classCallCheck","filter_paragraph_getPrototypeOf","filter_paragraph_assertThisInitialized","max_length","filter_symbol_classCallCheck","filter_symbol_getPrototypeOf","filter_symbol_assertThisInitialized","max_symbols","Filter_caps","filter_caps_classCallCheck","filter_caps_getPrototypeOf","filter_caps_assertThisInitialized","min_length","max_percent","Filter_emote","filter_emote_classCallCheck","filter_emote_getPrototypeOf","filter_emote_assertThisInitialized","max_emotes","Filter_non_latin","filter_non_latin_classCallCheck","filter_non_latin_getPrototypeOf","filter_non_latin_assertThisInitialized","Filter_action","filter_action_classCallCheck","filter_action_getPrototypeOf","filter_action_assertThisInitialized","Filter_banned_words_groups","filter_banned_words_groups_classCallCheck","filter_banned_words_groups_possibleConstructorReturn","filter_banned_words_groups_getPrototypeOf","idx","Filter_banned_words","filter_banned_words_classCallCheck","filter_banned_words_getPrototypeOf","filter_banned_words_defineProperty","filter_banned_words_assertThisInitialized","_objectSpread","banned_words","filter_id","console","log","testResult","dataset","changed_banned_words","removeBannedWords","testing","elements","redirect_back","getFilter","handleTest","handleTestChange","savingTest","errorText","hasError","bw","data-id","handleBannedWordsChange","handleSaveBannedWords","handleDeleteBannedWords","handleAdd","renderTest","renderBannedWords","Timers","timers_classCallCheck","timers_possibleConstructorReturn","timers_getPrototypeOf","timers","getTimers","timer","interval","Timer","timer_classCallCheck","timer_getPrototypeOf","timer_defineProperty","timer_assertThisInitialized","messages","send_message_order","getTimer","ChatAlerts","chat_alerts_classCallCheck","chat_alerts_getPrototypeOf","chat_alerts_defineProperty","chat_alerts_assertThisInitialized","alerts","forceUpdate","alertTypes","minAmount","canAdd","vars","getAlerts","alertType","min_amount","handleChange","data-type","renderType","PointsSettings","points_settings_classCallCheck","points_settings_getPrototypeOf","points_settings_defineProperty","points_settings_assertThisInitialized","ignore_users","points_name","points_per_min","points_per_min_sub_multiplier","points_per_sub","points_per_cheer","GamblingSlots","gambling_slots_settings_classCallCheck","gambling_slots_settings_getPrototypeOf","gambling_slots_settings_defineProperty","gambling_slots_settings_assertThisInitialized","emotes","emote_pool_size","payout_percent","min_bet","max_bet","win_message","allin_win_message","lose_message","allin_lose_message","GamblingRoulette","gambling_roulette_settings_classCallCheck","gambling_roulette_settings_getPrototypeOf","gambling_roulette_settings_defineProperty","gambling_roulette_settings_assertThisInitialized","win_chance","twitch_dashboard_classCallCheck","twitch_dashboard_possibleConstructorReturn","twitch_dashboard_getPrototypeOf","components_sidebar","components_topbar","Filter_paragraph","GamblingSlotsSettings","GamblingRouletteSettings","Redirect","innerHTML","field","height","savingText","children"],"mappings":"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5B3B,IAAAnJ,EAAA,CACAoJ,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,gBAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,UAAA,GACAC,aAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC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","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([166,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport './front.scss'\n\nclass Front extends React.Component {\n\n    render() {\n        return <div id=\"front\">\n            <div className=\"title\">{tbot.name}</div>\n            <div className=\"items\">\n                <div className=\"title\">\n                    Twitch\n                </div>\n                <Link to=\"/twitch/dashboard\" className=\"item twitch\">                    \n                    Dashboard\n                </Link>\n                <Link to=\"/twitch/logviewer\" className=\"item twitch\">\n                    Logviewer\n                </Link>\n            </div>\n            <div className=\"items\">\n                <div className=\"title\">\n                    Discord\n                </div>\n                <a className=\"item discord\">\n                    Dashboard\n                </a>\n                <a className=\"item discord\">\n                    Logviewer\n                </a>\n            </div>\n        </div>\n    }\n}\n\nexport default Front","import React from 'react'\nimport Downshift from 'downshift'\nimport api from 'tbot/twitch/api'\n\nimport './suggestinput.scss'\n\nclass UserInput extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            users: [],\n            value: this.props.defaultValue,\n        }\n        this.fetchUsers = this.fetchUsers.bind(this)\n        this.stateChange = this.stateChange.bind(this)\n    }\n\n    fetchUsers(e) {\n        if (!e.target.value) {\n            this.setState({users: []})\n            return\n        }\n        api.get(`/api/twitch/channels/${this.props.channel_id}/users`, {params:{suggest_name: e.target.value}}).then(r => {\n            this.setState({\n                users: r.data, \n            })\n        })\n    }\n\n    stateChange(e) {\n        switch (e.type) {\n            case Downshift.stateChangeTypes.clickItem:\n            case Downshift.stateChangeTypes.changeInput:\n                this.setState({value: (e.selectedItem?e.selectedItem.name:e.inputValue)})\n            break\n            case Downshift.stateChangeTypes.keyDownArrowUp:\n            case Downshift.stateChangeTypes.keyDownArrowDown:\n                this.setState({value: (this.state.users[e.highlightedIndex].name)})\n            break\n        }     \n    }\n      \n    render() {\n        return (<Downshift \n                inputValue={this.state.value}\n                onStateChange={this.stateChange}\n                itemToString={item => (item ? item.name : '')}\n            >\n            {({ \n                getLabelProps,\n                getInputProps,\n                getToggleButtonProps,\n                getMenuProps,\n                getItemProps,\n                isOpen,\n                clearSelection,\n                selectedItem,\n                inputValue,\n                highlightedIndex,\n            }) => (\n                <div className=\"suggest-input\">\n                    <input {...getInputProps({\n                        name: 'user',\n                        placeholder: 'User',\n                        onChange: this.fetchUsers,\n                        className: 'form-control',\n                    })} />\n                    {isOpen && (this.state.users.length>0) ? (\n                        <div className=\"suggest-container\">{\n                            this.state.users.map((item, index) => (\n                                <div\n                                    className=\"suggest-item\"\n                                    {...getItemProps({ key: index, index, item })}\n                                    style={{\n                                        backgroundColor: highlightedIndex === index ? '#505258' : '#43464F',\n                                        fontWeight: selectedItem === item ? 'bold' : 'normal',\n                                    }}\n                                >\n                                    {item.name}\n                                </div>\n                            ))\n                        }</div>\n                    ) : null}\n                </div>\n            )}\n        </Downshift>)\n    }\n}\n\nexport default UserInput","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport api from 'tbot/twitch/api'\nimport qs from 'query-string'\nimport moment from 'moment'\nimport {setTitle} from 'tbot/utils'\nimport Loading from 'tbot/components/loading'\nimport UserInput from './userinput'\nimport './logviewer.scss'\nimport '../dashboard/components/topbar.scss'\n\nclass Logviewer extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.query = qs.parse(location.search)\n        this.state = {\n            channel: null,\n            loading: true,\n            chatlog: [],\n            loading: true,\n            loadingChannel: true,\n            userChatStats: null,\n            showLoadBefore: false,\n            showLoadAfter: true,\n            accessDenied: false,\n        }\n        this.loadBefore = this.loadBefore.bind(this);\n        this.loadAfter = this.loadAfter.bind(this);\n    }\n\n    componentDidMount() {\n        let channel = this.props.match.params.channel;\n        setTitle(`${channel} | Twitch Logviewer`)\n        api.get(`/api/twitch/channels`, {params: {name:channel}}).then(data => {\n            this.setState({\n                channel: data.data[0],\n                loadingChannel: false,\n            }, state => {\n                this.loadChatlog({\n                    before_id: this.query.before_id,\n                })\n                this.loadUserChatStats()\n            })\n        })\n    }\n\n    loadChatlog(params) {\n        this.setState({loading: true})\n        params['user'] = this.query.user\n        params['message'] = this.query.message\n        params['show_mod_actions_only'] = this.query.show_mod_actions_only\n        api.get(`/api/twitch/channels/${this.state.channel.id}/chatlog`, {params: params}).then(r => {\n            let l = this.state.chatlog;\n            if ('after_id' in params)                \n                l.push(...r.data)\n            else\n                l.unshift(...r.data);\n            if ('after_id' in params) {\n                this.state.showLoadAfter = r.data.length == r.headers['x-per-page']\n            } else {\n                this.state.showLoadBefore = r.data.length == r.headers['x-per-page'] \n                if (this.state.showLoadAfter != false) {\n                    this.state.showLoadAfter = (this.query.before_id);\n                }\n            }\n            this.setState({\n                loading: false,\n                chatlog: l,\n            })\n        }).catch(e => {\n            if (e.response.status == 403) {\n                this.setState({\n                    accessDenied: true,\n                })\n            }\n        })\n    }\n\n    loadBefore(e) {\n        e.preventDefault();\n        this.loadChatlog({\n            before_id: this.state.chatlog[0].id,\n        })\n    }\n\n    loadAfter(e) {\n        e.preventDefault();\n        this.loadChatlog({\n            after_id: this.state.chatlog[this.state.chatlog.length-1].id,\n        })\n    }\n\n    loadUserChatStats() {\n        this.setState({\n            userChatStats: null,\n            loading: true,\n        })\n        if (!this.query.user)\n            return\n        api.get(`/api/twitch/channels/${this.state.channel.id}/user-chatstats`, {params: {\n            user: this.query.user,\n        }}).then(r => {\n            this.setState({\n                userChatStats: r.data,\n                loading: false,\n            })\n        })   \n    }\n\n    renderChatlog() {\n        if (this.state.chatlog.length == 0)\n            if (this.state.loading)\n                return <Loading text=\"LOADING\" />\n            else\n                return <div className=\"m-2\"><center>No results found</center></div>\n        return <table className=\"chatlog table table-dark table-striped table-sm table-hover\">\n            <tbody>\n                {this.state.showLoadBefore?\n                    <tr><td colSpan=\"3\" style={{textAlign: 'center'}}>\n                        {this.state.loading?\n                            <div class=\"spinner-grow text-primary\" role=\"status\"></div>:\n                            <a href=\"#\" onClick={this.loadBefore}>Load more</a>}\n                        </td></tr>\n                : null}\n                {this.state.chatlog.map(l => (\n                    <tr key={l.id}>\n                        <td \n                            width=\"10px\"\n                            dateTime={l.created_at}\n                            style={{whiteSpace:'nowrap'}}\n                        >\n                            <a href={`?before_id=${l.id+1}`}>{this.iso8601toLocalTime(l.created_at)}</a>\n                        </td>\n                        <td width=\"10px\"><a href={`?user=${l.user}`}>{l.user}</a></td>\n                        <td>\n                            {this.renderTypeSymbol(l)}\n                            {l.message} \n                        </td>\n                    </tr>\n                ))}                \n                {this.state.showLoadAfter?\n                    <tr><td colSpan=\"3\" style={{textAlign: 'center'}}>\n                        {this.state.loading?\n                            <div class=\"spinner-grow text-primary\" role=\"status\"></div>:\n                            <a href=\"#\" onClick={this.loadAfter}>Load more</a>}\n                        </td></tr>\n                : null}\n            </tbody>\n        </table>\n    }\n\n    renderTypeSymbol(l) {\n        switch(l.type) {\n            case 2:\n                return <span className=\"badge badge-danger\">B</span>\n                break;\n            case 3:\n                return <span className=\"badge badge-warning\">T</span> \n                break;\n            case 4:\n                return <span className=\"badge badge-info\">P</span> \n                break;\n            case 100:\n                return <span className=\"badge badge-success\">M</span> \n                break;\n            default:\n                return null\n                break;\n        }\n    }\n\n    iso8601toLocalTime(t) {\n        let date = moment(t);\n        return date.format('YYYY-MM-DD HH:mm:ss')\n    }\n\n    renderUserStats() {\n        if (this.state.userChatStats == null)\n            return null\n\n        return <div className=\"userChatStats\">\n            <span><b>Total messages:</b> {this.state.userChatStats.chat_messages||0}</span>\n            <span><b>Purges:</b> {this.state.userChatStats.purges||0}</span>\n            <span><b>Timeouts:</b> {this.state.userChatStats.timeouts||0}</span>\n            <span><b>Bans:</b> {this.state.userChatStats.bans||0}</span>\n        </div>\n\n    }\n\n    renderAccessDenied() {\n        return <div className=\"access-denied\">\n            Sorry,\n            <br />\n            you must be a moderator to view the chatlog of this channel\n        </div>\n    }\n\n    render() {\n        if (this.state.loadingChannel)\n            return <Loading text=\"LOADING\" />\n        if (this.state.accessDenied)\n            return this.renderAccessDenied()\n        return <div id=\"logviewer\">\n            <div id=\"topbar\" style={{'border': 'none', 'borderBottom': '1px solid #000', 'paddingLeft': '0.5rem'}}>\n                <div className=\"title\" id=\"top-title\">\n                    <Link to=\"/twitch/logviewer\" className=\"text-white\">\n                        <i className=\"material-icons material-inline \">arrow_back</i></Link> Logviewer for {this.state.channel.name}\n                </div>\n                {tbot.twitch_user?\n                <div className=\"signed-as\">Signed in as <b>{tbot.twitch_user.user}</b>, <a href=\"/twitch/logout\">log out</a></div>\n                :null}\n            </div>\n            <div className=\"sticky-top\">\n                <div className=\"filter\">\n                    <form className=\"form-inline\">\n                        <UserInput defaultValue={this.query.user} channel_id={this.state.channel.id} />\n                        <input \n                            name=\"message\" \n                            type=\"text\" \n                            className=\"form-control\" \n                            placeholder=\"Message\"\n                            defaultValue={this.query.message}\n                        />\n                        <button type=\"submit\" className=\"btn btn-warning\">Search</button>\n                        <input \n                            type=\"checkbox\" \n                            value=\"yes\" \n                            name=\"show_mod_actions_only\" \n                            className=\"form-check-input\" \n                            id=\"show_mod_actions_only\" \n                            defaultChecked={this.query.show_mod_actions_only=='yes'}\n                        />\n                        <label className=\"form-check-label\" htmlFor=\"show_mod_actions_only\">Show only mod actions</label>\n                    </form>\n                </div>\n                {this.renderUserStats()}\n            </div>\n            {this.renderChatlog()}\n        </div>;\n    }\n\n}\n\nexport default Logviewer","import React from 'react'\nimport Downshift from 'downshift'\nimport api from 'tbot/twitch/api'\n\nimport './suggestinput.scss'\n\nclass SuggestChannelInput extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            channels: [],\n        }\n        this.fetch = this.fetch.bind(this)\n        this.selected = this.selected.bind(this)\n    }\n\n    fetch(e) {\n        if (!e.target.value) {\n            this.setState({channels: []})\n            return\n        }\n        api.get(`/api/twitch/channels`, {params:{suggest_name: e.target.value}}).then(r => {\n            this.setState({\n                channels: r.data, \n            })\n        })\n    }\n\n    selected(s) {\n        location.href = '/twitch/logviewer/'+s.name\n    }\n\n    render() {\n        return (<Downshift \n                itemToString={item => (item ? item.name : '')}\n                onChange={this.selected}\n            >\n            {({ \n                getLabelProps,\n                getInputProps,\n                getToggleButtonProps,\n                getMenuProps,\n                getItemProps,\n                isOpen,\n                clearSelection,\n                selectedItem,\n                inputValue,\n                highlightedIndex,\n            }) => (\n                <div className=\"suggest-input\">\n                    <input {...getInputProps({\n                        name: 'channel',\n                        placeholder: 'Channel search',\n                        onChange: this.fetch,\n                        className: 'form-control',\n                    })} />\n                    {isOpen && (this.state.channels.length>0) ? (\n                        <div className=\"suggest-container\">{\n                            this.state.channels.map((item, index) => (\n                                <div\n                                    className=\"suggest-item\"\n                                    {...getItemProps({ key: index, index, item })}\n                                    style={{\n                                        backgroundColor: highlightedIndex === index ? '#505258' : '#43464F',\n                                        fontWeight: selectedItem === item ? 'bold' : 'normal',\n                                    }}\n                                >\n                                    {item.name}\n                                </div>\n                            ))\n                        }</div>\n                    ) : null}\n                </div>\n            )}\n        </Downshift>)\n    }\n}\n\nexport default SuggestChannelInput","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport api from 'tbot/twitch/api'\nimport {isAuthed, requireAuth} from 'tbot/twitch/utils'\nimport {setTitle} from 'tbot/utils'\n\nimport SuggestChannelInput from './suggestchannelinput'\n\nclass SelectChannel extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            modOf: [],\n        }\n        setTitle('Twitch Logviewer')\n        this.twitchLoginClick = this.twitchLoginClick.bind(this);\n    }\n\n    twitchLoginClick() {\n        requireAuth();\n    }\n\n    componentDidMount() {\n        api.get('/api/twitch/user/mod-of').then(r => {\n            this.setState({\n                modOf: r.data,\n            })\n        })\n    }\n\n    renderModOf() {\n        if (!isAuthed())\n            return null;\n        return (\n            <div className=\"mod-of\">\n                {this.state.modOf.map(c => (\n                    <div key={c.id}>\n                        <Link to={`/twitch/logviewer/${c.name}`}>\n                            {c.name}\n                        </Link>\n                    </div>\n                ))}\n            </div>\n        )\n    }\n\n    renderLoginButton() {\n        if (isAuthed())\n            return null;\n        return (\n            <center>\n                <button className=\"btn btn-primary\" onClick={this.twitchLoginClick}>Login with Twitch</button>\n            </center>\n        )\n    }\n\n    render() {\n        return <div id=\"select-channels\">\n            <div className=\"text-center\">\n                <Link to=\"/\">{tbot.name}</Link>\n            </div>\n            <h1>Twitch Logviewer</h1>\n            <div className=\"suggest-channel\">\n                <SuggestChannelInput />\n            </div>\n            {this.renderModOf()}\n            {this.renderLoginButton()}            \n        </div>\n    }\n}\n\nexport default SelectChannel;","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport api from 'tbot/twitch/api'\nimport Loading from 'tbot/components/loading'\n\nclass Commands extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            commands: [],\n            loading: true,\n        }\n    }\n\n    componentDidMount() {\n        this.getCommands()\n        document.title = `${managedUser.name} - Commands | ${tbot.name}`\n    }\n\n    getCommands() {        \n        api.get(`/api/twitch/channels/${managedUser.id}/commands-public`).then(r => {\n            this.setState({\n                commands: r.data, \n                loading: false\n            })\n        })\n    }\n\n    userLevelName(level) {\n        switch (level) {\n            case 0:\n                return ''\n                break;\n            case 1:\n                return 'Subs'\n                break;\n            case 2:\n                return 'VIPs'\n                break;\n            case 7:\n                return 'Mods'\n                break;\n            case 8:\n                return 'Admins'\n                break;\n            case 9:\n                return 'Boradcaster'\n                break;\n        }\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading />\n        let groups = []\n        for (let cmd of this.state.commands) {\n            if (!groups.includes(cmd.group_name))\n                groups.push(cmd.group_name)\n        }\n        let i = 0\n        return  <div> \n            <div className=\"header mt-4\">\n                <h1 style={{fontSize:'26px'}}>{managedUser.name} - Commands</h1>\n            </div>\n            {groups.map(group => {\n                i++\n                return <div key={'group'+i} className=\"mt-4\">\n                    <h4>{group}</h4>\n                    <table className=\"table table-dark\">\n                        <tbody>\n                            {this.state.commands.map(cmd => {\n                                if (cmd.group_name != group)\n                                    return null\n                                return <tr key={cmd.id}>\n                                    <td width=\"200px\">!{cmd.cmd}</td>\n                                    <td>{cmd.response}</td>\n                                    <td style={{'textAlign': 'right'}}>{this.userLevelName(cmd.user_level)}</td>\n                                </tr>\n                            })}\n                        </tbody>\n                    </table>\n                </div>\n            })}\n        </div>\n    }\n}\n\nexport default Commands","import React from 'react'\nimport {Route, Redirect} from \"react-router-dom\"\nimport {renderError} from 'tbot/utils'\nimport api from 'tbot/twitch/api'\nimport Loading from 'tbot/components/loading'\nimport Commands from './commands'\n\nclass Main extends React.Component {\n\n    render() {\n        if (this.state.loading) {\n            this.getChannel()\n            return <Loading text=\"LOADING\" />\n        }\n        if (this.state.error) {\n            return <div className=\"mt-5 ml-auto mr-auto\" style={{width: '600px'}}>\n                {renderError(this.state.error)}\n            </div>\n        }\n        return <div className=\"container\">\n            <Route exact path='/t/:channel/commands' component={Commands}/>\n        </div>\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            errors: null,\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            window.scrollTo(0, 0)\n        }\n    }\n\n    getChannel() {\n        window.managedUser = null\n        api.get(`/api/twitch/channel/${this.props.match.params.channel}`).then(r => {\n            window.managedUser = r.data\n            this.setState({loading: false})\n        }).catch(e => {\n            this.setState({loading: false, error: e.response.data})\n        })\n    }\n\n}\n\nexport default Main","import ReactDOM from 'react-dom';\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\n\nimport Front from 'tbot/front'\n\nimport TwitchLogviewer from 'tbot/twitch/logviewer';\nimport TwitchLogViewerSelectChannel from 'tbot/twitch/logviewer/selectchannel';\n\nimport TwitchDashboard from 'tbot/twitch/dashboard'\n\nimport TwitchPublic from 'tbot/twitch/public'\n\nimport './index.scss';\n\nReactDOM.render((\n    <BrowserRouter>\n        <Switch>\n            <Route exact path='/' component={Front}/>\n\n            <Route exact path='/twitch/logviewer' component={TwitchLogViewerSelectChannel}/>\n            <Route exact path='/twitch/logviewer/:channel' component={TwitchLogviewer}/>\n\n            <Route path='/t/:channel' component={TwitchPublic}/>\n            \n            <Route path='/twitch/dashboard' component={TwitchDashboard}/>\n            <Route path='/twitch/:channel' component={TwitchDashboard}/>\n        </Switch>\n    </BrowserRouter>\n), document.getElementById('root'));","var map = {\n\t\"./af\": 30,\n\t\"./af.js\": 30,\n\t\"./ar\": 31,\n\t\"./ar-dz\": 32,\n\t\"./ar-dz.js\": 32,\n\t\"./ar-kw\": 33,\n\t\"./ar-kw.js\": 33,\n\t\"./ar-ly\": 34,\n\t\"./ar-ly.js\": 34,\n\t\"./ar-ma\": 35,\n\t\"./ar-ma.js\": 35,\n\t\"./ar-sa\": 36,\n\t\"./ar-sa.js\": 36,\n\t\"./ar-tn\": 37,\n\t\"./ar-tn.js\": 37,\n\t\"./ar.js\": 31,\n\t\"./az\": 38,\n\t\"./az.js\": 38,\n\t\"./be\": 39,\n\t\"./be.js\": 39,\n\t\"./bg\": 40,\n\t\"./bg.js\": 40,\n\t\"./bm\": 41,\n\t\"./bm.js\": 41,\n\t\"./bn\": 42,\n\t\"./bn.js\": 42,\n\t\"./bo\": 43,\n\t\"./bo.js\": 43,\n\t\"./br\": 44,\n\t\"./br.js\": 44,\n\t\"./bs\": 45,\n\t\"./bs.js\": 45,\n\t\"./ca\": 46,\n\t\"./ca.js\": 46,\n\t\"./cs\": 47,\n\t\"./cs.js\": 47,\n\t\"./cv\": 48,\n\t\"./cv.js\": 48,\n\t\"./cy\": 49,\n\t\"./cy.js\": 49,\n\t\"./da\": 50,\n\t\"./da.js\": 50,\n\t\"./de\": 51,\n\t\"./de-at\": 52,\n\t\"./de-at.js\": 52,\n\t\"./de-ch\": 53,\n\t\"./de-ch.js\": 53,\n\t\"./de.js\": 51,\n\t\"./dv\": 54,\n\t\"./dv.js\": 54,\n\t\"./el\": 55,\n\t\"./el.js\": 55,\n\t\"./en-SG\": 56,\n\t\"./en-SG.js\": 56,\n\t\"./en-au\": 57,\n\t\"./en-au.js\": 57,\n\t\"./en-ca\": 58,\n\t\"./en-ca.js\": 58,\n\t\"./en-gb\": 59,\n\t\"./en-gb.js\": 59,\n\t\"./en-ie\": 60,\n\t\"./en-ie.js\": 60,\n\t\"./en-il\": 61,\n\t\"./en-il.js\": 61,\n\t\"./en-nz\": 62,\n\t\"./en-nz.js\": 62,\n\t\"./eo\": 63,\n\t\"./eo.js\": 63,\n\t\"./es\": 64,\n\t\"./es-do\": 65,\n\t\"./es-do.js\": 65,\n\t\"./es-us\": 66,\n\t\"./es-us.js\": 66,\n\t\"./es.js\": 64,\n\t\"./et\": 67,\n\t\"./et.js\": 67,\n\t\"./eu\": 68,\n\t\"./eu.js\": 68,\n\t\"./fa\": 69,\n\t\"./fa.js\": 69,\n\t\"./fi\": 70,\n\t\"./fi.js\": 70,\n\t\"./fo\": 71,\n\t\"./fo.js\": 71,\n\t\"./fr\": 72,\n\t\"./fr-ca\": 73,\n\t\"./fr-ca.js\": 73,\n\t\"./fr-ch\": 74,\n\t\"./fr-ch.js\": 74,\n\t\"./fr.js\": 72,\n\t\"./fy\": 75,\n\t\"./fy.js\": 75,\n\t\"./ga\": 76,\n\t\"./ga.js\": 76,\n\t\"./gd\": 77,\n\t\"./gd.js\": 77,\n\t\"./gl\": 78,\n\t\"./gl.js\": 78,\n\t\"./gom-latn\": 79,\n\t\"./gom-latn.js\": 79,\n\t\"./gu\": 80,\n\t\"./gu.js\": 80,\n\t\"./he\": 81,\n\t\"./he.js\": 81,\n\t\"./hi\": 82,\n\t\"./hi.js\": 82,\n\t\"./hr\": 83,\n\t\"./hr.js\": 83,\n\t\"./hu\": 84,\n\t\"./hu.js\": 84,\n\t\"./hy-am\": 85,\n\t\"./hy-am.js\": 85,\n\t\"./id\": 86,\n\t\"./id.js\": 86,\n\t\"./is\": 87,\n\t\"./is.js\": 87,\n\t\"./it\": 88,\n\t\"./it-ch\": 89,\n\t\"./it-ch.js\": 89,\n\t\"./it.js\": 88,\n\t\"./ja\": 90,\n\t\"./ja.js\": 90,\n\t\"./jv\": 91,\n\t\"./jv.js\": 91,\n\t\"./ka\": 92,\n\t\"./ka.js\": 92,\n\t\"./kk\": 93,\n\t\"./kk.js\": 93,\n\t\"./km\": 94,\n\t\"./km.js\": 94,\n\t\"./kn\": 95,\n\t\"./kn.js\": 95,\n\t\"./ko\": 96,\n\t\"./ko.js\": 96,\n\t\"./ku\": 97,\n\t\"./ku.js\": 97,\n\t\"./ky\": 98,\n\t\"./ky.js\": 98,\n\t\"./lb\": 99,\n\t\"./lb.js\": 99,\n\t\"./lo\": 100,\n\t\"./lo.js\": 100,\n\t\"./lt\": 101,\n\t\"./lt.js\": 101,\n\t\"./lv\": 102,\n\t\"./lv.js\": 102,\n\t\"./me\": 103,\n\t\"./me.js\": 103,\n\t\"./mi\": 104,\n\t\"./mi.js\": 104,\n\t\"./mk\": 105,\n\t\"./mk.js\": 105,\n\t\"./ml\": 106,\n\t\"./ml.js\": 106,\n\t\"./mn\": 107,\n\t\"./mn.js\": 107,\n\t\"./mr\": 108,\n\t\"./mr.js\": 108,\n\t\"./ms\": 109,\n\t\"./ms-my\": 110,\n\t\"./ms-my.js\": 110,\n\t\"./ms.js\": 109,\n\t\"./mt\": 111,\n\t\"./mt.js\": 111,\n\t\"./my\": 112,\n\t\"./my.js\": 112,\n\t\"./nb\": 113,\n\t\"./nb.js\": 113,\n\t\"./ne\": 114,\n\t\"./ne.js\": 114,\n\t\"./nl\": 115,\n\t\"./nl-be\": 116,\n\t\"./nl-be.js\": 116,\n\t\"./nl.js\": 115,\n\t\"./nn\": 117,\n\t\"./nn.js\": 117,\n\t\"./pa-in\": 118,\n\t\"./pa-in.js\": 118,\n\t\"./pl\": 119,\n\t\"./pl.js\": 119,\n\t\"./pt\": 120,\n\t\"./pt-br\": 121,\n\t\"./pt-br.js\": 121,\n\t\"./pt.js\": 120,\n\t\"./ro\": 122,\n\t\"./ro.js\": 122,\n\t\"./ru\": 123,\n\t\"./ru.js\": 123,\n\t\"./sd\": 124,\n\t\"./sd.js\": 124,\n\t\"./se\": 125,\n\t\"./se.js\": 125,\n\t\"./si\": 126,\n\t\"./si.js\": 126,\n\t\"./sk\": 127,\n\t\"./sk.js\": 127,\n\t\"./sl\": 128,\n\t\"./sl.js\": 128,\n\t\"./sq\": 129,\n\t\"./sq.js\": 129,\n\t\"./sr\": 130,\n\t\"./sr-cyrl\": 131,\n\t\"./sr-cyrl.js\": 131,\n\t\"./sr.js\": 130,\n\t\"./ss\": 132,\n\t\"./ss.js\": 132,\n\t\"./sv\": 133,\n\t\"./sv.js\": 133,\n\t\"./sw\": 134,\n\t\"./sw.js\": 134,\n\t\"./ta\": 135,\n\t\"./ta.js\": 135,\n\t\"./te\": 136,\n\t\"./te.js\": 136,\n\t\"./tet\": 137,\n\t\"./tet.js\": 137,\n\t\"./tg\": 138,\n\t\"./tg.js\": 138,\n\t\"./th\": 139,\n\t\"./th.js\": 139,\n\t\"./tl-ph\": 140,\n\t\"./tl-ph.js\": 140,\n\t\"./tlh\": 141,\n\t\"./tlh.js\": 141,\n\t\"./tr\": 142,\n\t\"./tr.js\": 142,\n\t\"./tzl\": 143,\n\t\"./tzl.js\": 143,\n\t\"./tzm\": 144,\n\t\"./tzm-latn\": 145,\n\t\"./tzm-latn.js\": 145,\n\t\"./tzm.js\": 144,\n\t\"./ug-cn\": 146,\n\t\"./ug-cn.js\": 146,\n\t\"./uk\": 147,\n\t\"./uk.js\": 147,\n\t\"./ur\": 148,\n\t\"./ur.js\": 148,\n\t\"./uz\": 149,\n\t\"./uz-latn\": 150,\n\t\"./uz-latn.js\": 150,\n\t\"./uz.js\": 149,\n\t\"./vi\": 151,\n\t\"./vi.js\": 151,\n\t\"./x-pseudo\": 152,\n\t\"./x-pseudo.js\": 152,\n\t\"./yo\": 153,\n\t\"./yo.js\": 153,\n\t\"./zh-cn\": 154,\n\t\"./zh-cn.js\": 154,\n\t\"./zh-hk\": 155,\n\t\"./zh-hk.js\": 155,\n\t\"./zh-tw\": 156,\n\t\"./zh-tw.js\": 156\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 197;","import axios from 'axios';\n\naxios.interceptors.response.use(function(response) {\n    return response;\n}, function (error) {\n    if (error.response.status == 401) {\n        let next = encodeURIComponent(\n            location.pathname + location.search\n        )\n        location.href = '/twitch/login?next='+next;\n        throw 'Not authenticated!';\n    }\n    return Promise.reject(error);\n});\n\nexport default axios;","import React from 'react'\nimport api from 'tbot/twitch/api'\nimport Loading from 'tbot/components/loading'\n\nclass SelectChannel extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            channels: [],\n            loading: true,\n        }\n    }\n\n    componentDidMount() {\n        this.getChannels()\n    }\n\n    getChannels(name) {\n        api.get(`/api/twitch/user/admin-of`, {params: {suggest_name: name}}).then(r => {\n            this.setState({\n                channels: r.data, \n                loading: false\n            })\n        })\n    }\n\n    render() {\n        return <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\">\n            <div className=\"modal-dialog\" role=\"document\" style={{margin: 0, marginTop: '3.2rem', width:'350px'}}>\n                <div className=\"modal-content\" style={{borderRadius:0}}>\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\">Channels you manage</h5>\n                        <button \n                            type=\"button\" \n                            className=\"close\" \n                            data-dismiss=\"modal\" \n                            aria-label=\"Close\" \n                            title=\"Close\"\n                            onClick={this.props.onClose}\n                        >\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <div>\n                            <input \n                                className=\"form-control\"\n                                placeholder=\"Search channel\"\n                                onChange={(e) => {this.getChannels(e.target.value)}}\n                            />\n                        </div>\n                        <div className=\"mt-2\" style={{fontSize: '26px'}}>\n                            {this.state.channels.length === 0?<div>No channels found</div>:\n                                this.state.channels.map(c => (\n                                    <div key={c.id} className=\"clickable\"><a href={`/twitch/${c.name}/dashboard`}>{c.name}</a></div>\n                                ))\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    }\n}\n\nexport default SelectChannel","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport SelectChannel from './select_channel.jsx'\nimport './sidebar.scss'\n\nclass Sidebar extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            showSelectChannel: false,\n        }\n    }\n\n    onClose = () => {\n        this.setState({showSelectChannel: false})\n    }\n\n    selectChannelClick = (e) => {\n        this.setState({showSelectChannel: true})\n    }\n\n    renderConnect() {\n        if (managedUser.level < 3)\n            return null\n        return <span> \n            <div className=\"title\">CONNECT</div>\n            <NavLink to={`/twitch/${managedUser.name}/spotify`} activeClassName=\"active\">Spotify</NavLink> \n            <NavLink to={`/twitch/${managedUser.name}/discord`} activeClassName=\"active\">Discord</NavLink> \n        </span>\n    }    \n\n    renderPoints() {\n        if (managedUser.level < 3)\n            return null\n        return <span> \n            <div className=\"title\">GAMBLING</div>\n            <NavLink to={`/twitch/${managedUser.name}/points-settings`} activeClassName=\"active\">Points Settings</NavLink> \n            <NavLink to={`/twitch/${managedUser.name}/gambling-slots-settings`} activeClassName=\"active\">Slots Settings</NavLink> \n            <NavLink to={`/twitch/${managedUser.name}/gambling-roulette-settings`} activeClassName=\"active\">Roulette Settings</NavLink> \n        </span>\n    }\n\n\n    render() {\n        return (\n            <div id=\"sidebar\" className=\"sticky-top\">\n                <div \n                    className=\"d-flex\" \n                    id=\"managed-user\" \n                    title=\"Click to change channel\"\n                    onClick={this.selectChannelClick}\n                >                    \n                    <div className=\"menuicon\"><i className=\"material-icons\">menu</i></div>\n                    <div className=\"user\">\n                        {managedUser.name}\n                    </div>\n                    <div className=\"menuicon ml-auto\"><i className=\"material-icons\">arrow_drop_down</i></div>\n                </div>\n                <div id=\"items\">\n                    {managedUser.level >= 3 ?               \n                        <NavLink to={`/twitch/${managedUser.name}/dashboard`} activeClassName=\"active\">Dashboard</NavLink>\n                    : null }\n                    \n                    <NavLink to={`/twitch/${managedUser.name}/commands`} activeClassName=\"active\">Commands</NavLink>\n                    <NavLink to={`/twitch/${managedUser.name}/timers`} activeClassName=\"active\">Timers</NavLink>\n                    <NavLink to={`/twitch/${managedUser.name}/filters`} activeClassName=\"active\">Filters</NavLink>\n                    <NavLink to={`/twitch/${managedUser.name}/banned-words`} activeClassName=\"active\">Banned words</NavLink>\n                    <NavLink to={`/twitch/${managedUser.name}/chat-alerts`} activeClassName=\"active\">Chat alerts</NavLink>\n                    \n                    {managedUser.level >= 3 ?\n                        <NavLink to={`/twitch/${managedUser.name}/admins`} activeClassName=\"active\">Admins</NavLink>\n                    : null }\n\n                    {this.renderPoints()}\n\n                    {this.renderConnect()}\n\n                    <div className=\"title\">LINKS</div>\n                    <NavLink to={`/twitch/logviewer/${managedUser.name}`}>Logviewer</NavLink> \n\n                </div>\n                {this.state.showSelectChannel?\n                    <SelectChannel onClose={this.onClose} />\n                :null}\n            </div>\n        )\n    }\n\n}\n\nexport default Sidebar","import React from 'react'\nimport {NavLink} from 'react-router-dom'\n\nimport './topbar.scss'\n\nclass Sidebar extends React.Component {\n\n    render() {\n        return (\n            <div id=\"topbar\" className=\"sticky-top\">\n                <div className=\"title\" id=\"top-title\"></div>\n                <div className=\"signed-as\">Signed in as <b>{tbot['twitch_user']['user']}</b>, <a href=\"/twitch/logout\">log out</a></div>\n            </div>\n        )\n    }\n\n}\n\nexport default Sidebar","import React from 'react'\nimport api from 'tbot/twitch/api'\n\nclass BotControls extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n        this.state = {\n            settings: null,\n        }\n\t}\n\n    componentDidMount() {\n        this.getSettings()\n    }\n\n    getSettings() {\n        api.get(`/api/twitch/channels/${managedUser.id}/bot-settings`).then(r => {\n            this.setState({settings: r.data})\n        })\n    }\n\n\tjoinClick = () => {\n\t\tapi.post(`/api/twitch/channels/${managedUser.id}/bot-join`).then(r => {\n   \t\t\tthis.getSettings();\n        })\n\t}\n\n    partClick = () => {\n        api.delete(`/api/twitch/channels/${managedUser.id}/bot-join`).then(r => {\n            this.getSettings();\n        })\n    }\n\n    muteClick = () => {\n        api.post(`/api/twitch/channels/${managedUser.id}/bot-mute`).then(r => {\n            this.getSettings();\n        })\n    }\n\n    unmuteClick = () => {\n        api.delete(`/api/twitch/channels/${managedUser.id}/bot-mute`).then(r => {\n            this.getSettings();\n        })\n    }\n\n    enableChatlogClick = () => {\n        api.post(`/api/twitch/channels/${managedUser.id}/bot-enable-chatlog`).then(r => {\n            this.getSettings();\n        })\n    }\n\n    disableChatlogClick = () => {\n        api.delete(`/api/twitch/channels/${managedUser.id}/bot-enable-chatlog`).then(r => {\n            this.getSettings();\n        })\n    }\n\n    render() {\n        if (!this.state.settings)\n            return null;\n        return <div className=\"box\">\n            <div className=\"title\">Bot Controls</div>\n            <div className=\"buttons\">\n                {!this.state.settings.active?\n                    <button className=\"btn btn-success\" onClick={this.joinClick}>Join channel</button>\n                :null}\n                {this.state.settings.active?\n                    <button className=\"btn btn-danger\" onClick={this.partClick}>Part channel</button>\n                :null}\n\n                {!this.state.settings.muted?\n                    <button className=\"btn btn-secondary\" onClick={this.muteClick}>Mute bot</button>\n                :null}\n                {this.state.settings.muted?\n                    <button className=\"btn btn-secondary\" onClick={this.unmuteClick}>Unmute bot</button>\n                :null}         \n\n                {!this.state.settings.chatlog_enabled?\n                    <button className=\"btn btn-secondary\" onClick={this.enableChatlogClick}>Enable chatlog</button>\n                :null}\n                {this.state.settings.chatlog_enabled?\n                    <button className=\"btn btn-secondary\" onClick={this.disableChatlogClick}>Disable chatlog</button>\n                :null}\n            </div>\n        </div>\n    }\n}\n\nexport default BotControls","import React from 'react'\nimport api from 'tbot/twitch/api'\n\nclass ExtraAuth extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            data: null,\n        }\n    }\n\n    componentDidMount() {\n        this.getData()\n    }\n\n    getData() {\n        api.get(`/api/twitch/channels/${managedUser.id}/check-extra-auth`).then(r => {\n            this.setState({data: r.data, 'loading': false})\n        })\n    }\n\n    render() {\n        if (this.state.loading)\n            return null\n        if (this.state.data.has_extra_auth)\n            return null\n        return <div className=\"box mr-3\" style={{width: '400px'}}>\n            <div className=\"title\">Extra authorization</div>\n            <div className=\"content\">\n                For the bot to be able to change title, game category and \n                read subscribers, extra authorization is needed.\n\n                <div className=\"d-flex mt-3 mb-3\">\n                    <div className=\"ml-auto mr-auto\">\n                        <a \n                            href=\"/twitch/login?request_extra_auth=true\"\n                            className=\"btn btn-success\"\n                        >\n                            Grant extra authorization\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    }\n}\n\nexport default ExtraAuth","import React from 'react'\nimport {Redirect} from 'react-router'\nimport api from 'tbot/twitch/api'\nimport BotControls from './components/bot_controls'\nimport ExtraAuth from './components/extra_auth'\nimport {setHeader} from 'tbot/utils'\n\nclass Dashboard extends React.Component {\n\n    componentDidMount() {\n        setHeader('Dashboard')\n    }\n\n    render() {\n        if (managedUser.level < 3) \n            return <Redirect to={`/twitch/${managedUser.name}/commands`} />\n        return <div className=\"d-flex\">\n            <ExtraAuth />\n            <div style={{width: '200px'}}>\n                <BotControls />\n            </div>\n        </div>\n    }\n}\n\nexport default Dashboard","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport api from 'tbot/twitch/api'\nimport Loading from 'tbot/components/loading'\nimport {setHeader} from 'tbot/utils'\nimport {userLevelName, enabledWhenName} from 'tbot/twitch/utils'\n\nclass Commands extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            commands: [],\n            loading: true,\n        }\n    }\n\n    componentDidMount() {\n        setHeader('Commands')\n        this.getCommands()\n    }\n\n    getCommands() {        \n        api.get(`/api/twitch/channels/${managedUser.id}/commands`).then(r => {\n            this.setState({\n                commands: r.data, \n                loading: false\n            })\n        })\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading />\n        return  <div> \n                <div className=\"d-flex mb-2\">\n                    <div>\n                        <Link className=\"btn btn-primary\" to=\"commands/new\">New command</Link>\n                    </div>\n                    <div className=\"ml-auto\">\n                        <a href={`/t/${managedUser.name}/commands`} target=\"_blank\" className=\"btn btn-link\">Public commands</a>\n                    </div>\n                </div>\n                <table className=\"table table-dark table-hover\">\n                <thead>\n                    <tr>\n                        <th width=\"100px\">Command</th>\n                        <th>Response</th>\n                        <th width=\"5px\" title=\"Global cooldown\">GCD</th>\n                        <th width=\"5px\" title=\"User cooldown\">UCD</th>\n                        <th width=\"100px\" title=\"User level\">UL</th>\n                        <th width=\"5px\" title=\"Enabled when stream is\">ES</th>\n                        <th width=\"5px\" title=\"Enabled\">E</th>\n                        <th width=\"5px\"></th>\n                    </tr>\n                </thead>\n                <tbody>                    \n                    {this.state.commands.length>0?this.state.commands.map(cmd =>\n                        <tr key={cmd.id}>\n                            <td>!{cmd.cmd}</td>\n                            <td className=\"td-ellipsis\">{cmd.response}</td>\n                            <td>{cmd.global_cooldown}</td>\n                            <td>{cmd.user_cooldown}</td>\n                            <td>{userLevelName(cmd.user_level)}</td>\n                            <td>{enabledWhenName(cmd.enabled_status)}</td>\n                            <td>{cmd.enabled==1?'Yes':'No'}</td>\n                            <td className=\"text-right\"><Link to={`commands/edit/${cmd.id}`}>Edit</Link></td>\n                        </tr>\n                    ): <tr><td colSpan=\"8\" className=\"text-center\">No commands, <Link to=\"commands/new\">create one.</Link></td></tr>}\n                </tbody>\n            </table>\n        </div>\n    }\n}\n\nexport default Commands","import React from 'react'\nimport {Redirect} from 'react-router'\nimport api from 'tbot/twitch/api'\nimport Loading from 'tbot/components/loading'\nimport {setHeader, renderError} from 'tbot/utils'\nimport {userLevelName, enabledWhenName} from 'tbot/twitch/utils'\n\nclass Command extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            cmd: {\n                cmd: '',\n                response: '',\n                user_level: 0,\n                enabled_status: 0,\n                global_cooldown: 5,\n                user_cooldown: 15,\n                mod_cooldown: 0,\n                enabled: 1,\n                public: 1,\n                group_name: '',\n            },\n            templates: [],\n            loading: true,\n            error: null,\n            saving: false,\n            success: false,\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            setHeader('Edit command')\n            this.getCommand()\n        } else {            \n            setHeader('New command')\n            this.getTemplates()\n            this.setState({loading: false})\n        }\n    }\n\n    getCommand() {        \n        let id = this.props.match.params.id\n        api.get(`/api/twitch/channels/${managedUser.id}/commands/${id}`).then(r => {\n            for (let key in r.data) {\n                if (!(key in this.state.cmd))\n                    delete r.data[key]\n            }\n            this.setState({\n                cmd: r.data, \n                loading: false\n            })\n            setHeader(`Edit command: !${r.data.cmd}`)\n        })\n    }\n\n    getTemplates() {        \n        let id = this.props.match.params.id\n        api.get(`/api/twitch/template-commands`).then(r => {\n            this.setState({\n                templates: r.data,\n            })\n        })\n    }\n\n    handleEvent = (e) => {\n        let val = e.target.type === 'checkbox' ? e.target.checked : e.target.value\n        this.state.cmd[e.target.name] = val\n        this.setState({cmd: this.state.cmd})\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.setState({saving: true, error: null})\n        let id = this.props.match.params.id\n        if (id)\n            api.put(`/api/twitch/channels/${managedUser.id}/commands/${id}`, this.state.cmd).then(r => {\n                this.setState({success: true})\n            }).catch(e => {\n                this.setState({error: e.response.data, saving: false})\n            })\n        else \n            api.post(`/api/twitch/channels/${managedUser.id}/commands`, this.state.cmd).then(r => {\n                this.setState({success: true})\n            }).catch(e => {\n                this.setState({error: e.response.data, saving: false})\n            })\n    }\n\n    handleDelete = () => {\n        if (!confirm(`Delete command: ${this.state.cmd.cmd}?`))\n            return\n        this.setState({deleting: true, error: null})\n        let id = this.props.match.params.id\n        api.delete(`/api/twitch/channels/${managedUser.id}/commands/${id}`).then(r => {\n            this.setState({\n                cmd: r.data, \n                success: true,\n            })\n        }).catch(e => {\n            this.setState({error: e.response.data, deleting: false})\n        })\n    }\n\n    handleTemplate = (e) => {\n        for (let t of this.state.templates) {\n            if (t.cmd == e.target.value){\n                let d = JSON.parse(JSON.stringify(t))\n                for (let key in d) {\n                    if (!(key in this.state.cmd))\n                        delete d[key]\n                }\n                this.setState({cmd: d})\n            }\n        }\n    }\n\n    renderButton() {\n        if (this.state.saving)\n            return <button className=\"btn btn-primary\" type=\"button\" disabled>\n                    <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> Saving...\n                </button>\n        return <button type=\"submit\" className=\"btn btn-primary\">Save command</button>\n    }\n\n    renderDeleteButton() {\n        if (!this.props.match.params.id)\n            return null\n        if (this.state.deleting)\n            return <button className=\"ml-2 btn btn-danger\" type=\"button\" disabled>\n                    <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> Deleting...\n                </button>\n        return <button type=\"button\" onClick={this.handleDelete} className=\"ml-2 btn btn-danger\">Delete command</button>\n    }\n\n    renderTemplates() {\n        if (this.state.templates.length === 0)\n            return null\n        let groups = []\n        for (let cmd of this.state.templates) {\n            if (!groups.includes(cmd.group_name))\n                groups.push(cmd.group_name)\n        }\n        let i = 0\n        return <div className=\"mb-4\">\n            <label>Templates</label>\n            <select className=\"form-control\" onChange={this.handleTemplate}>\n                <option value=\"\"></option>\n                {groups.map(group => {\n                    i++;\n                    return <optgroup key={'group'+i} label={group}>\n                        {this.state.templates.map(temp => {                            \n                            if (temp.group_name != group)\n                                return null\n                            return <option key={temp.cmd} value={temp.cmd}>\n                                {temp.title}\n                            </option>\n                        })}                        \n                    </optgroup>\n                    }\n                )}\n            </select>\n        </div>\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading />\n        if (this.state.success)\n            return <Redirect to={`/twitch/${this.props.match.params.channel}/commands`} />\n\n        return <div style={{maxWidth:'700px'}}>\n            {this.renderTemplates()}\n            <form onSubmit={this.handleSubmit}>\n            <div className=\"form-group\">\n                <label htmlFor=\"cmd\">Command</label>\n                <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                        <div className=\"input-group-text\">!</div>\n                    </div>\n                    <input \n                        className=\"form-control\" \n                        id=\"cmd\" \n                        name=\"cmd\" \n                        value={this.state.cmd.cmd}\n                        onChange={this.handleEvent}\n                        autoFocus\n                        required\n                    />\n                </div>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"response\">Response (<a href=\"https://docs.botashell.com\" target=\"_blank\">Variables documentation</a>)</label>\n                <input \n                    className=\"form-control\" \n                    id=\"response\" \n                    name=\"response\" \n                    value={this.state.cmd.response}\n                    onChange={this.handleEvent}\n                    required\n                />\n            </div>\n\n            <div className=\"form-row\">\n                <div className=\"form-group col-md-4\">\n                    <label htmlFor=\"user_level\">User level</label>\n                    <select \n                        type=\"text\" \n                        className=\"form-control\" \n                        id=\"user_level\" \n                        name=\"user_level\" \n                        value={this.state.cmd.user_level}\n                        onChange={this.handleEvent}\n                    >\n                        <option value=\"0\">{userLevelName(0)}</option>\n                        <option value=\"1\">{userLevelName(1)}</option>\n                        <option value=\"2\">{userLevelName(2)}</option>\n                        <option value=\"7\">{userLevelName(7)}</option>\n                        <option value=\"8\">{userLevelName(8)}</option>\n                        <option value=\"9\">{userLevelName(9)}</option>\n                    </select>\n                </div>\n                <div className=\"form-group col-md-4\">\n                    <label htmlFor=\"enabled_status\">Enabled when stream is</label>\n                    <select \n                        type=\"text\" \n                        className=\"form-control\" \n                        id=\"enabled_status\" \n                        name=\"enabled_status\" \n                        value={this.state.cmd.enabled_status}\n                        onChange={this.handleEvent}\n                    >\n                        <option value=\"0\">{enabledWhenName(0)}</option>\n                        <option value=\"1\">{enabledWhenName(1)}</option>\n                        <option value=\"2\">{enabledWhenName(2)}</option>\n                    </select>\n                </div>\n                <div className=\"form-group col-md-4\">\n                    <label htmlFor=\"group_name\" title=\"Used to group the commands on the public commands page\">Group</label>\n                    <input \n                        id=\"group_name\" \n                        type=\"text\" \n                        className=\"form-control\" \n                        name=\"group_name\" \n                        value={this.state.cmd.group_name}\n                        onChange={this.handleEvent}\n                    />\n                </div>\n            </div>\n\n            <div className=\"form-row\">\n                <div className=\"form-group col-md-4\">\n                    <label htmlFor=\"global_cooldown\">Global cooldown</label>\n                    <input \n                        id=\"global_cooldown\" \n                        type=\"number\" \n                        className=\"form-control\" \n                        name=\"global_cooldown\" \n                        value={this.state.cmd.global_cooldown}\n                        onChange={this.handleEvent}\n                    />\n                </div>\n                <div className=\"form-group col-md-4\">\n                    <label htmlFor=\"user_cooldown\">User cooldown</label>\n                    <input \n                        id=\"user_cooldown\" \n                        type=\"number\" \n                        className=\"form-control\" \n                        name=\"user_cooldown\" \n                        value={this.state.cmd.user_cooldown}\n                        onChange={this.handleEvent}\n                    />\n                </div>\n                <div className=\"form-group col-md-4\">\n                    <label htmlFor=\"mod_cooldown\">Mod cooldown</label>\n                    <input \n                        id=\"mod_cooldown\" \n                        type=\"number\" \n                        className=\"form-control\" \n                        name=\"mod_cooldown\" \n                        value={this.state.cmd.mod_cooldown}\n                        onChange={this.handleEvent}\n                    />\n                </div>\n            </div>\n            <div className=\"form-group\">\n                <div className=\"custom-control custom-checkbox\">\n                    <input \n                        name=\"enabled\"\n                        type=\"checkbox\" \n                        className=\"custom-control-input\" \n                        id=\"enabled\"\n                        checked={this.state.cmd.enabled}\n                        onChange={this.handleEvent} \n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"enabled\">Enabled</label>\n                </div>\n            </div>\n            <div className=\"form-group\">\n                <div className=\"custom-control custom-checkbox\">\n                    <input \n                        name=\"public\"\n                        type=\"checkbox\" \n                        className=\"custom-control-input\" \n                        id=\"public\"\n                        checked={this.state.cmd.public}\n                        onChange={this.handleEvent} \n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"public\">Public (show it on the command list page)</label>\n                </div>\n            </div>\n            {renderError(this.state.error)}\n            {this.renderButton()}\n            {this.renderDeleteButton()}\n        </form>\n        </div>\n    }\n}\n\nexport default Command","import React from 'react'\nimport api from 'tbot/twitch/api'\nimport BotControls from './components/bot_controls'\nimport {setHeader} from 'tbot/utils'\nimport Loading from 'tbot/components/loading'\n\nclass Spotify extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            spotify: {},\n            connecting: false,\n            deleting: false,\n        }\n    }\n\n    componentDidMount() {\n        setHeader('Spotify')\n        this.getStatus()\n    }\n\n    getStatus() {\n        this.setState({loading: true})\n        api.get(`/api/twitch/channels/${managedUser.id}/spotify`).then(r => {\n            this.setState({spotify: r.data, loading: false})\n        })\n    }\n\n    handleSubmit = () => {\n        this.setState({connecting: true})\n    }\n\n    handleDelete = (e) => {\n        e.preventDefault()\n        this.setState({deleting: true})        \n        api.delete(`/api/twitch/channels/${managedUser.id}/spotify`).then(r => {\n            this.setState({spotify: {}, deleting: false})\n        })\n    }\n\n    render() {\n        if (this.state.loading) \n            return <Loading />\n        if (this.state.spotify.connected)\n            return <div>\n                <div className=\"mb-3\">\n                    Connected to Spotify account: {this.state.spotify.user}\n                </div>\n                <form method=\"post\" onSubmit={this.handleDelete}>\n                    <button type=\"submit\" className=\"btn btn-danger\">\n                        Disconnect Spotify\n                    </button>\n                </form>\n            </div>\n        return <div>\n            <form method=\"post\" onSubmit={this.handleSubmit} action={`/api/twitch/channels/${managedUser.id}/spotify`}>\n                <button type=\"submit\" className=\"btn btn-success\">\n                    Connect Spotify\n                </button>\n            </form>\n        </div>\n    }\n}\n\nexport default Spotify","import React from 'react'\nimport api from 'tbot/twitch/api'\n\nclass DiscordConnect extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            discord: {},\n            connecting: false,\n            deleting: false,\n        }\n    }\n\n    componentDidMount() {\n        this.getStatus()\n    }\n\n    getStatus() {\n        this.setState({loading: true})\n        api.get(`/api/twitch/channels/${managedUser.id}/discord`).then(r => {\n            this.setState({discord: r.data, loading: false})\n        })\n    }\n\n    handleSubmit = () => {\n        this.setState({connecting: true})\n    }\n\n    handleDelete = (e) => {\n        e.preventDefault()\n        this.setState({deleting: true})        \n        api.delete(`/api/twitch/channels/${managedUser.id}/discord`).then(r => {\n            this.setState({discord: {}, deleting: false})\n        })\n    }\n\n    renderButton() {\n        if (this.state.loading) \n            return <button className=\"btn btn-info\" type=\"button\" disabled>\n                <span \n                    className=\"spinner-border spinner-border-sm\" \n                    role=\"status\" \n                    aria-hidden=\"true\">\n                </span> Loading discord status...\n            </button>\n        if (this.state.connecting) \n            return <button className=\"btn btn-info\" type=\"button\" disabled>\n                <span \n                    className=\"spinner-border spinner-border-sm\" \n                    role=\"status\" \n                    aria-hidden=\"true\">\n                </span> Connecting discord...\n            </button>\n        if (this.state.deleting) \n            return <button className=\"btn btn-info\" type=\"button\" disabled>\n                <span \n                    className=\"spinner-border spinner-border-sm\" \n                    role=\"status\" \n                    aria-hidden=\"true\">\n                </span> Deleting connection discord...\n            </button>\n        if (this.state.discord.connected)\n            return <button type=\"submit\" className=\"btn btn-danger\">\n                Disconnect from Discord\n            </button>\n        return <button type=\"submit\" className=\"btn btn-success\">\n            Connect Discord\n        </button>\n    }\n\n    render() {\n        if (this.state.discord.connected)\n            return <div>\n                <div className=\"mb-3\">\n                    Connected to Discord server: {this.state.discord.name}\n                </div>\n                <form method=\"post\" onSubmit={this.handleDelete}>\n                    {this.renderButton()}\n                </form>\n            </div>\n        return <div>\n            <form method=\"post\" onSubmit={this.handleSubmit} action={`/api/twitch/channels/${managedUser.id}/discord`}>\n                {this.renderButton()}\n            </form>\n        </div>\n    }\n}\n\nexport default DiscordConnect","import React from 'react'\nimport api from 'tbot/twitch/api'\nimport SaveButton from 'tbot/components/save_button'\nimport {renderError} from 'tbot/utils'\n\nclass DiscordConnect extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            saving: false,\n            saved: false,\n            error: null,\n            data: {\n                'webhook_url': '',\n                'message': '@everyone {name} is LIVE {url}',\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.getStatus()\n    }\n\n    getStatus() {\n        this.setState({loading: true})\n        api.get(`/api/twitch/channels/${managedUser.id}/discord-live-notification`).then(r => {\n            this.setState({data: r.data, loading: false})\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.setState({saving: true, error: null})\n        api.put(`/api/twitch/channels/${managedUser.id}/discord-live-notification`, this.state.data).then(r => {\n            this.setState({saved: true, saving: false})\n        }).catch(e => {\n            this.setState({error: e.response.data, saving: false})\n        })\n    }\n\n    handleEvent = (e) => {\n        this.state.data[e.target.name] = e.target.value\n        this.setState({data: this.state.data, saved: false})\n    }\n\n    render() {\n        return <form style={{maxWidth:'700px'}} onSubmit={this.handleSubmit}>  \n            <div className=\"form-group mb-2\">\n                <label htmlFor=\"webhook_url\">Webhook URL</label>\n                <input \n                    className=\"form-control\" \n                    id=\"webhook_url\" \n                    name=\"webhook_url\" \n                    value={this.state.data.webhook_url}\n                    onChange={this.handleEvent}\n                />\n                <div className=\"alert alert-info mt-1\">In Discord right click on the channel > Edit channel > Webhooks > \n                    Create webhook > Copy the Webhook URL</div>\n            </div>            \n            <div className=\"form-group mb-2\">\n                <label htmlFor=\"message\">Message</label>\n                <input \n                    className=\"form-control\" \n                    id=\"message\" \n                    name=\"message\" \n                    value={this.state.data.message}\n                    onChange={this.handleEvent}\n                />\n                <div>Variables: {`{name}`} {`{url}`}</div>\n            </div>  \n            {renderError(this.state.error)}\n            <SaveButton \n                isSaving={this.state.saving} \n                isSaved={this.state.saved}\n                savedText={`Saved`}\n            >\n                Save\n            </SaveButton>\n        </form>\n    }\n}\n\nexport default DiscordConnect","import React from 'react'\nimport api from 'tbot/twitch/api'\nimport {setHeader} from 'tbot/utils'\nimport Loading from 'tbot/components/loading'\nimport ConnectButton from './components/discord_connect'\nimport DiscordLive from './components/discord_live_notification'\n\nclass Discord extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n        }\n    }\n\n    componentDidMount() {\n        setHeader('Discord')\n    }\n\n    render() {\n        return <>\n            <div className=\"mb-4\">\n                <h2>Sub role sync</h2>\n                <ConnectButton />\n            </div>\n            <div>                \n                <h2>Live Notification</h2>\n                <DiscordLive />\n            </div>\n        </>\n    }\n}\n\nexport default Discord","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport api from 'tbot/twitch/api'\nimport Loading from 'tbot/components/loading'\nimport {setHeader} from 'tbot/utils'\n\nclass Admins extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            admins: [],\n            loading: true,\n            newAdmin: {\n                user: '',\n                level: 1\n            },\n        }\n        this.levels = [\n            {'name': 'Control commands', 'level': 1},\n            {'name': 'Full control', 'level': 3},\n        ]\n    }\n\n    componentDidMount() {\n        setHeader('Admins')\n        this.getAdmins()\n    }\n\n    getAdmins() {        \n        api.get(`/api/twitch/channels/${managedUser.id}/admins`).then(r => {\n            this.setState({\n                admins: r.data, \n                loading: false\n            })\n        })\n    }\n    \n    handleNewEvent = (e) => {\n        let val = e.target.type === 'checkbox' ? e.target.checked : e.target.value\n        this.state.newAdmin[e.target.name] = val\n        this.setState({newAdmin: this.state.newAdmin})\n    }\n    \n    handleNewSubmit = (e) => {\n        e.preventDefault()\n        api.post(`/api/twitch/channels/${managedUser.id}/admins`, this.state.newAdmin).then(r => {\n            this.setState({newAdmin: {user: '', level: 1}})\n            this.getAdmins()\n        }).catch(e => {\n            alert(e.response.data.message)\n        })\n    }\n\n    handleDelete = (admin) => {\n        if (!confirm(`Delete ${admin.name}?`))\n            return\n        api.delete(`/api/twitch/channels/${managedUser.id}/admins/${admin.id}`).then(r => {\n            this.getAdmins()\n        }).catch(e => {\n            alert(e.response.data.message)\n        })   \n    }\n\n    handleChangeLevel = (e, admin) => {\n        api.put(`/api/twitch/channels/${managedUser.id}/admins/${admin.id}`, {\n            level: e.target.value,\n        }).then(r => {\n            this.getAdmins()\n        }).catch(e => {\n            alert(e.response.data.message)\n        }) \n    }\n\n    renderNewAdmin() {\n        return <form className=\"form-inline\" onSubmit={this.handleNewSubmit}>\n            <div className=\"form-group\">\n                <input \n                    className=\"form-control mr-2\" \n                    name=\"user\" \n                    placeholder=\"User\"\n                    value={this.state.newAdmin.user}\n                    onChange={this.handleNewEvent}\n                 />\n            </div>\n            <select \n                name=\"level\" \n                className=\"form-control mr-2\"\n                value={this.state.newAdmin.level}\n                onChange={this.handleNewEvent}\n            >\n                {this.levels.map(l => (\n                    <option key={l.level} value={l.level}>{l.name}</option>\n                ))}\n            </select>\n            <button type=\"submit\" className=\"btn btn-primary\">Create</button>\n        </form>\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading />\n        return  <div> \n                <div className=\"d-flex mb-4\">\n                    {this.renderNewAdmin()}\n                </div>\n                <table style={{maxWidth: '500px'}} className=\"table table-dark table-hover\">\n                <thead>\n                    <tr>\n                        <th>User</th>\n                        <th width=\"250px\">Level</th>\n                        <th width=\"1px\"> </th>\n                    </tr>\n                </thead>\n                <tbody>                    \n                    {this.state.admins.length>0?this.state.admins.map(admin =>\n                        <tr key={admin.id}>\n                            <td className=\"align-middle\">{admin.name}</td>\n                            <td>\n                                <select \n                                    name=\"level\" \n                                    className=\"form-control\"\n                                    value={admin.level}\n                                    onChange={(e) => {this.handleChangeLevel(e, admin)}}\n                                >\n                                    {this.levels.map(l => (\n                                        <option key={l.level} value={l.level}>{l.name}</option>\n                                    ))}\n                                </select>\n                            </td>\n                            <td className=\"text-right align-middle\">\n                                <i \n                                    className=\"material-icons clickable\" \n                                    title=\"Delete admin\"\n                                    onClick={() => {this.handleDelete(admin)}}\n                                >\n                                    delete_forever\n                                </i>\n                            </td>\n                        </tr>\n                    ): <tr><td colSpan=\"3\" className=\"text-center\">No admins</td></tr>}\n                </tbody>\n            </table>\n        </div>\n    }\n}\n\nexport default Admins","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport api from 'tbot/twitch/api'\nimport {setHeader} from 'tbot/utils'\nimport Loading from 'tbot/components/loading'\n\nimport './filters.scss'\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            filters: {},\n        }\n        this.filters = [\n            {\n                'title': 'Link filter',\n                'type': 'link',\n                'desc': 'Remove links in chat.',\n            },\n            {\n                'title': 'Paragraph filter',\n                'type': 'paragraph',\n                'desc': 'Remove long messages.',\n            },\n            {\n                'title': 'Symbol filter',\n                'type': 'symbol',\n                'desc': 'Remove excessive use of symbols.',\n            },\n            {\n                'title': 'Caps filter',\n                'type': 'caps',\n                'desc': 'Remove excessive use of caps.',\n            },\n            {\n                'title': 'Emote filter',\n                'type': 'emote',\n                'desc': 'Remove excessive use of emotes.',\n            },\n            {\n                'title': 'Non-latin filter',\n                'type': 'non-latin',\n                'desc': 'Remove non-latin text',\n            },\n            {\n                'title': 'Action filter',\n                'type': 'action',\n                'desc': 'Remove colored /me text',\n            },\n        ]\n    }\n\n    componentDidMount() {\n        setHeader('Filters')\n        this.getFilters()\n    }\n\n    getFilters() {\n        api.get(`/api/twitch/channels/${managedUser.id}/filters`).then(r => {\n            this.setState({\n                loading: false,\n                filters: r.data,\n            })\n        })\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading text=\"Loading filters\" />\n        return <div id=\"filters\" className=\"d-flex flex-wrap\">\n            {this.filters.map(f => (\n                <Link key={f.type} to={`/twitch/${managedUser.name}/filters/${f.type}`}>\n                    <div className=\"filter\">\n                        <div className=\"title\">{f.title}</div>\n                        <div className=\"description\">{f.desc}</div>\n                        <div className=\"status\">\n                            {(f.type in this.state.filters && this.state.filters[f.type].enabled)?\n                                <strong className=\"text-success\">Enabled</strong>:\n                                <span className=\"text-info\">Not enabled</span>\n                            }\n                        </div>\n                    </div>\n                </Link>\n            ))}\n        </div>\n    }\n\n}\n\nexport default Filters","import React from 'react'\nimport {userLevelName} from 'tbot/twitch/utils'\n\nclass Filter extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            saving: false,\n            saved: false,\n            error: null,\n            filter: {\n                enabled: false,\n                exclude_user_level: 1,\n                warning_enabled: true,\n                warning_message: '',\n                warning_expire: 3600,\n                timeout_message: '',\n                timeout_duration: 60,\n            },\n        }\n    }\n\n    handleEvent = (e) => {\n        let val = e.target.type === 'checkbox' ? e.target.checked : e.target.value\n        this.state.filter[e.target.name] = val\n        this.setState({filter: this.state.filter})\n    }\n\n    renderBase() {\n        return <>\n            <div className=\"form-group mb-4\" style={{width: '200px'}}>\n                <label htmlFor=\"exclude_user_level\">Exclude user level</label>\n                <select \n                    type=\"text\" \n                    className=\"form-control\" \n                    id=\"exclude_user_level\" \n                    name=\"exclude_user_level\" \n                    value={this.state.filter.exclude_user_level}\n                    onChange={this.handleEvent}\n                >\n                    <option value=\"1\">{userLevelName(1)}</option>\n                    <option value=\"2\">{userLevelName(2)}</option>\n                    <option value=\"7\">{userLevelName(7)}</option>\n                </select>\n            </div>\n\n            <h5>Warning</h5>\n            <div className=\"form-group mb-2\">\n                <div className=\"custom-control custom-checkbox\">\n                    <input \n                        name=\"warning_enabled\"\n                        type=\"checkbox\" \n                        className=\"custom-control-input\" \n                        id=\"warning_enabled\"\n                        checked={this.state.filter.warning_enabled}\n                        onChange={this.handleEvent} \n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"warning_enabled\">Enable warning</label>\n                </div>\n            </div>\n            <div className=\"form-group mb-2\">\n                <label htmlFor=\"warning_message\">Warning message (<a href=\"https://docs.botashell.com\" target=\"_blank\">Variables documentation</a>)</label>\n                <input \n                    className=\"form-control\" \n                    id=\"warning_message\" \n                    name=\"warning_message\" \n                    value={this.state.filter.warning_message}\n                    onChange={this.handleEvent}\n                />\n            </div>\n            <div className=\"form-group mb-4\">\n                <label htmlFor=\"warning_expire\">Warning expires after</label>\n                <div className=\"input-group\" style={{width: '160px'}}>\n                    <input \n                        id=\"warning_expire\" \n                        type=\"number\" \n                        className=\"form-control text-right\" \n                        name=\"warning_expire\" \n                        value={this.state.filter.warning_expire}\n                        onChange={this.handleEvent}\n                        required\n                    />\n                    <div className=\"input-group-append\">\n                        <div className=\"input-group-text\">seconds</div>\n                    </div>\n                </div>\n            </div>\n\n            <h5>Timeout</h5>\n            <div className=\"form-group mb-2\">\n                <label htmlFor=\"timeout_message\">Timeout message  (<a href=\"https://docs.botashell.com\" target=\"_blank\">Variables documentation</a>)</label>\n                <input \n                    className=\"form-control\" \n                    id=\"timeout_message\" \n                    name=\"timeout_message\" \n                    value={this.state.filter.timeout_message}\n                    onChange={this.handleEvent}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"timeout_duration\">Timeout duration</label>\n                <div className=\"input-group\" style={{width: '160px'}}>\n                    <input \n                        id=\"timeout_duration\" \n                        type=\"number\" \n                        className=\"form-control text-right\" \n                        name=\"timeout_duration\" \n                        value={this.state.filter.timeout_duration}\n                        onChange={this.handleEvent}\n                        required\n                    />\n                    <div className=\"input-group-append\">\n                        <div className=\"input-group-text\">seconds</div>\n                    </div>\n                </div>\n            </div>\n        </>\n    }\n}\n\nexport default Filter","import React from 'react'\nimport {Redirect} from 'react-router'\nimport api from 'tbot/twitch/api'\nimport {setHeader, renderError} from 'tbot/utils'\nimport Loading from 'tbot/components/loading'\nimport SaveButton from 'tbot/components/save_button'\nimport Filter from './components/filter'\n\nclass Filter_link extends Filter {\n\n    constructor(props) {\n        super(props)\n        this.state.filter.warning_message = '@{sender}, You are not permitted to post links [warning]'\n        this.state.filter.timeout_message = '@{sender}, You are not permitted to post links'\n        this.state.filter.whitelist = []\n    }\n\n    componentDidMount() {\n        setHeader('Link filter')\n        this.getFilters()\n    }\n\n    getFilters() {\n        api.get(`/api/twitch/channels/${managedUser.id}/filters/link`).then(r => {\n            if (!r.data) {\n                this.setState({loading: false})\n                return\n            }\n            for (let key in r.data) {\n                if (!(key in this.state.filter))\n                    delete r.data[key]\n            }\n            r.data.whitelist = r.data.whitelist.join('\\n')\n            this.setState({\n                loading: false,\n                filter: r.data,\n            })\n        })\n    }\n\n    submit = (e) => {\n        e.preventDefault()\n        if (!Array.isArray(this.state.filter.whitelist))\n            this.state.filter.whitelist = this.state.filter.whitelist.split('\\n')\n        this.state.filter.whitelist = this.state.filter.whitelist.filter(e => (\n            e != ''\n        ))\n        api.put(`/api/twitch/channels/${managedUser.id}/filters/link`, this.state.filter).then(r => {\n            this.setState({saved: true})\n        }).catch(e => {            \n            this.state.filter.whitelist = this.state.filter.whitelist.join('\\n')\n            this.setState({error: e.response.data, saving: false})\n        })\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading text=\"Loading filter\" />\n        if (this.state.saved)\n            return <Redirect to={`/twitch/${managedUser.name}/filters`} />\n        return <form style={{maxWidth:'700px'}} onSubmit={this.submit}>\n            <div className=\"form-group\">\n                <div className=\"custom-control custom-checkbox\">\n                    <input \n                        name=\"enabled\"\n                        type=\"checkbox\" \n                        className=\"custom-control-input\" \n                        id=\"enabled\"\n                        checked={this.state.filter.enabled}\n                        onChange={this.handleEvent} \n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"enabled\">Enable Link filter</label>\n                </div>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"timeout_duration\">Whitelist (1 domain per line, e.g. youtube.com)</label>\n                <div className=\"input-group\" style={{width: '200px'}}>\n                    <textarea \n                        className=\"form-control\" \n                        name=\"whitelist\" \n                        value={this.state.filter.whitelist}\n                        onChange={this.handleEvent}\n                        rows=\"2\"\n                    />\n                </div>\n            </div>\n\n            {this.renderBase()}\n            \n            {renderError(this.state.error)}\n            <SaveButton isSaving={this.state.saving} text=\"Save filter\">Save filter</SaveButton>\n        </form>\n    }\n\n}\n\nexport default Filter_link","import React from 'react'\nimport {Redirect} from 'react-router'\nimport api from 'tbot/twitch/api'\nimport {setHeader, renderError} from 'tbot/utils'\nimport Loading from 'tbot/components/loading'\nimport SaveButton from 'tbot/components/save_button'\nimport Filter from './components/filter'\n\nclass Filter_symbol extends Filter {\n\n    constructor(props) {\n        super(props)\n        this.state.filter.warning_message = '@{sender}, Your message was too long [warning]'\n        this.state.filter.timeout_message = '@{sender}, Your message was too long'\n        this.state.filter.max_length = 350\n    }\n\n    componentDidMount() {\n        setHeader('Paragraph filter')\n        this.getFilters()\n    }\n\n    getFilters() {\n        api.get(`/api/twitch/channels/${managedUser.id}/filters/paragraph`).then(r => {\n            if (!r.data) {\n                this.setState({loading: false})\n                return\n            }\n            for (let key in r.data) {\n                if (!(key in this.state.filter))\n                    delete r.data[key]\n            }\n            this.setState({\n                loading: false,\n                filter: r.data,\n            })\n        })\n    }\n\n    submit = (e) => {\n        e.preventDefault()\n        api.put(`/api/twitch/channels/${managedUser.id}/filters/paragraph`, this.state.filter).then(r => {\n            this.setState({saved: true})\n        }).catch(e => {\n            this.setState({error: e.response.data, saving: false})\n        })\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading text=\"Loading filter\" />\n        if (this.state.saved)\n            return <Redirect to={`/twitch/${managedUser.name}/filters`} />\n        return <form style={{maxWidth:'700px'}} onSubmit={this.submit}>\n            <div className=\"form-group\">\n                <div className=\"custom-control custom-checkbox\">\n                    <input \n                        name=\"enabled\"\n                        type=\"checkbox\" \n                        className=\"custom-control-input\" \n                        id=\"enabled\"\n                        checked={this.state.filter.enabled}\n                        onChange={this.handleEvent} \n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"enabled\">Enable Paragraph filter</label>\n                </div>\n            </div>\n\n            <div className=\"form-group mb-2\">\n                <label htmlFor=\"max_length\">Max length</label>\n                <input \n                    className=\"form-control\" \n                    id=\"max_length\" \n                    name=\"max_length\"\n                    type=\"number\"\n                    value={this.state.filter.max_length}\n                    onChange={this.handleEvent}\n                    style={{width: '200px'}}\n                />\n            </div>\n\n            {this.renderBase()}\n            \n            {renderError(this.state.error)}\n            <SaveButton isSaving={this.state.saving} text=\"Save filter\">Save filter</SaveButton>\n        </form>\n    }\n\n}\n\nexport default Filter_symbol","import React from 'react'\nimport {Redirect} from 'react-router'\nimport api from 'tbot/twitch/api'\nimport {setHeader, renderError} from 'tbot/utils'\nimport Loading from 'tbot/components/loading'\nimport SaveButton from 'tbot/components/save_button'\nimport Filter from './components/filter'\n\nclass Filter_symbol extends Filter {\n\n    constructor(props) {\n        super(props)\n        this.state.filter.warning_message = '@{sender}, Your message contained too many symbols [warning]'\n        this.state.filter.timeout_message = '@{sender}, Your message contained too many symbols'\n        this.state.filter.max_symbols = 15\n    }\n\n    componentDidMount() {\n        setHeader('Symbol filter')\n        this.getFilters()\n    }\n\n    getFilters() {\n        api.get(`/api/twitch/channels/${managedUser.id}/filters/symbol`).then(r => {\n            if (!r.data) {\n                this.setState({loading: false})\n                return\n            }\n            for (let key in r.data) {\n                if (!(key in this.state.filter))\n                    delete r.data[key]\n            }\n            this.setState({\n                loading: false,\n                filter: r.data,\n            })\n        })\n    }\n\n    submit = (e) => {\n        e.preventDefault()\n        api.put(`/api/twitch/channels/${managedUser.id}/filters/symbol`, this.state.filter).then(r => {\n            this.setState({saved: true})\n        }).catch(e => {\n            this.setState({error: e.response.data, saving: false})\n        })\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading text=\"Loading filter\" />\n        if (this.state.saved)\n            return <Redirect to={`/twitch/${managedUser.name}/filters`} />\n        return <form style={{maxWidth:'700px'}} onSubmit={this.submit}>\n            <div className=\"form-group\">\n                <div className=\"custom-control custom-checkbox\">\n                    <input \n                        name=\"enabled\"\n                        type=\"checkbox\" \n                        className=\"custom-control-input\" \n                        id=\"enabled\"\n                        checked={this.state.filter.enabled}\n                        onChange={this.handleEvent} \n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"enabled\">Enable Symbol filter</label>\n                </div>\n            </div>\n\n            <div className=\"form-group mb-2\">\n                <label htmlFor=\"max_symbols\">Max symbols</label>\n                <input \n                    className=\"form-control\" \n                    id=\"max_symbols\" \n                    name=\"max_symbols\"\n                    type=\"number\"\n                    value={this.state.filter.max_symbols}\n                    onChange={this.handleEvent}\n                    style={{width: '200px'}}\n                />\n            </div>\n\n            {this.renderBase()}\n            \n            {renderError(this.state.error)}\n            <SaveButton isSaving={this.state.saving} text=\"Save filter\">Save filter</SaveButton>\n        </form>\n    }\n\n}\n\nexport default Filter_symbol","import React from 'react'\nimport {Redirect} from 'react-router'\nimport api from 'tbot/twitch/api'\nimport {setHeader, renderError} from 'tbot/utils'\nimport Loading from 'tbot/components/loading'\nimport SaveButton from 'tbot/components/save_button'\nimport Filter from './components/filter'\n\nclass Filter_caps extends Filter {\n\n    constructor(props) {\n        super(props)\n        this.state.filter.warning_message = '@{sender}, Chill with the caps [warning]'\n        this.state.filter.timeout_message = '@{sender}, Chill with the caps'\n        this.state.filter.min_length = 20\n        this.state.filter.max_percent = 60\n    }\n\n    componentDidMount() {\n        setHeader('Caps filter')\n        this.getFilters()\n    }\n\n    getFilters() {\n        api.get(`/api/twitch/channels/${managedUser.id}/filters/caps`).then(r => {\n            if (!r.data) {\n                this.setState({loading: false})\n                return\n            }\n            for (let key in r.data) {\n                if (!(key in this.state.filter))\n                    delete r.data[key]\n            }\n            this.setState({\n                loading: false,\n                filter: r.data,\n            })\n        })\n    }\n\n    submit = (e) => {\n        e.preventDefault()\n        api.put(`/api/twitch/channels/${managedUser.id}/filters/caps`, this.state.filter).then(r => {\n            this.setState({saved: true})\n        }).catch(e => {\n            this.setState({error: e.response.data, saving: false})\n        })\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading text=\"Loading filter\" />\n        if (this.state.saved)\n            return <Redirect to={`/twitch/${managedUser.name}/filters`} />\n        return <form style={{maxWidth:'700px'}} onSubmit={this.submit}>\n            <div className=\"form-group\">\n                <div className=\"custom-control custom-checkbox\">\n                    <input \n                        name=\"enabled\"\n                        type=\"checkbox\" \n                        className=\"custom-control-input\" \n                        id=\"enabled\"\n                        checked={this.state.filter.enabled}\n                        onChange={this.handleEvent} \n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"enabled\">Enable Caps filter</label>\n                </div>\n            </div>\n\n            <div className=\"form-group mb-2\">\n                <label htmlFor=\"min_length\">Min length</label>\n                <input \n                    className=\"form-control\" \n                    id=\"min_length\" \n                    name=\"min_length\"\n                    type=\"number\"\n                    value={this.state.filter.min_length}\n                    onChange={this.handleEvent}\n                    style={{width: '200px'}}\n                />\n            </div>\n\n            <div className=\"form-group mb-2\">\n                <label htmlFor=\"max_percent\">Max percent</label>\n                <input \n                    className=\"form-control\" \n                    id=\"max_percent\" \n                    name=\"max_percent\"\n                    type=\"number\"\n                    value={this.state.filter.max_percent}\n                    onChange={this.handleEvent}\n                    style={{width: '200px'}}\n                />\n            </div>\n\n            {this.renderBase()}\n            \n            {renderError(this.state.error)}\n            <SaveButton isSaving={this.state.saving} text=\"Save filter\">Save filter</SaveButton>\n        </form>\n    }\n\n}\n\nexport default Filter_caps","import React from 'react'\nimport {Redirect} from 'react-router'\nimport api from 'tbot/twitch/api'\nimport {setHeader, renderError} from 'tbot/utils'\nimport Loading from 'tbot/components/loading'\nimport SaveButton from 'tbot/components/save_button'\nimport Filter from './components/filter'\n\nclass Filter_emote extends Filter {\n\n    constructor(props) {\n        super(props)\n        this.state.filter.warning_message = '@{sender}, Chill with the emotes [warning]'\n        this.state.filter.timeout_message = '@{sender}, Chill with the emotes'\n        this.state.filter.max_emotes = 20\n    }\n\n    componentDidMount() {\n        setHeader('Emote filter')\n        this.getFilters()\n    }\n\n    getFilters() {\n        api.get(`/api/twitch/channels/${managedUser.id}/filters/emote`).then(r => {\n            if (!r.data) {\n                this.setState({loading: false})\n                return\n            }\n            for (let key in r.data) {\n                if (!(key in this.state.filter))\n                    delete r.data[key]\n            }\n            this.setState({\n                loading: false,\n                filter: r.data,\n            })\n        })\n    }\n\n    submit = (e) => {\n        e.preventDefault()\n        api.put(`/api/twitch/channels/${managedUser.id}/filters/emote`, this.state.filter).then(r => {\n            this.setState({saved: true})\n        }).catch(e => {\n            this.setState({error: e.response.data, saving: false})\n        })\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading text=\"Loading filter\" />\n        if (this.state.saved)\n            return <Redirect to={`/twitch/${managedUser.name}/filters`} />\n        return <form style={{maxWidth:'700px'}} onSubmit={this.submit}>\n            <div className=\"form-group\">\n                <div className=\"custom-control custom-checkbox\">\n                    <input \n                        name=\"enabled\"\n                        type=\"checkbox\" \n                        className=\"custom-control-input\" \n                        id=\"enabled\"\n                        checked={this.state.filter.enabled}\n                        onChange={this.handleEvent} \n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"enabled\">Enable Emote filter</label>\n                </div>\n            </div>\n\n            <div className=\"form-group mb-2\">\n                <label htmlFor=\"max_emotes\">Max emotes</label>\n                <input \n                    className=\"form-control\" \n                    id=\"max_emotes\" \n                    name=\"max_emotes\"\n                    type=\"number\"\n                    value={this.state.filter.max_emotes}\n                    onChange={this.handleEvent}\n                    style={{width: '200px'}}\n                />\n            </div>\n\n            {this.renderBase()}\n            \n            {renderError(this.state.error)}\n            <SaveButton isSaving={this.state.saving} text=\"Save filter\">Save filter</SaveButton>\n        </form>\n    }\n\n}\n\nexport default Filter_emote","import React from 'react'\nimport {Redirect} from 'react-router'\nimport api from 'tbot/twitch/api'\nimport {setHeader, renderError} from 'tbot/utils'\nimport Loading from 'tbot/components/loading'\nimport SaveButton from 'tbot/components/save_button'\nimport Filter from './components/filter'\n\nclass Filter_non_latin extends Filter {\n\n    constructor(props) {\n        super(props)\n        this.state.filter.warning_message = '@{sender}, English in chat, thanks [warning]'\n        this.state.filter.timeout_message = '@{sender}, English in chat, thanks'\n        this.state.filter.min_length = 20\n        this.state.filter.max_percent = 60\n    }\n\n    componentDidMount() {\n        setHeader('Non-latin filter')\n        this.getFilters()\n    }\n\n    getFilters() {\n        api.get(`/api/twitch/channels/${managedUser.id}/filters/non-latin`).then(r => {\n            if (!r.data) {\n                this.setState({loading: false})\n                return\n            }\n            for (let key in r.data) {\n                if (!(key in this.state.filter))\n                    delete r.data[key]\n            }\n            this.setState({\n                loading: false,\n                filter: r.data,\n            })\n        })\n    }\n\n    submit = (e) => {\n        e.preventDefault()\n        api.put(`/api/twitch/channels/${managedUser.id}/filters/non-latin`, this.state.filter).then(r => {\n            this.setState({saved: true})\n        }).catch(e => {\n            this.setState({error: e.response.data, saving: false})\n        })\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading text=\"Loading filter\" />\n        if (this.state.saved)\n            return <Redirect to={`/twitch/${managedUser.name}/filters`} />\n        return <form style={{maxWidth:'700px'}} onSubmit={this.submit}>\n            <div className=\"form-group\">\n                <div className=\"custom-control custom-checkbox\">\n                    <input \n                        name=\"enabled\"\n                        type=\"checkbox\" \n                        className=\"custom-control-input\" \n                        id=\"enabled\"\n                        checked={this.state.filter.enabled}\n                        onChange={this.handleEvent} \n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"enabled\">Enable Non-latin filter</label>\n                </div>\n            </div>\n\n            <div className=\"form-group mb-2\">\n                <label htmlFor=\"min_length\">Min number of Non-latin chars</label>\n                <input \n                    className=\"form-control\" \n                    id=\"min_length\" \n                    name=\"min_length\"\n                    type=\"number\"\n                    value={this.state.filter.min_length}\n                    onChange={this.handleEvent}\n                    style={{width: '200px'}}\n                />\n            </div>\n\n            <div className=\"form-group mb-2\">\n                <label htmlFor=\"max_percent\">Max percent</label>\n                <input \n                    className=\"form-control\" \n                    id=\"max_percent\" \n                    name=\"max_percent\"\n                    type=\"number\"\n                    value={this.state.filter.max_percent}\n                    onChange={this.handleEvent}\n                    style={{width: '200px'}}\n                />\n            </div>\n\n            {this.renderBase()}\n            \n            {renderError(this.state.error)}\n            <SaveButton isSaving={this.state.saving} text=\"Save filter\">Save filter</SaveButton>\n        </form>\n    }\n\n}\n\nexport default Filter_non_latin","import React from 'react'\nimport {Redirect} from 'react-router'\nimport api from 'tbot/twitch/api'\nimport {setHeader, renderError} from 'tbot/utils'\nimport Loading from 'tbot/components/loading'\nimport SaveButton from 'tbot/components/save_button'\nimport Filter from './components/filter'\n\nclass Filter_action extends Filter {\n\n    constructor(props) {\n        super(props)\n        this.state.filter.warning_message = '@{sender}, You are not permitted to use colored text [warning]'\n        this.state.filter.timeout_message = '@{sender}, You are not permitted to use colored text'\n    }\n\n    componentDidMount() {\n        setHeader('Action filter')\n        this.getFilters()\n    }\n\n    getFilters() {\n        api.get(`/api/twitch/channels/${managedUser.id}/filters/action`).then(r => {\n            if (!r.data) {\n                this.setState({loading: false})\n                return\n            }\n            for (let key in r.data) {\n                if (!(key in this.state.filter))\n                    delete r.data[key]\n            }\n            this.setState({\n                loading: false,\n                filter: r.data,\n            })\n        })\n    }\n\n    submit = (e) => {\n        e.preventDefault()\n        api.put(`/api/twitch/channels/${managedUser.id}/filters/action`, this.state.filter).then(r => {\n            this.setState({saved: true})\n        }).catch(e => {\n            this.setState({error: e.response.data, saving: false})\n        })\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading text=\"Loading filter\" />\n        if (this.state.saved)\n            return <Redirect to={`/twitch/${managedUser.name}/filters`} />\n        return <form style={{maxWidth:'700px'}} onSubmit={this.submit}>\n            <div className=\"form-group\">\n                <div className=\"custom-control custom-checkbox\">\n                    <input \n                        name=\"enabled\"\n                        type=\"checkbox\" \n                        className=\"custom-control-input\" \n                        id=\"enabled\"\n                        checked={this.state.filter.enabled}\n                        onChange={this.handleEvent} \n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"enabled\">Enable Action filter</label>\n                </div>\n            </div>\n\n            {this.renderBase()}\n            \n            {renderError(this.state.error)}\n\n            <SaveButton isSaving={this.state.saving} text=\"Save filter\">Save filter</SaveButton>\n        </form>\n    }\n\n}\n\nexport default Filter_action","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {Redirect} from 'react-router'\nimport api from 'tbot/twitch/api'\nimport {setHeader, renderError} from 'tbot/utils'\nimport Loading from 'tbot/components/loading'\nimport SaveButton from 'tbot/components/save_button'\nimport Filter from './components/filter'\n\nclass Filter_banned_words_groups extends Filter {\n\n    constructor(props) {\n        super(props)\n        this.state.groups = []\n    }\n\n    componentDidMount() {\n        setHeader('Banned words groups')\n        this.getFilters()\n    }\n\n    getFilters() {\n        this.setState({loading: true})\n        api.get(`/api/twitch/channels/${managedUser.id}/filters/banned-words-groups`).then(r => {\n            this.setState({\n                loading: false,\n                groups: r.data,\n            })\n        })\n    }\n    \n    render() {\n        if (this.state.loading)\n            return <Loading text=\"Loading filter\" />\n        return <>\n            <div className=\"d-flex mb-2\">\n                <div>\n                    <Link className=\"btn btn-primary\" to=\"banned-words/new\">New group</Link>\n                </div>\n            </div>\n            <table className=\"table\" style={{width:'500px'}}>\n                <tbody>\n                {this.state.groups.length > 0?\n                    this.state.groups.map((group, idx) =>\n                        <tr key={group.id}>\n                            <td><Link to={`banned-words/edit/${group.id}`}>{group.name}</Link></td>\n                        </tr>\n                    ):\n                    <tr><td colSpan=\"8\" className=\"text-center\">\n                        No groups, <Link to=\"banned-words/new\">create one.</Link>\n                    </td></tr>\n                }\n                </tbody>\n            </table>\n        </>\n    }\n\n}\n\nexport default Filter_banned_words_groups","import React from 'react'\nimport {Redirect} from 'react-router'\nimport api from 'tbot/twitch/api'\nimport {setHeader, renderError} from 'tbot/utils'\nimport Loading from 'tbot/components/loading'\nimport SaveButton from 'tbot/components/save_button'\nimport Filter from './components/filter'\n\nclass Filter_banned_words extends Filter {\n\n    constructor(props) {\n        super(props)\n        this.state.filter.name = ''\n        this.state.filter.enabled = true\n        this.state.filter.warning_message = '@{sender}, Banned word [warning]'\n        this.state.filter.timeout_message = '@{sender}, Banned word'\n        this.state.filter.timeout_duration = 86400,\n        this.state.filter.warning_enabled = false\n        this.state.filter.banned_words = [{\n            id: null,\n            banned_words: '',\n        }]\n        this.state.changed_banned_words = []\n        this.state.saved = false\n        this.state.errors = {}\n        this.state.testing = false\n        this.state.testResult = null\n        this.state.redirect_back = false\n        this.filter_id = this.props.match.params.id\n    }\n\n    componentDidMount() {\n        if (this.filter_id) {\n            setHeader('Edit banned words group')\n            this.getFilter()\n        } else {            \n            setHeader('New banned words group')\n            this.setState({loading: false})\n        }\n    }\n\n    getFilter() {\n        let id = this.filter_id\n        api.get(`/api/twitch/channels/${managedUser.id}/filters/banned-words-groups/${id}`).then(r => {\n            if (!r.data) {\n                this.setState({loading: false})\n                return\n            }            \n            for (let key in r.data) {\n                if (!(key in this.state.filter))\n                    delete r.data[key]\n            }\n            this.setState({\n                loading: false,\n                filter: r.data,\n            })\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.setState({'saving': true})\n        let data = {...this.state.filter}\n        delete data.banned_words\n        let id = this.filter_id\n        if (id) {\n            api.put(`/api/twitch/channels/${managedUser.id}/filters/banned-words-groups/${id}`, data).then(r => {\n                this.setState({saving: false, saved: true})\n            }).catch(e => {\n                this.setState({error: e.response.data, saving: false})\n            })\n        } else {\n            api.post(`/api/twitch/channels/${managedUser.id}/filters/banned-words-groups`, data).then(r => {\n                console.log(r.data)\n                this.filter_id = r.data.id\n                this.setState({saving: false, saved: true})\n            }).catch(e => {\n                this.setState({error: e.response.data, saving: false})\n            })            \n        }\n    }\n\n    handleBannedWordsChange = (e) => {\n        this.state.testResult = null\n        let d = this.state.filter.banned_words[e.target.dataset.id]\n        d.banned_words = e.target.value\n        if (!this.state.changed_banned_words.includes(d))\n            this.state.changed_banned_words.push(d)\n        this.setState(this.state)\n    }\n\n    handleSaveBannedWords = (e) => {\n        this.setState({testResult: null})\n        let idx = e.target.dataset.id\n        let d = this.state.filter.banned_words[idx]\n        let filter_id = this.filter_id\n        if (d.id) {\n            api.put(`/api/twitch/channels/${managedUser.id}/filters/banned-words-groups/${filter_id}/banned-words/${d.id}`, {\n                'banned_words': d.banned_words,\n            }).then(r => {\n                this.setState({\n                    changed_banned_words: this.state.changed_banned_words.filter(item => item != d),\n                    errors: {},\n                })\n            }).catch(e => {\n                this.setState({errors: {\n                    [idx]: e.response.data,\n                }})\n            })\n        } else {\n            api.post(`/api/twitch/channels/${managedUser.id}/filters/banned-words-groups/${filter_id}/banned-words`, {\n                'banned_words': d.banned_words,\n            }).then(r => {\n                d.id = r.data.id\n                this.setState({\n                    changed_banned_words: this.state.changed_banned_words.filter(item => item != d),\n                    errors: {},\n                })\n            }).catch(e => {\n                this.setState({errors: {\n                    [idx]: e.response.data,\n                }})\n            })\n        }\n    }\n\n    handleDeleteBannedWords = (e) => {\n        this.setState({testResult: null})\n        let idx = e.target.dataset.id\n        let d = this.state.filter.banned_words[idx]\n        let filter_id = this.filter_id      \n        if (!d.id) {\n            this.removeBannedWords(d)\n            return\n        }\n        api.delete(`/api/twitch/channels/${managedUser.id}/filters/banned-words-groups/${filter_id}/banned-words/${d.id}`).then(r => {\n            this.removeBannedWords(d)\n        }).catch(e => {\n            this.setState({errors: {\n                [idx]: e.response.data,\n            }})\n        })  \n    }\n\n    removeBannedWords(d) {\n        let f = {...this.state.filter}\n        f.banned_words = f.banned_words.filter(item => item != d)\n        this.setState({\n            changed_banned_words: this.state.changed_banned_words.filter(item => item != d),\n            filter: f,\n            errors: {},\n        })\n    }\n\n    handleAdd = (e) => {\n        this.setState({testResult: null})\n        this.state.filter.banned_words.push({\n            id: null,\n            banned_words: '',\n        })\n        this.setState(this.state)\n    }\n\n    handleTest = (e) => {\n        e.preventDefault()\n        this.setState({\n            testing: true,\n            testResult: null,\n        })\n        api.post(`/api/twitch/channels/${managedUser.id}/filters/banned-words-groups/${this.filter_id}/test`, {\n            'message': e.target.elements.message.value,\n        }).then(r => {\n            this.setState({\n                testing: false,\n                testResult: r.data.match,\n            })\n        }).catch(e => {\n            this.setState({\n                error: e.response.data,\n                testing: false,\n                testResult: null,\n            })\n        })  \n    }\n\n    handleTestChange = (e) => {\n        this.setState({\n            testResult: null,\n        })\n    }\n\n    renderTest() {\n        return <form \n                className=\"d-flex\"\n                onSubmit={this.handleTest}\n            >\n            <div \n                className=\"flex-grow-1\"\n                style={{'width': '240px'}}\n            >\n                <input \n                    className=\"form-control\"\n                    placeholder=\"Test a message for a match\"\n                    name=\"message\"\n                    onChange={this.handleTestChange}\n                />\n            </div>\n            <div className=\"ml-2\">\n                <SaveButton\n                    savingTest={'Testing'}\n                    savedText={'Matched'}\n                    errorText={'Didn\\'t match'}\n                    isSaving={this.state.testing}\n                    isSaved={this.state.testResult}\n                    hasError={this.state.testResult === false}\n\n                >\n                    Test\n                </SaveButton>\n            </div>\n        </form>\n    }\n\n    renderBannedWords() {\n        return <>\n            {this.state.filter.banned_words.map((bw, idx) => (\n                <div key={`bw-${idx}`}>\n                <div className='d-flex mb-2'>\n                    <div className='flex-grow-1'>\n                        <input \n                            className=\"form-control\"\n                            value={bw.banned_words}\n                            data-id={idx}\n                            onChange={this.handleBannedWordsChange}\n                        />\n                    </div>\n                    {this.state.changed_banned_words.includes(bw)?\n                        <div>\n                            <button \n                                title=\"Save\"\n                                type=\"button\" \n                                className=\"btn btn-secondary ml-2\"\n                                data-id={idx}\n                                onClick={this.handleSaveBannedWords}\n                            >Save</button>\n                        </div>:''\n                    }\n                    <div>\n                        <button \n                            title=\"Delete\"\n                            type=\"button\" \n                            className=\"btn btn-secondary ml-2\"\n                            data-id={idx}\n                            onClick={this.handleDeleteBannedWords}\n                        >×</button>\n                    </div>\n                </div>\n                {this.state.errors[idx]?renderError(this.state.errors[idx]):''}\n                </div>\n            ))}\n            <div className=\"d-flex\">\n                <div className=\"flex-shring-1\">\n                    <button \n                        type=\"button\" \n                        className=\"btn btn-secondary\"\n                        onClick={this.handleAdd}\n                    >\n                        Add\n                    </button>\n                </div>\n                <div className=\"ml-auto\">\n                    {this.renderTest()}\n                </div>\n            </div>\n        </>\n    }\n\n    handleDelete = (e) => {\n        if (!confirm(`Delete this filter?`))\n            return\n        api.delete(`/api/twitch/channels/${managedUser.id}/filters/banned-words-groups/${this.filter_id}`).then(r => {\n            this.setState({\n                redirect_back: true,\n            })\n        })\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading text=\"Loading filter\" />\n        if (this.state.saved && !this.props.match.params.id)\n            return <Redirect to={`/twitch/${managedUser.name}/banned-words/edit/${this.filter_id}`} />\n        if (this.state.redirect_back)\n            return <Redirect to={`/twitch/${managedUser.name}/banned-words`} />\n        return <div style={{maxWidth:'700px'}}>\n            {this.filter_id?\n                <div className=\"mb-4\">\n                    <h5>Banned words</h5>\n                    <p className=\"mb-1\">Use the prefix: \"re:\" for a regular expression.</p>\n                    {this.renderBannedWords()}\n                </div>\n            : ''}\n            <form onSubmit={this.handleSubmit}>\n            <div className=\"form-group\">\n                <label htmlFor=\"name\">Group name</label>\n                <input \n                    className=\"form-control\" \n                    id=\"name\" \n                    name=\"name\" \n                    value={this.state.filter.name}\n                    onChange={this.handleEvent}\n                    autoFocus={true}\n                    required={true}\n                />\n            </div>\n            {this.filter_id?\n                <>\n                <div className=\"form-group\">\n                    <div className=\"custom-control custom-checkbox\">\n                        <input \n                            name=\"enabled\"\n                            type=\"checkbox\" \n                            className=\"custom-control-input\" \n                            id=\"enabled\"\n                            checked={this.state.filter.enabled}\n                            onChange={this.handleEvent}\n                        />\n                        <label className=\"custom-control-label\" htmlFor=\"enabled\">Enabled</label>\n                    </div>\n                </div>\n                {this.renderBase()}\n                </>\n            : ''\n            }\n\n            {renderError(this.state.error)}\n\n            <div className=\"mt-2\">\n                <SaveButton \n                    isSaving={this.state.saving} \n                    text=\"Save\"\n                >\n                    {this.props.match.params.id?'Save':'Create group'}\n                </SaveButton>\n                {this.filter_id?\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-danger ml-2\"\n                        onClick={this.handleDelete}\n                    >\n                        Delete\n                    </button>: ''}\n            </div>\n        </form>\n        </div>\n    }\n\n}\n\nexport default Filter_banned_words","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport api from 'tbot/twitch/api'\nimport Loading from 'tbot/components/loading'\nimport {setHeader} from 'tbot/utils'\nimport {userLevelName, enabledWhenName} from 'tbot/twitch/utils'\n\nclass Timers extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            timers: [],\n            loading: true,\n        }\n    }\n\n    componentDidMount() {\n        setHeader('Timers')\n        this.getTimers()\n    }\n\n    getTimers() {        \n        api.get(`/api/twitch/channels/${managedUser.id}/timers`).then(r => {\n            this.setState({\n                timers: r.data, \n                loading: false\n            })\n        })\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading />\n        return  <> \n                <div className=\"d-flex mb-2\">\n                    <div>\n                        <Link className=\"btn btn-primary\" to=\"timers/new\">New timer</Link>\n                    </div>\n                </div>\n                <table className=\"table table-dark table-hover\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Interval</th>\n                        <th title=\"Enabled when stream is\">Enabled status</th>\n                        <th title=\"Enabled\">Enabled</th>\n                        <th width=\"5px\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.state.timers.length>0?\n                        this.state.timers.map(timer =>\n                            <tr key={timer.id}>\n                                <td>{timer.name}</td>\n                                <td>{timer.interval} minutes</td>\n                                <td>{enabledWhenName(timer.enabled_status)}</td>\n                                <td>{timer.enabled==1?'Yes':'No'}</td>\n                                <td className=\"text-right\"><Link to={`timers/edit/${timer.id}`}>Edit</Link></td>\n                            </tr>\n                        ): <tr><td colSpan=\"5\" className=\"text-center\">No timers, <Link to=\"timers/new\">create one.</Link></td></tr>\n                    }\n                </tbody>\n            </table>\n        </>\n    }\n}\n\nexport default Timers","import React from 'react'\nimport {Redirect} from 'react-router'\nimport api from 'tbot/twitch/api'\nimport Loading from 'tbot/components/loading'\nimport {setHeader, renderError} from 'tbot/utils'\nimport {userLevelName, enabledWhenName} from 'tbot/twitch/utils'\n\nclass Timer extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            timer: {\n                name: '',\n                messages: '',\n                enabled_status: 0,\n                enabled: 1,\n                interval: 5,\n                send_message_order: 1,\n            },\n            loading: true,\n            error: null,\n            saving: false,\n            success: false,\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            setHeader('Edit timer')\n            this.getTimer()\n        } else {            \n            setHeader('New timer')\n            this.setState({loading: false})\n        }\n    }\n\n    getTimer() {        \n        let id = this.props.match.params.id\n        api.get(`/api/twitch/channels/${managedUser.id}/timers/${id}`).then(r => {\n            for (let key in r.data) {\n                if (!(key in this.state.timer))\n                    delete r.data[key]\n            }\n            r.data.messages = r.data.messages.join('\\n')\n            this.setState({\n                timer: r.data, \n                loading: false\n            })\n            setHeader(`Edit timer: ${r.data.name}`)\n        })\n    }\n\n    handleEvent = (e) => {\n        let val = e.target.type === 'checkbox' ? e.target.checked : e.target.value\n        this.state.timer[e.target.name] = val\n        this.setState({timer: this.state.timer})\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.setState({saving: true, error: null})\n        if (!Array.isArray(this.state.timer.messages))\n            this.state.timer.messages = this.state.timer.messages.split('\\n')\n        this.state.timer.messages = this.state.timer.messages.filter(e => (\n            e != ''\n        ))\n        let id = this.props.match.params.id\n        if (id)\n            api.put(`/api/twitch/channels/${managedUser.id}/timers/${id}`, this.state.timer).then(r => {\n                this.setState({success: true})\n            }).catch(e => {\n                this.state.timer.messages = this.state.timer.messages.join('\\n')\n                this.setState({error: e.response.data, saving: false})\n            })\n        else \n            api.post(`/api/twitch/channels/${managedUser.id}/timers`, this.state.timer).then(r => {\n                this.setState({success: true})\n            }).catch(e => {\n                this.state.timer.messages = this.state.timer.messages.join('\\n')\n                this.setState({error: e.response.data, saving: false})\n            })\n    }\n\n    handleDelete = () => {\n        if (!confirm(`Delete timer: ${this.state.timer.timer}?`))\n            return\n        this.setState({deleting: true, error: null})\n        let id = this.props.match.params.id\n        api.delete(`/api/twitch/channels/${managedUser.id}/timers/${id}`).then(r => {\n            this.setState({\n                timer: r.data, \n                success: true,\n            })\n        }).catch(e => {\n            this.setState({error: e.response.data, deleting: false})\n        })\n    }\n\n    renderButton() {\n        if (this.state.saving)\n            return <button className=\"btn btn-primary\" type=\"button\" disabled>\n                    <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> Saving...\n                </button>\n        return <button type=\"submit\" className=\"btn btn-primary\">Save Timer</button>\n    }\n\n    renderDeleteButton() {\n        if (!this.props.match.params.id)\n            return null\n        if (this.state.deleting)\n            return <button className=\"ml-2 btn btn-danger\" type=\"button\" disabled>\n                    <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> Deleting...\n                </button>\n        return <button type=\"button\" onClick={this.handleDelete} className=\"ml-2 btn btn-danger\">Delete Timer</button>\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading />\n        if (this.state.success)\n            return <Redirect to={`/twitch/${this.props.match.params.channel}/timers`} />\n\n        return <form onSubmit={this.handleSubmit} style={{maxWidth:'700px'}}>\n            <div className=\"form-group\">\n                <label htmlFor=\"name\">Name</label>\n                <input \n                    className=\"form-control\" \n                    id=\"name\" \n                    name=\"name\" \n                    value={this.state.timer.name}\n                    onChange={this.handleEvent}\n                    autoFocus\n                    required\n                />\n            </div>\n\n            <div className=\"form-row\">\n                <div className=\"form-group col-md-4\">\n                    <label htmlFor=\"interval\">Interval</label>\n                    <div className=\"input-group\">\n                        <input \n                            id=\"interval\" \n                            type=\"number\" \n                            className=\"form-control text-right\" \n                            name=\"interval\" \n                            value={this.state.timer.interval}\n                            onChange={this.handleEvent}\n                            required\n                        />\n                        <div className=\"input-group-append\">\n                            <div className=\"input-group-text\">minutes</div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"form-group col-md-4\">\n                    <label htmlFor=\"enabled_status\">Enabled when stream is</label>\n                    <select \n                        type=\"text\" \n                        className=\"form-control\" \n                        id=\"enabled_status\" \n                        name=\"enabled_status\" \n                        value={this.state.timer.enabled_status}\n                        onChange={this.handleEvent}\n                    >\n                        <option value=\"0\">{enabledWhenName(0)}</option>\n                        <option value=\"1\">{enabledWhenName(1)}</option>\n                        <option value=\"2\">{enabledWhenName(2)}</option>\n                    </select>\n                </div>                \n                <div className=\"form-group col-md-4\">\n                    <label htmlFor=\"send_message_order\">Message choose order</label>\n                    <select \n                        type=\"text\" \n                        className=\"form-control\" \n                        id=\"send_message_order\" \n                        name=\"send_message_order\" \n                        value={this.state.timer.send_message_order}\n                        onChange={this.handleEvent}\n                    >\n                        <option value=\"1\">In order</option>\n                        <option value=\"2\">Random order</option>\n                    </select>\n                </div>\n            </div>\n\n            <div className=\"form-group\">\n                <div className=\"custom-control custom-checkbox\">\n                    <input \n                        name=\"enabled\"\n                        type=\"checkbox\" \n                        className=\"custom-control-input\" \n                        id=\"enabled\"\n                        checked={this.state.timer.enabled}\n                        onChange={this.handleEvent} \n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"enabled\">Enabled</label>\n                </div>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"messages\" className=\"mb-0\">Messages (<a href=\"https://docs.botashell.com\" target=\"_blank\">Variables documentation</a>)</label>\n                <small className=\"form-text mb-2 mt-0\">\n                    One message per line. 1 line will be chosen when the timer triggers.\n                </small>\n                <textarea \n                    className=\"form-control\" \n                    id=\"messages\" \n                    name=\"messages\" \n                    value={this.state.timer.messages}\n                    onChange={this.handleEvent}\n                    required\n                    rows=\"5\"\n                />\n            </div>\n\n            {renderError(this.state.error)}\n            {this.renderButton()}\n            {this.renderDeleteButton()}\n        </form>\n    }\n}\n\nexport default Timer","import React from 'react'\nimport api from 'tbot/twitch/api'\nimport {setHeader, renderError} from 'tbot/utils'\nimport Loading from 'tbot/components/loading'\nimport SaveButton from 'tbot/components/save_button'\n\nclass ChatAlerts extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            alerts: {},\n            errors: {},\n            saved: null,\n            saving: null,\n        }\n        this.alertTypes = [\n            {\n                name: 'Sub alert',\n                type: 'sub',\n                minAmount: true,\n                canAdd: true,\n                vars: [\n                    '{twitch_message}',\n                    '{user}',\n                    '{months}',\n                    '{months_streak}',\n                    '{plan}',\n                ],\n            },\n            {\n                name: 'Sub gift alert',\n                type: 'subgift',\n                minAmount: false,\n                canAdd: false,\n                vars: [\n                    '{twitch_message}',\n                    '{user}',\n                    '{to_user}',\n                    '{plan}',\n                    '{months}',                    \n                ],\n            },\n            {\n                name: 'Mystery sub gift',\n                type: 'submysterygift',\n                minAmount: false,\n                canAdd: false,\n                vars: [\n                    '{twitch_message}',\n                    '{user}',\n                    '{amount}',\n                    '{plan}',\n                ],\n            },\n            {\n                name: 'Gifted sub upgraded',\n                type: 'giftpaidupgrade',\n                minAmount: false,\n                canAdd: false,\n                vars: [\n                    '{twitch_message}',\n                    '{user}',\n                    '{from_user}',\n                ],\n            },\n            {\n                name: 'Sub extended (app)',\n                type: 'extendsub',\n                minAmount: false,\n                canAdd: false,\n                vars: [\n                    '{twitch_message}',\n                    '{months}',\n                    '{plan}',\n                    '{end_month}',\n                    '{end_month_name}',\n                ],\n            },\n        ]\n    }\n\n    componentDidMount() {\n        setHeader('Chat alerts')\n        this.getAlerts()\n    }\n\n    getAlerts() {\n        api.get(`/api/twitch/channels/${managedUser.id}/chat-alerts`).then(r => {\n            this.setState({alerts: r.data, loading: false})\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        let t = e.target.dataset.type\n        this.setState({saving: t})\n        api.put(`/api/twitch/channels/${managedUser.id}/chat-alerts`, {\n            [t]: this.state.alerts[t]\n        }).then(r => {\n            this.setState({\n                alerts: r.data, \n                errors: {},\n                saved: t,\n                saving: null,\n            })\n        }).catch(e => {\n            this.setState({\n                errors: {\n                    [t]: e.response.data\n                }\n            })\n        })\n    }\n\n    handleChange = (e) => {\n        if (!(e.target.dataset.type in this.state.alerts))\n            this.state.alerts[e.target.dataset.type] = [{}]\n        let alerts = this.state.alerts[e.target.dataset.type]\n        alerts[e.target.dataset.id][e.target.name] = e.target.value\n        this.state.errors = {}\n        this.state.saved = null\n        this.state.saving = null\n        this.setState(this.state)\n    }\n\n    handleAdd = (e) => {\n        if (!(e.target.dataset.type in this.state.alerts))\n            this.state.alerts[e.target.dataset.type] = []\n        this.state.alerts[e.target.dataset.type].push({\n            message: '',\n        })\n        this.setState(this.state)        \n    }\n\n    handleDelete = (e) => {\n        // Since our list items has no ID other than it's index,\n        // the render will not pick up on the \n        // So to fix that we just render an empty list and then\n        // render the new list.\n        let t = e.target.dataset.type\n        this.state.alerts[t].splice(e.target.dataset.id, 1)\n        let d = this.state.alerts[t]\n        this.state.alerts[t] = []\n        this.state.errors = {}\n        this.state.saving = null\n        this.state.saved = null\n        this.setState(this.state, () => {\n            this.state.alerts[t] = d\n            this.forceUpdate()\n        })        \n    }\n\n    renderType(alertType) {\n        let alerts = this.state.alerts[alertType.type] || [{\n            message: '',\n            min_amount: 0,\n        }]\n        return <form \n                onSubmit={this.handleSubmit} \n                onChange={this.handleChange} \n                style={{maxWidth:'700px'}}\n                data-type={alertType.type}\n                className='mb-4'\n                key={alertType.type}\n            >\n                <h2>{alertType.name}</h2>\n                <div>Variables: <pre className=\"mb-0\">{alertType.vars.map((val) => {\n                    return <span key={'var-'+val}>{val} </span>\n                })}</pre></div>\n                <div className='d-flex'>\n                    <div className='flex-grow-1'>\n                        <label>Message</label>\n                    </div>\n                    {alertType.minAmount?\n                    <div className='ml-2'>\n                        <label>Months</label>\n                    </div>:''}\n                    <div style={{width: '48px'}}></div>\n                </div>\n                {     \n                    alerts.map((val, idx) => {\n                        return <div className='d-flex mb-2' key={`alert-${alertType.type}-${idx}`}>\n                            <div className='flex-grow-1'>\n                                <div className='input-group'>\n                                    <input \n                                        type='text' \n                                        className='form-control' \n                                        name='message'\n                                        data-type={alertType.type}\n                                        data-id={idx}\n                                        defaultValue={val.message}\n                                    />\n                                </div>\n                            </div>\n                            {alertType.minAmount?\n                                <div className='ml-2'>\n                                    <div className='input-group'>\n                                        <input \n                                            style={{width: '100px'}}\n                                            type='number' \n                                            className='form-control text-right'\n                                            name='min_amount'\n                                            data-type={alertType.type}\n                                            data-id={idx}\n                                            defaultValue={val.min_amount}\n                                        />\n                                    </div>\n                                </div>:''\n                            }                            \n                            {alertType.canAdd?\n                            <div>\n                                <button \n                                    title=\"Delete\"\n                                    type=\"button\" \n                                    className=\"btn btn-secondary ml-2\"\n                                    data-type={alertType.type}\n                                    data-id={idx}\n                                    onClick={this.handleDelete}\n                                >×</button>\n                            </div>:''\n                            }\n                        </div>\n                    })\n                }\n\n                <SaveButton \n                    isSaving={this.state.saving == alertType.type}\n                    isSaved={this.state.saved == alertType.type}\n                    savedText='Saved'\n                >\n                    Save\n                </SaveButton>\n                \n                {alertType.canAdd?\n                    <button type=\"button\" className=\"btn btn-secondary ml-2\" data-type={alertType.type} onClick={this.handleAdd}>Add</button>\n                    :''\n                }\n\n                {renderError(this.state.errors[alertType.type])}\n        \n        </form>\n    }\n\n    render() {\n        if (this.state.loading) \n            return <Loading />\n        return <>\n            {this.alertTypes.map((val) => {\n                return this.renderType(val)\n            })}\n        </>\n\n    }\n}\n\nexport default ChatAlerts","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport api from 'tbot/twitch/api'\nimport Loading from 'tbot/components/loading'\nimport {setHeader, renderError} from 'tbot/utils'\nimport SaveButton from 'tbot/components/save_button'\n\nclass PointsSettings extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            saving: false,\n            saved: false,\n            settings: {\n                enabled: false,\n                points_name: 'Points',\n                points_per_min: 1,\n                points_per_min_sub_multiplier: 1,\n                points_per_sub: 500,\n                points_per_cheer: 1,\n                ignore_users: [],\n            }\n        }\n    }\n\n    componentDidMount() {\n        setHeader('Points Settings')\n        this.getSettings()\n    }\n\n    getSettings() {\n        api.get(`/api/twitch/channels/${managedUser.id}/points-settings`).then(r => {\n            if (r.data) {\n                r.data.ignore_users = r.data.ignore_users.join(' ')\n                this.setState({\n                    loading: false,\n                    settings: r.data,\n                })\n            } else {\n                this.setState({\n                    loading: false,\n                })\n            }\n        })\n    }\n    \n    handleEvent = (e) => {\n        let val = e.target.type === 'checkbox' ? e.target.checked : e.target.value\n        this.state.settings[e.target.name] = val\n        this.setState({\n            settings: this.state.settings,\n            saved: false,\n        })\n    }\n\n    handleSubmit = (e) => {        \n        e.preventDefault()\n        this.setState({saving: true})\n        if (!Array.isArray(this.state.settings.ignore_users))\n            this.state.settings.ignore_users = this.state.settings.ignore_users.split(' ')\n        this.state.settings.ignore_users = this.state.settings.ignore_users.filter(e => (\n            e != ''\n        ))\n        api.put(`/api/twitch/channels/${managedUser.id}/points-settings`, this.state.settings).then(r => {\n            this.state.settings.ignore_users = this.state.settings.ignore_users.join(' ')\n            this.setState({saving: false, saved: true})\n        }).catch(e => {\n            this.state.settings.ignore_users = this.state.settings.ignore_users.join(' ')\n            this.setState({saving: false})\n        })\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading />\n        return <form style={{maxWidth:'700px'}} onSubmit={this.handleSubmit}>\n            <div className=\"form-group\">\n                <div className=\"custom-control custom-checkbox\">\n                    <input \n                        name=\"enabled\"\n                        type=\"checkbox\" \n                        className=\"custom-control-input\" \n                        id=\"enabled\"\n                        checked={this.state.settings.enabled}\n                        onChange={this.handleEvent} \n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"enabled\">Enable points</label>\n                </div>\n            </div>\n\n\n            <div className=\"form-group mb-2\">\n                <label htmlFor=\"points_name\">Points name</label>\n                <input \n                    className=\"form-control\" \n                    id=\"points_name\" \n                    name=\"points_name\"\n                    type=\"text\"\n                    value={this.state.settings.points_name}\n                    onChange={this.handleEvent}\n                    style={{width: '200px'}}\n                />\n            </div>\n\n            <div className=\"d-flex mb-2\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"points_per_min\">Points per min</label>\n                    <input \n                        className=\"form-control\" \n                        id=\"points_per_min\" \n                        name=\"points_per_min\"\n                        type=\"number\"\n                        value={this.state.settings.points_per_min}\n                        onChange={this.handleEvent}\n                        style={{width: '200px'}}\n                    />\n                </div>\n\n                <div className=\"form-group ml-2\">\n                    <label htmlFor=\"points_per_min_sub_multiplier\">Sub multiplier</label>\n                    <input \n                        className=\"form-control\" \n                        id=\"points_per_min_sub_multiplier\" \n                        name=\"points_per_min_sub_multiplier\"\n                        type=\"number\"\n                        value={this.state.settings.points_per_min_sub_multiplier}\n                        onChange={this.handleEvent}\n                        style={{width: '200px'}}\n                    />\n                </div>\n            </div>\n\n            <div className=\"d-flex mb-2\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"points_per_sub\">Points per sub</label>\n                    <input \n                        className=\"form-control\" \n                        id=\"points_per_sub\" \n                        name=\"points_per_sub\"\n                        type=\"number\"\n                        value={this.state.settings.points_per_sub}\n                        onChange={this.handleEvent}\n                        style={{width: '200px'}}\n                    />\n                </div>\n\n                <div className=\"form-group ml-2\">\n                    <label htmlFor=\"points_per_cheer\">Points per cheer</label>\n                    <input \n                        className=\"form-control\" \n                        id=\"points_per_cheer\" \n                        name=\"points_per_cheer\"\n                        type=\"number\"\n                        value={this.state.settings.points_per_cheer}\n                        onChange={this.handleEvent}\n                        style={{width: '200px'}}\n                    />\n                </div>\n            </div>\n\n\n            <div className=\"form-group\">\n                <label htmlFor=\"ignore_users\">Ignore users (separate with a space)</label>\n                <div className=\"input-group\" style={{maxWidth: '700px'}}>\n                    <textarea \n                        className=\"form-control\" \n                        name=\"ignore_users\" \n                        value={this.state.settings.ignore_users}\n                        onChange={this.handleEvent}\n                        rows=\"2\"\n                    />\n                </div>\n            </div>\n            \n            {renderError(this.state.error)}\n            <SaveButton \n                isSaving={this.state.saving} \n                isSaved={this.state.saved}\n                savedText=\"Settings saved\"\n                text=\"Save settings\"\n            >Save settings</SaveButton>\n        </form>\n    }\n}\n\nexport default PointsSettings","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport api from 'tbot/twitch/api'\nimport Loading from 'tbot/components/loading'\nimport {setHeader, renderError} from 'tbot/utils'\nimport SaveButton from 'tbot/components/save_button'\n\nclass GamblingSlots extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            saving: false,\n            saved: false,\n            settings: {\n                emote_pool_size: 4,\n                emotes: ['MrDestructoid', 'SeriousSloth', 'OSFrog', 'OhMyDog'],\n                payout_percent: 95,\n                min_bet: 5,\n                max_bet: 0,\n                win_message: '@{user} {emotes} you won {bet} {points_name} and now have {points} {points_name}',\n                allin_win_message: '@{user} {emotes} you WON {bet} {points_name} and now have {points} {points_name} EZ',\n                lose_message: '@{user} {emotes} you lost {bet} {points_name}',\n                allin_lose_message: '@{user} {emotes} you lost {bet} {points_name} PepeLaugh',\n            }\n        }\n    }\n\n    componentDidMount() {\n        setHeader('Gambling - Slots Settings')\n        this.getSettings()\n    }\n\n    getSettings() {\n        api.get(`/api/twitch/channels/${managedUser.id}/gambling-slots-settings`).then(r => {\n            if (r.data) {\n                r.data.emotes = r.data.emotes.join(' ')\n                this.setState({\n                    loading: false,\n                    settings: r.data,\n                })\n            } else {\n                this.setState({\n                    loading: false,\n                })\n            }\n        })\n    }\n    \n    handleEvent = (e) => {\n        let val = e.target.type === 'checkbox' ? e.target.checked : e.target.value\n        this.state.settings[e.target.name] = val\n        this.setState({\n            settings: this.state.settings,\n            saved: false,\n        })\n    }\n\n    handleSubmit = (e) => {        \n        e.preventDefault()\n        this.setState({saving: true})\n        if (!Array.isArray(this.state.settings.emotes))\n            this.state.settings.emotes = this.state.settings.emotes.split(' ')\n        this.state.settings.emotes = this.state.settings.emotes.filter(e => (\n            e != ''\n        ))\n        api.put(`/api/twitch/channels/${managedUser.id}/gambling-slots-settings`, this.state.settings).then(r => {\n            this.state.settings.emotes = this.state.settings.emotes.join(' ')\n            this.setState({saving: false, saved: true})\n        }).catch(e => {\n            this.state.settings.emotes = this.state.settings.emotes.join(' ')\n            this.setState({saving: false})\n        })\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading />\n        return <form style={{maxWidth:'700px'}} onSubmit={this.handleSubmit}>\n            <div className=\"d-flex mb-2\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"emote_pool_size\">Emote pool size</label>\n                    <input \n                        className=\"form-control\" \n                        id=\"emote_pool_size\" \n                        name=\"emote_pool_size\"\n                        type=\"number\"\n                        value={this.state.settings.emote_pool_size}\n                        onChange={this.handleEvent}\n                        style={{width: '200px'}}\n                    />\n                </div>\n\n                <div className=\"form-group ml-2\">\n                    <label htmlFor=\"payout_percent\">Payout percent</label>\n                    <input \n                        className=\"form-control\" \n                        id=\"payout_percent\" \n                        name=\"payout_percent\"\n                        type=\"number\"\n                        value={this.state.settings.payout_percent}\n                        onChange={this.handleEvent}\n                        style={{width: '200px'}}\n                    />\n                </div>\n            </div>\n\n            <div className=\"d-flex mb-2\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"min_bet\">Min bet</label>\n                    <input \n                        className=\"form-control\" \n                        id=\"min_bet\" \n                        name=\"min_bet\"\n                        type=\"number\"\n                        value={this.state.settings.min_bet}\n                        onChange={this.handleEvent}\n                        style={{width: '200px'}}\n                    />\n                </div>\n\n                <div className=\"form-group ml-2\">\n                    <label htmlFor=\"max_bet\">Max bet</label>\n                    <input \n                        className=\"form-control\" \n                        id=\"max_bet\" \n                        name=\"max_bet\"\n                        type=\"number\"\n                        value={this.state.settings.max_bet}\n                        onChange={this.handleEvent}\n                        style={{width: '200px'}}\n                    />\n                </div>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"emotes\">Emotes (separate with a space)</label>\n                <div className=\"input-group\" style={{maxWidth: '700px'}}>\n                    <textarea \n                        className=\"form-control\" \n                        name=\"emotes\" \n                        value={this.state.settings.emotes}\n                        onChange={this.handleEvent}\n                        rows=\"2\"\n                    />\n                </div>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"win_message\">Win message</label>                \n                <input \n                    className=\"form-control\" \n                    id=\"win_message\" \n                    name=\"win_message\"\n                    type=\"text\"\n                    value={this.state.settings.win_message}\n                    onChange={this.handleEvent}\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"allin_win_message\">All-in win message</label>                \n                <input \n                    className=\"form-control\" \n                    id=\"allin_win_message\" \n                    name=\"allin_win_message\"\n                    type=\"text\"\n                    value={this.state.settings.allin_win_message}\n                    onChange={this.handleEvent}\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"lose_message\">Lose message</label>                \n                <input \n                    className=\"form-control\" \n                    id=\"lose_message\" \n                    name=\"lose_message\"\n                    type=\"text\"\n                    value={this.state.settings.lose_message}\n                    onChange={this.handleEvent}\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"allin_lose_message\">All-in lose message</label>                \n                <input \n                    className=\"form-control\" \n                    id=\"allin_lose_message\" \n                    name=\"allin_lose_message\"\n                    type=\"text\"\n                    value={this.state.settings.allin_lose_message}\n                    onChange={this.handleEvent}\n                />\n            </div>\n\n            <div>Vars for win and lose messages: <pre>{'{'}user{'}'} {'{'}emotes{'}'} {'{'}bet{'}'} {'{'}points{'}'} {'{'}points_name{'}'}</pre></div>\n                \n            \n            {renderError(this.state.error)}\n            <SaveButton \n                isSaving={this.state.saving} \n                isSaved={this.state.saved}\n                savedText=\"Settings saved\"\n                text=\"Save settings\"\n            >Save settings</SaveButton>\n        </form>\n    }\n}\n\nexport default GamblingSlots","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport api from 'tbot/twitch/api'\nimport Loading from 'tbot/components/loading'\nimport {setHeader, renderError} from 'tbot/utils'\nimport SaveButton from 'tbot/components/save_button'\n\nclass GamblingRoulette extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            saving: false,\n            saved: false,\n            settings: {\n                win_chance: 45,\n                min_bet: 5,\n                max_bet: 0,\n                win_message: '@{user}, You won {bet} {points_name} and now have {points} {points_name}',\n                allin_win_message: '@{user}, You WON {bet} {points_name} and now have {points} {points_name} EZ',\n                lose_message: '@{user}, You lost {bet} {points_name} and now have {points} {points_name}',\n                allin_lose_message: '@{user}, You lost {bet} {points_name} PepeLaugh',\n            }\n        }\n    }\n\n    componentDidMount() {\n        setHeader('Gambling - Roulette Settings')\n        this.getSettings()\n    }\n\n    getSettings() {\n        api.get(`/api/twitch/channels/${managedUser.id}/gambling-roulette-settings`).then(r => {\n            if (r.data) {\n                this.setState({\n                    loading: false,\n                    settings: r.data,\n                })\n            } else {\n                this.setState({\n                    loading: false,\n                })\n            }\n        })\n    }\n    \n    handleEvent = (e) => {\n        let val = e.target.type === 'checkbox' ? e.target.checked : e.target.value\n        this.state.settings[e.target.name] = val\n        this.setState({\n            settings: this.state.settings,\n            saved: false,\n        })\n    }\n\n    handleSubmit = (e) => {        \n        e.preventDefault()\n        this.setState({saving: true})\n        api.put(`/api/twitch/channels/${managedUser.id}/gambling-roulette-settings`, this.state.settings).then(r => {\n            this.setState({saving: false, saved: true})\n        }).catch(e => {\n            this.setState({saving: false})\n        })\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading />\n        return <form style={{maxWidth:'700px'}} onSubmit={this.handleSubmit}>\n            <div className=\"d-flex mb-2\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"win_chance\">Win chance</label>\n                    <input \n                        className=\"form-control\" \n                        id=\"win_chance\" \n                        name=\"win_chance\"\n                        type=\"number\"\n                        value={this.state.settings.win_chance}\n                        onChange={this.handleEvent}\n                        style={{width: '200px'}}\n                    />\n                </div>\n            </div>\n\n            <div className=\"d-flex mb-2\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"min_bet\">Min bet</label>\n                    <input \n                        className=\"form-control\" \n                        id=\"min_bet\" \n                        name=\"min_bet\"\n                        type=\"number\"\n                        value={this.state.settings.min_bet}\n                        onChange={this.handleEvent}\n                        style={{width: '200px'}}\n                    />\n                </div>\n\n                <div className=\"form-group ml-2\">\n                    <label htmlFor=\"max_bet\">Max bet</label>\n                    <input \n                        className=\"form-control\" \n                        id=\"max_bet\" \n                        name=\"max_bet\"\n                        type=\"number\"\n                        value={this.state.settings.max_bet}\n                        onChange={this.handleEvent}\n                        style={{width: '200px'}}\n                    />\n                </div>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"win_message\">Win message</label>                \n                <input \n                    className=\"form-control\" \n                    id=\"win_message\" \n                    name=\"win_message\"\n                    type=\"text\"\n                    value={this.state.settings.win_message}\n                    onChange={this.handleEvent}\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"allin_win_message\">All-in win message</label>                \n                <input \n                    className=\"form-control\" \n                    id=\"allin_win_message\" \n                    name=\"allin_win_message\"\n                    type=\"text\"\n                    value={this.state.settings.allin_win_message}\n                    onChange={this.handleEvent}\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"lose_message\">Lose message</label>                \n                <input \n                    className=\"form-control\" \n                    id=\"lose_message\" \n                    name=\"lose_message\"\n                    type=\"text\"\n                    value={this.state.settings.lose_message}\n                    onChange={this.handleEvent}\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"allin_lose_message\">All-in lose message</label>                \n                <input \n                    className=\"form-control\" \n                    id=\"allin_lose_message\" \n                    name=\"allin_lose_message\"\n                    type=\"text\"\n                    value={this.state.settings.allin_lose_message}\n                    onChange={this.handleEvent}\n                />\n            </div>\n\n            <div>Vars for win and lose messages: <pre>{'{'}user{'}'} {'{'}emotes{'}'} {'{'}bet{'}'} {'{'}points{'}'} {'{'}points_name{'}'}</pre></div>\n                \n            \n            {renderError(this.state.error)}\n            <SaveButton \n                isSaving={this.state.saving} \n                isSaved={this.state.saved}\n                savedText=\"Settings saved\"\n                text=\"Save settings\"\n            >Save settings</SaveButton>\n        </form>\n    }\n}\n\nexport default GamblingRoulette","import React from 'react'\nimport {Route, Redirect} from \"react-router-dom\"\nimport {requireAuth} from 'tbot/twitch/utils'\nimport {renderError} from 'tbot/utils'\nimport api from 'tbot/twitch/api'\nimport Loading from 'tbot/components/loading'\nimport Sidebar from './components/sidebar'\nimport Topbar from './components/topbar'\nimport Dashboard from './dashboard'\nimport Commands from './commands'\nimport Command from './command'\nimport Spotify from './spotify'\nimport Discord from './discord'\nimport Admins from './admins'\nimport Filters from './filters'\nimport Filter_link from './filter_link'\nimport Filter_paragraph from './filter_paragraph'\nimport Filter_symbol from './filter_symbol'\nimport Filter_caps from './filter_caps'\nimport Filter_emote from './filter_emote'\nimport Filter_non_latin from './filter_non_latin'\nimport Filter_action from './filter_action'\nimport Filter_banned_words_groups from './filter_banned_words_groups'\nimport Filter_banned_words from './filter_banned_words'\nimport Timers from './timers'\nimport Timer from './timer'\nimport ChatAlerts from './chat_alerts'\nimport PointsSettings from './points_settings'\nimport GamblingSlotsSettings from './gambling_slots_settings'\nimport GamblingRouletteSettings from './gambling_roulette_settings'\n\nclass Main extends React.Component {\n\n    render() {\n        if (!this.props.match.params.channel) \n            return <Redirect to={`/twitch/${window.tbot.twitch_user.user}/dashboard`} />\n        if (this.state.loading) {\n            this.getChannel()\n            return <Loading text=\"LOADING\" />\n        }\n        if (this.state.error) {\n            return <div className=\"mt-5 ml-auto mr-auto\" style={{width: '600px'}}>\n                {renderError(this.state.error)}\n            </div>\n        }\n        return <div id=\"main-wrapper\">\n            <Sidebar />\n            <div id=\"content-wrapper\">\n                <Topbar />\n                <div id=\"content\">\n                    <Route exact path='/twitch/:channel/dashboard' component={Dashboard}/>\n                    <Route exact path='/twitch/:channel/commands' component={Commands}/>\n                    <Route exact path='/twitch/:channel/commands/edit/:id' component={Command}/>\n                    <Route exact path='/twitch/:channel/commands/new' component={Command}/>\n                    <Route exact path='/twitch/:channel/spotify' component={Spotify}/>\n                    <Route exact path='/twitch/:channel/discord' component={Discord}/>\n                    <Route exact path='/twitch/:channel/admins' component={Admins}/>\n                    <Route exact path='/twitch/:channel/filters' component={Filters}/>\n                    <Route exact path='/twitch/:channel/filters/link' component={Filter_link}/>\n                    <Route exact path='/twitch/:channel/filters/paragraph' component={Filter_paragraph}/>\n                    <Route exact path='/twitch/:channel/filters/symbol' component={Filter_symbol}/>\n                    <Route exact path='/twitch/:channel/filters/caps' component={Filter_caps}/>\n                    <Route exact path='/twitch/:channel/filters/emote' component={Filter_emote}/>\n                    <Route exact path='/twitch/:channel/filters/non-latin' component={Filter_non_latin}/>\n                    <Route exact path='/twitch/:channel/filters/action' component={Filter_action}/>\n                    <Route exact path='/twitch/:channel/banned-words' component={Filter_banned_words_groups}/>\n                    <Route exact path='/twitch/:channel/banned-words/edit/:id' component={Filter_banned_words}/>\n                    <Route exact path='/twitch/:channel/banned-words/new' component={Filter_banned_words}/>\n                    <Route exact path='/twitch/:channel/timers' component={Timers}/>\n                    <Route exact path='/twitch/:channel/timers/edit/:id' component={Timer}/>\n                    <Route exact path='/twitch/:channel/timers/new' component={Timer}/>\n                    <Route exact path='/twitch/:channel/chat-alerts' component={ChatAlerts}/>\n                    <Route exact path='/twitch/:channel/points-settings' component={PointsSettings} />\n                    <Route exact path='/twitch/:channel/gambling-slots-settings' component={GamblingSlotsSettings} />\n                    <Route exact path='/twitch/:channel/gambling-roulette-settings' component={GamblingRouletteSettings} />\n                </div>\n            </div>\n        </div>\n    }\n\n    constructor(props) {\n        super(props)\n        requireAuth()\n        this.state = {\n            loading: true,\n            errors: null,\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            window.scrollTo(0, 0)\n        }\n    }\n\n    getChannel() {\n        window.managedUser = null\n        api.get(`/api/twitch/channel/${this.props.match.params.channel}`).then(r => {\n            window.managedUser = r.data\n            this.setState({loading: false})\n        }).catch(e => {\n            this.setState({loading: false, error: e.response.data})\n        })\n    }\n\n}\n\nexport default Main","\nexport function setTitle(title) {\n    document.title = `${title} | ${window.tbot.name}`\n}\n\nexport function setHeader(title) {\n    setTitle(title)\n    document.getElementById('top-title').innerHTML = title\n}\n\nexport function renderError(error) {\n    if (!error)\n        return null\n    if (error.errors)\n        return <div className=\"alert alert-danger\" role=\"alert\">\n            <div className=\"mb-2\"><b>Error:</b> {error.message}</div>\n            {error.errors.map(e => (\n                <div key={e.field}><b>{e.field}:</b> {e.message}</div>\n            ))}\n        </div>\n    return <div className=\"alert alert-danger\" role=\"alert\">\n        <div><b>Error:</b> {error.message}</div>\n    </div>\n}","export default (props) => {\n    return <div className=\"d-flex flex-column text-center\">\n        <div>\n            <div className=\"spinner-grow text-primary\" role=\"status\" style={{\n                width: '5rem',\n                height: '5rem',\n            }}>\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        </div>\n        <div className=\"mt-2\">\n            <h1>{props.text}</h1>\n        </div>\n    </div>\n}","\nexport function isAuthed() {\n\treturn tbot.twitch_user !== null;\n}\n\nexport function requireAuth() {\n\tif (!isAuthed()) {\n        let next = encodeURIComponent(\n            location.pathname + location.search\n        )\n        location.href = '/twitch/login?next='+next;\n\t\tthrow 'Not authenticated!';\n\t}\n}\n\nexport function userLevelName(level) {\n    switch (level) {\n        case 0:\n            return 'Everyone'\n            break\n        case 1:\n            return 'Sub'\n            break\n        case 2:\n            return 'VIP'\n            break\n        case 7:\n            return 'Mod'\n            break\n        case 8:\n            return 'Admin'\n            break\n        case 9:\n            return 'Broadcaster'\n            break\n        default:\n            return 'Unknown user level'\n    }\n}\n\nexport function enabledWhenName(level) {\n    switch (level) {\n        case 0:\n            return 'Always'\n            break\n        case 1:\n            return 'Online'\n            break\n        case 2:\n            return 'Offline'\n            break\n        default:\n            return 'Unknown enabled when level'\n    }\n}","export default(props) => {\n    if (props.isSaving)\n        return <button className=\"btn btn-primary\" type=\"button\" disabled>\n                <span \n                    className=\"spinner-border spinner-border-sm\" \n                    role=\"status\" \n                    aria-hidden=\"true\">\n                </span> {props.savingText?props.savingText:'Saving...'}\n            </button>\n    if (props.isSaved)\n        return <button type=\"submit\" className=\"btn btn-success\">\n            {props.savedText?props.savedText:props.children}\n        </button>\n    if (props.hasError)\n        return <button type=\"submit\" className=\"btn btn-danger\">\n            {props.errorText?props.errorText:props.children}\n        </button>\n\n    return <button type=\"submit\" className=\"btn btn-primary\">{props.children}</button>\n}"],"sourceRoot":""}