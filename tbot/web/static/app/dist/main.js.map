{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/front.jsx","webpack:///./src/twitch/logviewer/userinput.jsx","webpack:///./src/twitch/logviewer/index.jsx","webpack:///./src/twitch/logviewer/suggestchannelinput.jsx","webpack:///./src/twitch/logviewer/selectchannel.jsx","webpack:///./src/twitch/public/commands.jsx","webpack:///./src/twitch/public/index.jsx","webpack:///./src/index.jsx","webpack:///./src/twitch/dashboard/components/select_channel.jsx","webpack:///./src/twitch/dashboard/components/sidebar.jsx","webpack:///./src/twitch/dashboard/components/topbar.jsx","webpack:///./src/twitch/dashboard/components/bot_controls.jsx","webpack:///./src/twitch/dashboard/dashboard.jsx","webpack:///./src/twitch/dashboard/commands.jsx","webpack:///./src/twitch/dashboard/command.jsx","webpack:///./src/twitch/dashboard/spotify.jsx","webpack:///./src/twitch/dashboard/discord.jsx","webpack:///./src/twitch/dashboard/admins.jsx","webpack:///./src/twitch/dashboard/index.jsx","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/twitch/api.jsx","webpack:///./src/utils.jsx","webpack:///./src/components/loading.jsx","webpack:///./src/twitch/utils.jsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Front","React","Component","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","id","className","tbot","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","to","UserInput","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","state","users","defaultValue","fetchUsers","_assertThisInitialized","stateChange","e","_this2","target","api","concat","channel_id","params","suggest_name","then","setState","type","Downshift","stateChangeTypes","clickItem","changeInput","inputValue","keyDownArrowUp","keyDownArrowDown","highlightedIndex","_this3","react_default","downshift_esm","onStateChange","itemToString","item","_ref","getLabelProps","getInputProps","getItemProps","getToggleButtonProps","getMenuProps","isOpen","selectedItem","clearSelection","placeholder","onChange","map","index","_extends","style","backgroundColor","fontWeight","Logviewer","_this$state","logviewer_classCallCheck","logviewer_possibleConstructorReturn","logviewer_getPrototypeOf","query","qs","parse","location","search","_defineProperty","channel","loading","chatlog","loadBefore","logviewer_assertThisInitialized","loadAfter","match","setTitle","loadingChannel","loadChatlog","before_id","loadUserChatStats","user","message","show_mod_actions_only","_toConsumableArray","unshift","showLoadAfter","headers","showLoadBefore","catch","response","status","accessDenied","preventDefault","after_id","_this4","userChatStats","_this5","text","colSpan","textAlign","class","role","href","onClick","width","dateTime","created_at","whiteSpace","iso8601toLocalTime","renderTypeSymbol","moment","format","chat_messages","purges","timeouts","bans","renderAccessDenied","border","borderBottom","padding-left","Link","userinput","defaultChecked","htmlFor","renderUserStats","renderChatlog","SuggestChannelInput","channels","fetch","selected","SelectChannel","selectchannel_classCallCheck","selectchannel_possibleConstructorReturn","selectchannel_getPrototypeOf","modOf","twitchLoginClick","selectchannel_assertThisInitialized","requireAuth","isAuthed","suggestchannelinput","renderModOf","renderLoginButton","Commands","commands","getCommands","document","title","managedUser","level","userLevels","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","iterator","next","done","cmd","user_level","err","return","fontSize","userLevelName","Main","public_classCallCheck","public_possibleConstructorReturn","public_getPrototypeOf","errors","getChannel","error","renderError","Route","exact","path","component","prevProps","scrollTo","__webpack_exports__","react_dom__WEBPACK_IMPORTED_MODULE_0__","react_dom__WEBPACK_IMPORTED_MODULE_0___default","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","tbot_front__WEBPACK_IMPORTED_MODULE_4__","tbot_twitch_logviewer__WEBPACK_IMPORTED_MODULE_5__","tbot_twitch_logviewer_selectchannel__WEBPACK_IMPORTED_MODULE_6__","tbot_twitch_dashboard__WEBPACK_IMPORTED_MODULE_7__","tbot_twitch_public__WEBPACK_IMPORTED_MODULE_8__","ReactDOM","render","TwitchLogViewerSelectChannel","TwitchLogviewer","TwitchPublic","TwitchDashboard","getElementById","getChannels","tabIndex","data-dismiss","aria-label","onClose","aria-hidden","Sidebar","sidebar_classCallCheck","sidebar_assertThisInitialized","sidebar_possibleConstructorReturn","sidebar_getPrototypeOf","showSelectChannel","NavLink","activeClassName","selectChannelClick","renderConnect","select_channel","BotControls","bot_controls_classCallCheck","bot_controls_defineProperty","bot_controls_assertThisInitialized","bot_controls_possibleConstructorReturn","bot_controls_getPrototypeOf","post","getSettings","delete","settings","active","joinClick","partClick","muted","muteClick","unmuteClick","chatlog_enabled","enableChatlogClick","disableChatlogClick","Dashboard","setHeader","es_Redirect","bot_controls","commands_classCallCheck","commands_possibleConstructorReturn","commands_getPrototypeOf","user_cooldown","global_cooldown","enabledWhenName","enabled_status","enabled","Command","command_classCallCheck","command_defineProperty","command_assertThisInitialized","command_possibleConstructorReturn","command_getPrototypeOf","val","checked","saving","put","success","confirm","deleting","templates","JSON","stringify","mod_cooldown","public","getCommand","getTemplates","disabled","handleDelete","handleTemplate","temp","maxWidth","renderTemplates","onSubmit","handleSubmit","handleEvent","autoFocus","required","renderButton","renderDeleteButton","Spotify","spotify_classCallCheck","spotify_defineProperty","spotify_assertThisInitialized","spotify_possibleConstructorReturn","spotify_getPrototypeOf","connecting","spotify","getStatus","connected","method","action","Discord","discord_classCallCheck","discord_defineProperty","discord_assertThisInitialized","discord_possibleConstructorReturn","discord_getPrototypeOf","discord","Admins","admins_classCallCheck","admins_defineProperty","admins_assertThisInitialized","admins_possibleConstructorReturn","admins_getPrototypeOf","newAdmin","getAdmins","alert","admin","admins","levels","handleNewSubmit","handleNewEvent","renderNewAdmin","handleChangeLevel","twitch_dashboard_classCallCheck","twitch_dashboard_possibleConstructorReturn","twitch_dashboard_getPrototypeOf","components_sidebar","components_topbar","Redirect","twitch_user","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","Error","code","keys","resolve","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","axios","interceptors","use","encodeURIComponent","pathname","Promise","reject","innerHTML","field","height"],"mappings":"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OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,aAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,aAAA,GACAC,gBAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,UAAA,GACAC,aAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,UAAA,GACAC,OAAA,GACAC,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","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([156,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport './front.scss'\n\nclass Front extends React.Component {\n\n    render() {\n        return <div id=\"front\">\n            <div className=\"title\">{tbot.name}</div>\n            <div className=\"items\">\n                <div className=\"title\">\n                    Twitch\n                </div>\n                <Link to=\"/twitch/dashboard\" className=\"item twitch\">                    \n                    Dashboard\n                </Link>\n                <Link to=\"/twitch/logviewer\" className=\"item twitch\">\n                    Logviewer\n                </Link>\n            </div>\n            <div className=\"items\">\n                <div className=\"title\">\n                    Discord\n                </div>\n                <a className=\"item discord\">\n                    Dashboard\n                </a>\n                <a className=\"item discord\">\n                    Logviewer\n                </a>\n            </div>\n        </div>\n    }\n}\n\nexport default Front","import React from 'react'\nimport Downshift from 'downshift'\nimport api from 'tbot/twitch/api'\n\nimport './suggestinput.scss'\n\nclass UserInput extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            users: [],\n            value: this.props.defaultValue,\n        }\n        this.fetchUsers = this.fetchUsers.bind(this)\n        this.stateChange = this.stateChange.bind(this)\n    }\n\n    fetchUsers(e) {\n        if (!e.target.value) {\n            this.setState({users: []})\n            return\n        }\n        api.get(`/api/twitch/channels/${this.props.channel_id}/users`, {params:{suggest_name: e.target.value}}).then(r => {\n            this.setState({\n                users: r.data, \n            })\n        })\n    }\n\n    stateChange(e) {\n        switch (e.type) {\n            case Downshift.stateChangeTypes.clickItem:\n            case Downshift.stateChangeTypes.changeInput:\n                this.setState({value: (e.inputValue ? e.inputValue:'')})\n            break\n            case Downshift.stateChangeTypes.keyDownArrowUp:\n            case Downshift.stateChangeTypes.keyDownArrowDown:\n                this.setState({value: (this.state.users[e.highlightedIndex].name)})\n            break\n        }     \n    }\n      \n    render() {\n        return (<Downshift \n                inputValue={this.state.value}\n                onStateChange={this.stateChange}\n                itemToString={item => (item ? item.name : '')}\n            >\n            {({ \n                getLabelProps,\n                getInputProps,\n                getToggleButtonProps,\n                getMenuProps,\n                getItemProps,\n                isOpen,\n                clearSelection,\n                selectedItem,\n                inputValue,\n                highlightedIndex,\n            }) => (\n                <div className=\"suggest-input\">\n                    <input {...getInputProps({\n                        name: 'user',\n                        placeholder: 'User',\n                        onChange: this.fetchUsers,\n                        className: 'form-control',\n                    })} />\n                    {isOpen && (this.state.users.length>0) ? (\n                        <div className=\"suggest-container\">{\n                            this.state.users.map((item, index) => (\n                                <div\n                                    className=\"suggest-item\"\n                                    {...getItemProps({ key: index, index, item })}\n                                    style={{\n                                        backgroundColor: highlightedIndex === index ? '#505258' : '#43464F',\n                                        fontWeight: selectedItem === item ? 'bold' : 'normal',\n                                    }}\n                                >\n                                    {item.name}\n                                </div>\n                            ))\n                        }</div>\n                    ) : null}\n                </div>\n            )}\n        </Downshift>)\n    }\n}\n\nexport default UserInput","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport api from 'tbot/twitch/api'\nimport qs from 'query-string'\nimport moment from 'moment'\nimport {setTitle} from 'tbot/utils'\nimport Loading from 'tbot/components/loading'\nimport UserInput from './userinput'\nimport './logviewer.scss'\nimport '../dashboard/components/topbar.scss'\n\nclass Logviewer extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.query = qs.parse(location.search)\n        this.state = {\n            channel: null,\n            loading: true,\n            chatlog: [],\n            loading: true,\n            loadingChannel: true,\n            userChatStats: null,\n            showLoadBefore: false,\n            showLoadAfter: true,\n            accessDenied: false,\n        }\n        this.loadBefore = this.loadBefore.bind(this);\n        this.loadAfter = this.loadAfter.bind(this);\n    }\n\n    componentDidMount() {\n        let channel = this.props.match.params.channel;\n        setTitle(`${channel} | Twitch Logviewer`)\n        api.get(`/api/twitch/channels`, {params: {name:channel}}).then(data => {\n            this.setState({\n                channel: data.data[0],\n                loadingChannel: false,\n            }, state => {\n                this.loadChatlog({\n                    before_id: this.query.before_id,\n                })\n                this.loadUserChatStats()\n            })\n        })\n    }\n\n    loadChatlog(params) {\n        this.setState({loading: true})\n        params['user'] = this.query.user\n        params['message'] = this.query.message\n        params['show_mod_actions_only'] = this.query.show_mod_actions_only\n        api.get(`/api/twitch/channels/${this.state.channel.id}/chatlog`, {params: params}).then(r => {\n            let l = this.state.chatlog;\n            if ('after_id' in params)                \n                l.push(...r.data)\n            else\n                l.unshift(...r.data);\n            if ('after_id' in params) {\n                this.state.showLoadAfter = r.data.length == r.headers['x-per-page']\n            } else {\n                this.state.showLoadBefore = r.data.length == r.headers['x-per-page'] \n                if (this.state.showLoadAfter != false) {\n                    this.state.showLoadAfter = (this.query.before_id);\n                }\n            }\n            this.setState({\n                loading: false,\n                chatlog: l,\n            })\n        }).catch(e => {\n            if (e.response.status == 403) {\n                this.setState({\n                    accessDenied: true,\n                })\n            }\n        })\n    }\n\n    loadBefore(e) {\n        e.preventDefault();\n        this.loadChatlog({\n            before_id: this.state.chatlog[0].id,\n        })\n    }\n\n    loadAfter(e) {\n        e.preventDefault();\n        this.loadChatlog({\n            after_id: this.state.chatlog[this.state.chatlog.length-1].id,\n        })\n    }\n\n    loadUserChatStats() {\n        this.setState({\n            userChatStats: null,\n            loading: true,\n        })\n        if (!this.query.user)\n            return\n        api.get(`/api/twitch/channels/${this.state.channel.id}/user-chatstats`, {params: {\n            user: this.query.user,\n        }}).then(r => {\n            this.setState({\n                userChatStats: r.data,\n                loading: false,\n            })\n        })   \n    }\n\n    renderChatlog() {\n        if (this.state.chatlog.length == 0)\n            if (this.state.loading)\n                return <Loading text=\"LOADING\" />\n            else\n                return <div className=\"m-2\"><center>No results found</center></div>\n        return <table className=\"chatlog table table-dark table-striped table-sm table-hover\">\n            <tbody>\n                {this.state.showLoadBefore?\n                    <tr><td colSpan=\"3\" style={{textAlign: 'center'}}>\n                        {this.state.loading?\n                            <div class=\"spinner-grow text-primary\" role=\"status\"></div>:\n                            <a href=\"#\" onClick={this.loadBefore}>Load more</a>}\n                        </td></tr>\n                : null}\n                {this.state.chatlog.map(l => (\n                    <tr key={l.id}>\n                        <td \n                            width=\"10px\"\n                            dateTime={l.created_at}\n                            style={{whiteSpace:'nowrap'}}\n                        >\n                            <a href={`?before_id=${l.id+1}`}>{this.iso8601toLocalTime(l.created_at)}</a>\n                        </td>\n                        <td width=\"10px\"><a href={`?user=${l.user}`}>{l.user}</a></td>\n                        <td>\n                            {this.renderTypeSymbol(l)}\n                            {l.message} \n                        </td>\n                    </tr>\n                ))}                \n                {this.state.showLoadAfter?\n                    <tr><td colSpan=\"3\" style={{textAlign: 'center'}}>\n                        {this.state.loading?\n                            <div class=\"spinner-grow text-primary\" role=\"status\"></div>:\n                            <a href=\"#\" onClick={this.loadAfter}>Load more</a>}\n                        </td></tr>\n                : null}\n            </tbody>\n        </table>\n    }\n\n    renderTypeSymbol(l) {\n        switch(l.type) {\n            case 2:\n                return <span className=\"badge badge-danger\">B</span>\n                break;\n            case 3:\n                return <span className=\"badge badge-warning\">T</span> \n                break;\n            case 4:\n                return <span className=\"badge badge-info\">P</span> \n                break;\n            case 100:\n                return <span className=\"badge badge-success\">M</span> \n                break;\n            default:\n                return null\n                break;\n        }\n    }\n\n    iso8601toLocalTime(t) {\n        let date = moment(t);\n        return date.format('YYYY-MM-DD HH:mm:ss')\n    }\n\n    renderUserStats() {\n        if (this.state.userChatStats == null)\n            return null\n\n        return <div className=\"userChatStats\">\n            <span><b>Total messages:</b> {this.state.userChatStats.chat_messages||0}</span>\n            <span><b>Purges:</b> {this.state.userChatStats.purges||0}</span>\n            <span><b>Timeouts:</b> {this.state.userChatStats.timeouts||0}</span>\n            <span><b>Bans:</b> {this.state.userChatStats.bans||0}</span>\n        </div>\n\n    }\n\n    renderAccessDenied() {\n        return <div className=\"access-denied\">\n            Sorry,\n            <br />\n            you must be a moderator to view the chatlog of this channel\n        </div>\n    }\n\n    render() {\n        if (this.state.loadingChannel)\n            return <Loading text=\"LOADING\" />\n        if (this.state.accessDenied)\n            return this.renderAccessDenied()\n        return <div id=\"logviewer\">\n            <div id=\"topbar\" style={{'border': 'none', 'borderBottom': '1px solid #000', 'padding-left': '0.5rem', 'padding-left': '0.5rem'}}>\n                <div className=\"title\" id=\"top-title\">\n                    <Link to=\"/twitch/logviewer\" className=\"text-white\">\n                        <i className=\"material-icons material-inline \">arrow_back</i></Link> Logviewer for {this.state.channel.name}\n                </div>\n                <div className=\"signed-as\">Signed in as <b>{tbot['twitch_user']['user']}</b>, <a href=\"/twitch/logout\">log out</a></div>\n            </div>\n            <div className=\"sticky-top\">\n                <div className=\"filter\">\n                    <form className=\"form-inline\">\n                        <UserInput defaultValue={this.query.user} channel_id={this.state.channel.id} />\n                        <input \n                            name=\"message\" \n                            type=\"text\" \n                            className=\"form-control\" \n                            placeholder=\"Message\"\n                            defaultValue={this.query.message}\n                        />\n                        <button type=\"submit\" className=\"btn btn-warning\">Search</button>\n                        <input \n                            type=\"checkbox\" \n                            value=\"yes\" \n                            name=\"show_mod_actions_only\" \n                            className=\"form-check-input\" \n                            id=\"show_mod_actions_only\" \n                            defaultChecked={this.query.show_mod_actions_only=='yes'}\n                        />\n                        <label className=\"form-check-label\" htmlFor=\"show_mod_actions_only\">Show only mod actions</label>\n                    </form>\n                </div>\n                {this.renderUserStats()}\n            </div>\n            {this.renderChatlog()}\n        </div>;\n    }\n\n}\n\nexport default Logviewer","import React from 'react'\nimport Downshift from 'downshift'\nimport api from 'tbot/twitch/api'\n\nimport './suggestinput.scss'\n\nclass SuggestChannelInput extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            channels: [],\n        }\n        this.fetch = this.fetch.bind(this)\n        this.selected = this.selected.bind(this)\n    }\n\n    fetch(e) {\n        if (!e.target.value) {\n            this.setState({channels: []})\n            return\n        }\n        api.get(`/api/twitch/channels`, {params:{suggest_name: e.target.value}}).then(r => {\n            this.setState({\n                channels: r.data, \n            })\n        })\n    }\n\n    selected(s) {\n        location.href = '/twitch/logviewer/'+s.name\n    }\n\n    render() {\n        return (<Downshift \n                itemToString={item => (item ? item.name : '')}\n                onChange={this.selected}\n            >\n            {({ \n                getLabelProps,\n                getInputProps,\n                getToggleButtonProps,\n                getMenuProps,\n                getItemProps,\n                isOpen,\n                clearSelection,\n                selectedItem,\n                inputValue,\n                highlightedIndex,\n            }) => (\n                <div className=\"suggest-input\">\n                    <input {...getInputProps({\n                        name: 'channel',\n                        placeholder: 'Channel search',\n                        onChange: this.fetch,\n                        className: 'form-control',\n                    })} />\n                    {isOpen && (this.state.channels.length>0) ? (\n                        <div className=\"suggest-container\">{\n                            this.state.channels.map((item, index) => (\n                                <div\n                                    className=\"suggest-item\"\n                                    {...getItemProps({ key: index, index, item })}\n                                    style={{\n                                        backgroundColor: highlightedIndex === index ? '#505258' : '#43464F',\n                                        fontWeight: selectedItem === item ? 'bold' : 'normal',\n                                    }}\n                                >\n                                    {item.name}\n                                </div>\n                            ))\n                        }</div>\n                    ) : null}\n                </div>\n            )}\n        </Downshift>)\n    }\n}\n\nexport default SuggestChannelInput","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport api from 'tbot/twitch/api'\nimport {isAuthed, requireAuth} from 'tbot/twitch/utils'\nimport {setTitle} from 'tbot/utils'\n\nimport SuggestChannelInput from './suggestchannelinput'\n\nclass SelectChannel extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            modOf: [],\n        }\n        setTitle('Twitch Logviewer')\n        this.twitchLoginClick = this.twitchLoginClick.bind(this);\n    }\n\n    twitchLoginClick() {\n        requireAuth();\n    }\n\n    componentDidMount() {\n        api.get('/api/twitch/user/mod-of').then(r => {\n            this.setState({\n                modOf: r.data,\n            })\n        })\n    }\n\n    renderModOf() {\n        if (!isAuthed())\n            return null;\n        return (\n            <div className=\"mod-of\">\n                {this.state.modOf.map(c => (\n                    <div key={c.id}>\n                        <Link to={`/twitch/logviewer/${c.name}`}>\n                            {c.name}\n                        </Link>\n                    </div>\n                ))}\n            </div>\n        )\n    }\n\n    renderLoginButton() {\n        if (isAuthed())\n            return null;\n        return (\n            <center>\n                <button className=\"btn btn-primary\" onClick={this.twitchLoginClick}>Login with Twitch</button>\n            </center>\n        )\n    }\n\n    render() {\n        return <div id=\"select-channels\">\n            <div className=\"text-center\">\n                <Link to=\"/\">{tbot.name}</Link>\n            </div>\n            <h1>Twitch Logviewer</h1>\n            <div className=\"suggest-channel\">\n                <SuggestChannelInput />\n            </div>\n            {this.renderModOf()}\n            {this.renderLoginButton()}            \n        </div>\n    }\n}\n\nexport default SelectChannel;","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport api from 'tbot/twitch/api'\nimport Loading from 'tbot/components/loading'\n\nclass Commands extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            commands: [],\n            loading: true,\n        }\n    }\n\n    componentDidMount() {\n        this.getCommands()\n        document.title = `${managedUser.name} - Commands | ${tbot.name}`\n    }\n\n    getCommands() {        \n        api.get(`/api/twitch/channels/${managedUser.id}/commands-public`).then(r => {\n            this.setState({\n                commands: r.data, \n                loading: false\n            })\n        })\n    }\n\n    userLevelName(level) {\n        switch (level) {\n            case 0:\n                return ''\n                break;\n            case 1:\n                return 'Subscribers'\n                break;\n            case 2:\n                return 'VIPs'\n                break;\n            case 7:\n                return 'Mods'\n                break;\n            case 8:\n                return 'Admins'\n                break;\n            case 9:\n                return 'Boradcaster'\n                break;\n        }\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading />\n        let userLevels = []\n        for (let cmd of this.state.commands) {\n            if (!(cmd.user_level in userLevels))\n                userLevels.push(cmd.user_level)\n        }\n        return  <div> \n            <div className=\"header mt-4\">\n                <h1 style={{fontSize:'26px'}}>{managedUser.name} - Commands</h1>\n            </div>\n\n            {userLevels.map(level => \n                <div key={'level'+level} className=\"mt-4\">\n                    <h4>{this.userLevelName(level)}</h4>\n                    <table className=\"table table-dark\">\n                        <tbody>\n                            {this.state.commands.map(cmd => {\n                                if (cmd.user_level != level)\n                                    return null\n                                return <tr key={cmd.id}>\n                                    <td width=\"200px\">!{cmd.cmd}</td>\n                                    <td>{cmd.response}</td>\n                                </tr>\n                            })}\n                        </tbody>\n                    </table>\n                </div>\n            )}\n        </div>\n    }\n}\n\nexport default Commands","import React from 'react'\nimport {Route, Redirect} from \"react-router-dom\"\nimport {renderError} from 'tbot/utils'\nimport api from 'tbot/twitch/api'\nimport Loading from 'tbot/components/loading'\nimport Commands from './commands'\n\nclass Main extends React.Component {\n\n    render() {\n        if (this.state.loading) {\n            this.getChannel()\n            return <Loading text=\"LOADING\" />\n        }\n        if (this.state.error) {\n            return <div className=\"mt-5 ml-auto mr-auto\" style={{width: '600px'}}>\n                {renderError(this.state.error)}\n            </div>\n        }\n        return <div className=\"container\">\n            <Route exact path='/t/:channel/commands' component={Commands}/>\n        </div>\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            errors: null,\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            window.scrollTo(0, 0)\n        }\n    }\n\n    getChannel() {\n        window.managedUser = null\n        api.get(`/api/twitch/channel/${this.props.match.params.channel}`).then(r => {\n            window.managedUser = r.data\n            this.setState({loading: false})\n        }).catch(e => {\n            this.setState({loading: false, error: e.response.data})\n        })\n    }\n\n}\n\nexport default Main","import ReactDOM from 'react-dom';\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\n\nimport Front from 'tbot/front'\n\nimport TwitchLogviewer from 'tbot/twitch/logviewer';\nimport TwitchLogViewerSelectChannel from 'tbot/twitch/logviewer/selectchannel';\n\nimport TwitchDashboard from 'tbot/twitch/dashboard'\n\nimport TwitchPublic from 'tbot/twitch/public'\n\nimport './index.scss';\n\nReactDOM.render((\n    <BrowserRouter>\n        <Switch>\n            <Route exact path='/' component={Front}/>\n\n            <Route exact path='/twitch/logviewer' component={TwitchLogViewerSelectChannel}/>\n            <Route exact path='/twitch/logviewer/:channel' component={TwitchLogviewer}/>\n\n            <Route path='/t/:channel' component={TwitchPublic}/>\n            \n            <Route path='/twitch/dashboard' component={TwitchDashboard}/>\n            <Route path='/twitch/:channel' component={TwitchDashboard}/>\n        </Switch>\n    </BrowserRouter>\n), document.getElementById('root'));","import React from 'react'\nimport api from 'tbot/twitch/api'\nimport Loading from 'tbot/components/loading'\n\nclass SelectChannel extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            channels: [],\n            loading: true,\n        }\n    }\n\n    componentDidMount() {\n        this.getChannels()\n    }\n\n    getChannels(name) {\n        api.get(`/api/twitch/user/admin-of`, {params: {suggest_name: name}}).then(r => {\n            this.setState({\n                channels: r.data, \n                loading: false\n            })\n        })\n    }\n\n    render() {\n        return <div className=\"modal \" tabIndex=\"-1\" role=\"dialog\">\n            <div className=\"modal-dialog\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\">Channels you manage</h5>\n                        <button \n                            type=\"button\" \n                            className=\"close\" \n                            data-dismiss=\"modal\" \n                            aria-label=\"Close\" \n                            title=\"Close\"\n                            onClick={this.props.onClose}\n                        >\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        <div>\n                            <input \n                                className=\"form-control\"\n                                placeholder=\"Search channel\"\n                                onChange={(e) => {this.getChannels(e.target.value)}}\n                            />\n                        </div>\n                        <div className=\"mt-2\" style={{fontSize: '26px'}}>\n                            {this.state.channels.length === 0?<div>No channels found</div>:\n                                this.state.channels.map(c => (\n                                    <div key={c.id} className=\"clickable\"><a href={`/twitch/${c.name}/dashboard`}>{c.name}</a></div>\n                                ))\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    }\n}\n\nexport default SelectChannel","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nimport SelectChannel from './select_channel.jsx'\nimport './sidebar.scss'\n\nclass Sidebar extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            showSelectChannel: false,\n        }\n    }\n\n    onClose = () => {\n        this.setState({showSelectChannel: false})\n    }\n\n    selectChannelClick = (e) => {\n        this.setState({showSelectChannel: true})\n    }\n\n    renderConnect() {\n        if (managedUser.level < 4)\n            return null\n        return <span> \n            <div className=\"title\">CONNECT</div>\n            <NavLink to={`/twitch/${managedUser.name}/spotify`} activeClassName=\"active\">Spotify</NavLink> \n            <NavLink to={`/twitch/${managedUser.name}/discord`} activeClassName=\"active\">Discord</NavLink> \n        </span>\n    }\n\n    render() {\n        return (\n            <div id=\"sidebar\">\n                <div \n                    className=\"d-flex\" \n                    id=\"managed-user\" \n                    title=\"Click to change channel\"\n                    onClick={this.selectChannelClick}\n                >                    \n                    <div className=\"menuicon\"><i className=\"material-icons\">menu</i></div>\n                    <div className=\"user\">\n                        {managedUser.name}\n                    </div>\n                    <div className=\"menuicon ml-auto\"><i className=\"material-icons\">arrow_drop_down</i></div>\n                </div>\n                <div id=\"items\">\n                    {managedUser.level >= 3 ?               \n                        <NavLink to={`/twitch/${managedUser.name}/dashboard`} activeClassName=\"active\">Dashboard</NavLink>\n                    : null }\n                    <NavLink to={`/twitch/${managedUser.name}/commands`} activeClassName=\"active\">Commands</NavLink>\n                    {managedUser.level >= 3 ?\n                        <NavLink to={`/twitch/${managedUser.name}/admins`} activeClassName=\"active\">Admins</NavLink>\n                    : null }\n                    {this.renderConnect()}\n\n                    <div className=\"title\">LINKS</div>\n                    <NavLink to={`/twitch/logviewer/${managedUser.name}`}>Logviewer</NavLink> \n\n                </div>\n                {this.state.showSelectChannel?\n                    <SelectChannel onClose={this.onClose} />\n                :null}\n            </div>\n        )\n    }\n\n}\n\nexport default Sidebar","import React from 'react'\nimport {NavLink} from 'react-router-dom'\n\nimport './topbar.scss'\n\nclass Sidebar extends React.Component {\n\n    render() {\n        return (\n            <div id=\"topbar\">\n                <div className=\"title\" id=\"top-title\"></div>\n                <div className=\"signed-as\">Signed in as <b>{tbot['twitch_user']['user']}</b>, <a href=\"/twitch/logout\">log out</a></div>\n            </div>\n        )\n    }\n\n}\n\nexport default Sidebar","import React from 'react'\nimport api from 'tbot/twitch/api'\n\nclass BotControls extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n        this.state = {\n            settings: null,\n        }\n\t}\n\n    componentDidMount() {\n        this.getSettings()\n    }\n\n    getSettings() {\n        api.get(`/api/twitch/channels/${managedUser.id}/bot-settings`).then(r => {\n            this.setState({settings: r.data})\n        })\n    }\n\n\tjoinClick = () => {\n\t\tapi.post(`/api/twitch/channels/${managedUser.id}/bot-join`).then(r => {\n   \t\t\tthis.getSettings();\n        })\n\t}\n\n    partClick = () => {\n        api.delete(`/api/twitch/channels/${managedUser.id}/bot-join`).then(r => {\n            this.getSettings();\n        })\n    }\n\n    muteClick = () => {\n        api.post(`/api/twitch/channels/${managedUser.id}/bot-mute`).then(r => {\n            this.getSettings();\n        })\n    }\n\n    unmuteClick = () => {\n        api.delete(`/api/twitch/channels/${managedUser.id}/bot-mute`).then(r => {\n            this.getSettings();\n        })\n    }\n\n    enableChatlogClick = () => {\n        api.post(`/api/twitch/channels/${managedUser.id}/bot-enable-chatlog`).then(r => {\n            this.getSettings();\n        })\n    }\n\n    disableChatlogClick = () => {\n        api.delete(`/api/twitch/channels/${managedUser.id}/bot-enable-chatlog`).then(r => {\n            this.getSettings();\n        })\n    }\n\n    render() {\n        if (!this.state.settings)\n            return null;\n        return <div className=\"box\">\n            <div className=\"title\">Bot Controls</div>\n            <div className=\"buttons\">\n                {!this.state.settings.active?\n                    <button className=\"btn btn-success\" onClick={this.joinClick}>Join channel</button>\n                :null}\n                {this.state.settings.active?\n                    <button className=\"btn btn-danger\" onClick={this.partClick}>Part channel</button>\n                :null}\n\n                {!this.state.settings.muted?\n                    <button className=\"btn btn-secondary\" onClick={this.muteClick}>Mute bot</button>\n                :null}\n                {this.state.settings.muted?\n                    <button className=\"btn btn-secondary\" onClick={this.unmuteClick}>Unmute bot</button>\n                :null}         \n\n                {!this.state.settings.chatlog_enabled?\n                    <button className=\"btn btn-secondary\" onClick={this.enableChatlogClick}>Enable chatlog</button>\n                :null}\n                {this.state.settings.chatlog_enabled?\n                    <button className=\"btn btn-secondary\" onClick={this.disableChatlogClick}>Disable chatlog</button>\n                :null}\n            </div>\n        </div>\n    }\n}\n\nexport default BotControls","import React from 'react'\nimport {Redirect} from 'react-router'\nimport api from 'tbot/twitch/api'\nimport BotControls from './components/bot_controls'\nimport {setHeader} from 'tbot/utils'\n\nclass Dashboard extends React.Component {\n\n    componentDidMount() {\n        setHeader('Dashboard')\n    }\n\n    render() {\n        if (managedUser.level < 3) \n            return <Redirect to={`/twitch/${managedUser.name}/commands`} />\n        return <div className=\"d-flex\">\n            <div style={{width: '200px'}}>\n                <BotControls />\n            </div>\n        </div>\n    }\n}\n\nexport default Dashboard","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport api from 'tbot/twitch/api'\nimport Loading from 'tbot/components/loading'\nimport {setHeader} from 'tbot/utils'\nimport {userLevelName, enabledWhenName} from 'tbot/twitch/utils'\n\nclass Commands extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            commands: [],\n            loading: true,\n        }\n    }\n\n    componentDidMount() {\n        setHeader('Commands')\n        this.getCommands()\n    }\n\n    getCommands() {        \n        api.get(`/api/twitch/channels/${managedUser.id}/commands`).then(r => {\n            this.setState({\n                commands: r.data, \n                loading: false\n            })\n        })\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading />\n        return  <div> \n                <div className=\"d-flex mb-2\">\n                    <div>\n                        <Link className=\"btn btn-primary\" to=\"commands/new\">New command</Link>\n                    </div>\n                    <div className=\"ml-auto\">\n                        <a href={`/t/${managedUser.name}/commands`} target=\"_blank\" className=\"btn btn-link\">Public commands</a>\n                    </div>\n                </div>\n                <table className=\"table table-dark table-hover\">\n                <thead>\n                    <tr>\n                        <th width=\"100px\">Command</th>\n                        <th>Response</th>\n                        <th width=\"5px\" title=\"User cooldown\">UCD</th>\n                        <th width=\"5px\" title=\"Global cooldown\">GCD</th>\n                        <th width=\"100px\" title=\"User level\">UL</th>\n                        <th width=\"5px\" title=\"Enabled when stream is\">ES</th>\n                        <th width=\"5px\" title=\"Enabled\">E</th>\n                        <th width=\"5px\"></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.state.commands.map(cmd =>\n                        <tr key={cmd.id}>\n                            <td>!{cmd.cmd}</td>\n                            <td className=\"td-ellipsis\">{cmd.response}</td>\n                            <td>{cmd.user_cooldown}</td>\n                            <td>{cmd.global_cooldown}</td>\n                            <td>{userLevelName(cmd.user_level)}</td>\n                            <td>{enabledWhenName(cmd.enabled_status)}</td>\n                            <td>{cmd.enabled==1?'Yes':'No'}</td>\n                            <td className=\"text-right\"><Link to={`commands/edit/${cmd.id}`}>Edit</Link></td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n        </div>\n    }\n}\n\nexport default Commands","import React from 'react'\nimport {Redirect} from 'react-router'\nimport api from 'tbot/twitch/api'\nimport Loading from 'tbot/components/loading'\nimport {setHeader, renderError} from 'tbot/utils'\nimport {userLevelName, enabledWhenName} from 'tbot/twitch/utils'\n\nclass Command extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            cmd: {\n\n                cmd: '',\n                response: '',\n                user_level: 0,\n                enabled_status: 0,\n                global_cooldown: 5,\n                user_cooldown: 5,\n                mod_cooldown: 0,\n                enabled: 1,\n                public: 1,\n            },\n            templates: [],\n            loading: true,\n            error: null,\n            saving: false,\n            success: false,\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.id) {\n            setHeader('Edit command')\n            this.getCommand()\n        } else {            \n            setHeader('New command')\n            this.getTemplates()\n            this.setState({loading: false})\n        }\n    }\n\n    getCommand() {        \n        let id = this.props.match.params.id\n        api.get(`/api/twitch/channels/${managedUser.id}/commands/${id}`).then(r => {\n            for (let key in r.data) {\n                if (!(key in this.state.cmd))\n                    delete r.data[key]\n            }\n            this.setState({\n                cmd: r.data, \n                loading: false\n            })\n            setHeader(`Edit command: !${r.data.cmd}`)\n        })\n    }\n\n    getTemplates() {        \n        let id = this.props.match.params.id\n        api.get(`/api/twitch/template-commands`).then(r => {\n            this.setState({\n                templates: r.data,\n            })\n        })\n    }\n\n    handleEvent = (e) => {\n        let val = e.target.type === 'checkbox' ? e.target.checked : e.target.value\n        this.state.cmd[e.target.name] = val\n        this.setState({cmd: this.state.cmd})\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.setState({saving: true, error: null})\n        let id = this.props.match.params.id\n        if (id)\n            api.put(`/api/twitch/channels/${managedUser.id}/commands/${id}`, this.state.cmd).then(r => {\n                this.setState({success: true})\n            }).catch(e => {\n                this.setState({error: e.response.data, saving: false})\n            })\n        else \n            api.post(`/api/twitch/channels/${managedUser.id}/commands`, this.state.cmd).then(r => {\n                this.setState({success: true})\n            }).catch(e => {\n                this.setState({error: e.response.data, saving: false})\n            })\n    }\n\n    handleDelete = () => {\n        if (!confirm(`Delete command: ${this.state.cmd.cmd}?`))\n            return\n        this.setState({deleting: true, error: null})\n        let id = this.props.match.params.id\n        api.delete(`/api/twitch/channels/${managedUser.id}/commands/${id}`).then(r => {\n            this.setState({\n                cmd: r.data, \n                success: true,\n            })\n        }).catch(e => {\n            this.setState({error: e.response.data, deleting: false})\n        })\n    }\n\n    handleTemplate = (e) => {\n        for (let t of this.state.templates) {\n            if (t.cmd == e.target.value){\n                let d = JSON.parse(JSON.stringify(t))\n                for (let key in d) {\n                    if (!(key in this.state.cmd))\n                        delete d[key]\n                }\n                this.setState({cmd: d})\n            }\n        }\n    }\n\n    renderButton() {\n        if (this.state.saving)\n            return <button className=\"btn btn-primary\" type=\"button\" disabled>\n                    <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> Saving...\n                </button>\n        return <button type=\"submit\" className=\"btn btn-primary\">Save command</button>\n    }\n\n    renderDeleteButton() {\n        if (!this.props.match.params.id)\n            return null\n        if (this.state.deleting)\n            return <button className=\"ml-2 btn btn-danger\" type=\"button\" disabled>\n                    <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> Deleting...\n                </button>\n        return <button type=\"button\" onClick={this.handleDelete} className=\"ml-2 btn btn-danger\">Delete command</button>\n    }\n\n    renderTemplates() {\n        if (this.state.templates.length === 0)\n            return null\n        return <div className=\"mb-4\">\n            <label>Templates</label>\n            <select className=\"form-control\" onChange={this.handleTemplate}>\n                <option value=\"\"></option>\n                {this.state.templates.map(temp =>\n                    <option key={temp.cmd} value={temp.cmd}>{temp.title}</option>\n                )}\n            </select>\n        </div>\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading />\n        if (this.state.success)\n            return <Redirect to={`/twitch/${this.props.match.params.channel}/commands`} />\n\n        return <div style={{maxWidth:'960px'}}>\n            {this.renderTemplates()}\n            <form onSubmit={this.handleSubmit}>\n            <div className=\"form-group\">\n                <label htmlFor=\"cmd\">Command</label>\n                <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                        <div className=\"input-group-text\">!</div>\n                    </div>\n                    <input \n                        className=\"form-control\" \n                        id=\"cmd\" \n                        name=\"cmd\" \n                        value={this.state.cmd.cmd}\n                        onChange={this.handleEvent}\n                        autoFocus\n                        required\n                    />\n                </div>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"response\">Response (<a href=\"https://docs.botashell.com\" target=\"_blank\">Variables documentation</a>)</label>\n                <input \n                    className=\"form-control\" \n                    id=\"response\" \n                    name=\"response\" \n                    value={this.state.cmd.response}\n                    onChange={this.handleEvent}\n                    required\n                />\n            </div>\n\n            <div className=\"form-row\">\n                <div className=\"form-group col-md-4\">\n                    <label htmlFor=\"user_level\">User level</label>\n                    <select \n                        type=\"text\" \n                        className=\"form-control\" \n                        id=\"user_level\" \n                        name=\"user_level\" \n                        value={this.state.cmd.user_level}\n                        onChange={this.handleEvent}\n                    >\n                        <option value=\"0\">{userLevelName(0)}</option>\n                        <option value=\"1\">{userLevelName(1)}</option>\n                        <option value=\"2\">{userLevelName(2)}</option>\n                        <option value=\"7\">{userLevelName(7)}</option>\n                        <option value=\"8\">{userLevelName(8)}</option>\n                        <option value=\"9\">{userLevelName(9)}</option>\n                    </select>\n                </div>\n                <div className=\"form-group col-md-4\">\n                    <label htmlFor=\"enabled_status\">Enabled when stream is</label>\n                    <select \n                        type=\"text\" \n                        className=\"form-control\" \n                        id=\"enabled_status\" \n                        name=\"enabled_status\" \n                        value={this.state.cmd.enabled_status}\n                        onChange={this.handleEvent}\n                    >\n                        <option value=\"0\">{enabledWhenName(0)}</option>\n                        <option value=\"1\">{enabledWhenName(1)}</option>\n                        <option value=\"2\">{enabledWhenName(2)}</option>\n                    </select>\n                </div>\n            </div>\n\n            <div className=\"form-row\">\n                <div className=\"form-group col-md-4\">\n                    <label htmlFor=\"global_cooldown\">Global cooldown</label>\n                    <input \n                        id=\"global_cooldown\" \n                        type=\"number\" \n                        className=\"form-control\" \n                        name=\"global_cooldown\" \n                        value={this.state.cmd.global_cooldown}\n                        onChange={this.handleEvent}\n                    />\n                </div>\n                <div className=\"form-group col-md-4\">\n                    <label htmlFor=\"user_cooldown\">User cooldown</label>\n                    <input \n                        id=\"user_cooldown\" \n                        type=\"number\" \n                        className=\"form-control\" \n                        name=\"user_cooldown\" \n                        value={this.state.cmd.user_cooldown}\n                        onChange={this.handleEvent}\n                    />\n                </div>\n                <div className=\"form-group col-md-4\">\n                    <label htmlFor=\"mod_cooldown\">Mod cooldown</label>\n                    <input \n                        id=\"mod_cooldown\" \n                        type=\"number\" \n                        className=\"form-control\" \n                        name=\"mod_cooldown\" \n                        value={this.state.cmd.mod_cooldown}\n                        onChange={this.handleEvent}\n                    />\n                </div>\n            </div>\n            <div className=\"form-group\">\n                <div className=\"custom-control custom-checkbox\">\n                    <input \n                        name=\"enabled\"\n                        type=\"checkbox\" \n                        className=\"custom-control-input\" \n                        id=\"enabled\"\n                        checked={this.state.cmd.enabled}\n                        onChange={this.handleEvent} \n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"enabled\">Enabled</label>\n                </div>\n            </div>\n            <div className=\"form-group\">\n                <div className=\"custom-control custom-checkbox\">\n                    <input \n                        name=\"public\"\n                        type=\"checkbox\" \n                        className=\"custom-control-input\" \n                        id=\"public\"\n                        checked={this.state.cmd.public}\n                        onChange={this.handleEvent} \n                    />\n                    <label className=\"custom-control-label\" htmlFor=\"public\">Public (show it on the command list page)</label>\n                </div>\n            </div>\n            {renderError(this.state.error)}\n            {this.renderButton()}\n            {this.renderDeleteButton()}\n        </form>\n        </div>\n    }\n}\n\nexport default Command","import React from 'react'\nimport api from 'tbot/twitch/api'\nimport BotControls from './components/bot_controls'\nimport {setHeader} from 'tbot/utils'\nimport Loading from 'tbot/components/loading'\n\nclass Spotify extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            spotify: {},\n            connecting: false,\n            deleting: false,\n        }\n    }\n\n    componentDidMount() {\n        setHeader('Spotify')\n        this.getStatus()\n    }\n\n    getStatus() {\n        this.setState({loading: true})\n        api.get(`/api/twitch/channels/${managedUser.id}/spotify`).then(r => {\n            this.setState({spotify: r.data, loading: false})\n        })\n    }\n\n    handleSubmit = () => {\n        this.setState({connecting: true})\n    }\n\n    handleDelete = (e) => {\n        e.preventDefault()\n        this.setState({deleting: true})        \n        api.delete(`/api/twitch/channels/${managedUser.id}/spotify`).then(r => {\n            this.setState({spotify: {}, deleting: false})\n        })\n    }\n\n    render() {\n        if (this.state.loading) \n            return <Loading />\n        if (this.state.spotify.connected)\n            return <div>\n                <div className=\"mb-3\">\n                    Connected to Spotify account: {this.state.spotify.user}\n                </div>\n                <form method=\"post\" onSubmit={this.handleDelete}>\n                    <button type=\"submit\" className=\"btn btn-danger\">\n                        Disconnect Spotify\n                    </button>\n                </form>\n            </div>\n        return <div>\n            <form method=\"post\" onSubmit={this.handleSubmit} action={`/api/twitch/channels/${managedUser.id}/spotify`}>\n                <button type=\"submit\" className=\"btn btn-success\">\n                    Connect Spotify\n                </button>\n            </form>\n        </div>\n    }\n}\n\nexport default Spotify","import React from 'react'\nimport api from 'tbot/twitch/api'\nimport BotControls from './components/bot_controls'\nimport {setHeader} from 'tbot/utils'\nimport Loading from 'tbot/components/loading'\n\nclass Discord extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            discord: {},\n            connecting: false,\n            deleting: false,\n        }\n    }\n\n    componentDidMount() {\n        setHeader('Discord')\n        this.getStatus()\n    }\n\n    getStatus() {\n        this.setState({loading: true})\n        api.get(`/api/twitch/channels/${managedUser.id}/discord`).then(r => {\n            this.setState({discord: r.data, loading: false})\n        })\n    }\n\n    handleSubmit = () => {\n        this.setState({connecting: true})\n    }\n\n    handleDelete = (e) => {\n        e.preventDefault()\n        this.setState({deleting: true})        \n        api.delete(`/api/twitch/channels/${managedUser.id}/discord`).then(r => {\n            this.setState({discord: {}, deleting: false})\n        })\n    }\n\n    render() {\n        if (this.state.loading) \n            return <Loading />\n        if (this.state.discord.connected)\n            return <div>\n                <div className=\"mb-3\">\n                    Connected to Discord server: {this.state.discord.name}\n                </div>\n                <form method=\"post\" onSubmit={this.handleDelete}>\n                    <button type=\"submit\" className=\"btn btn-danger\">\n                        Disconnect from Discord\n                    </button>\n                </form>\n            </div>\n        return <div>\n            <form method=\"post\" onSubmit={this.handleSubmit} action={`/api/twitch/channels/${managedUser.id}/discord`}>\n                <button type=\"submit\" className=\"btn btn-success\">\n                    Connect Discord\n                </button>\n            </form>\n        </div>\n    }\n}\n\nexport default Discord","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport api from 'tbot/twitch/api'\nimport Loading from 'tbot/components/loading'\nimport {setHeader} from 'tbot/utils'\n\nclass Admins extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            admins: [],\n            loading: true,\n            newAdmin: {\n                user: '',\n                level: 1\n            },\n        }\n        this.levels = [\n            {'name': 'Control commands', 'level': 1},\n            {'name': 'Full control', 'level': 3},\n        ]\n    }\n\n    componentDidMount() {\n        setHeader('Admins')\n        this.getAdmins()\n    }\n\n    getAdmins() {        \n        api.get(`/api/twitch/channels/${managedUser.id}/admins`).then(r => {\n            this.setState({\n                admins: r.data, \n                loading: false\n            })\n        })\n    }\n    \n    handleNewEvent = (e) => {\n        let val = e.target.type === 'checkbox' ? e.target.checked : e.target.value\n        this.state.newAdmin[e.target.name] = val\n        this.setState({newAdmin: this.state.newAdmin})\n    }\n    \n    handleNewSubmit = (e) => {\n        e.preventDefault()\n        api.post(`/api/twitch/channels/${managedUser.id}/admins`, this.state.newAdmin).then(r => {\n            this.setState({newAdmin: {user: '', level: 1}})\n            this.getAdmins()\n        }).catch(e => {\n            alert(e.response.data.message)\n        })\n    }\n\n    handleDelete = (admin) => {\n        if (!confirm(`Delete ${admin.name}?`))\n            return\n        api.delete(`/api/twitch/channels/${managedUser.id}/admins/${admin.id}`).then(r => {\n            this.getAdmins()\n        }).catch(e => {\n            alert(e.response.data.message)\n        })   \n    }\n\n    handleChangeLevel = (e, admin) => {\n        api.put(`/api/twitch/channels/${managedUser.id}/admins/${admin.id}`, {\n            level: e.target.value,\n        }).then(r => {\n            this.getAdmins()\n        }).catch(e => {\n            alert(e.response.data.message)\n        }) \n    }\n\n    renderNewAdmin() {\n        return <form className=\"form-inline\" onSubmit={this.handleNewSubmit}>\n            <div className=\"form-group\">\n                <input \n                    className=\"form-control mr-2\" \n                    name=\"user\" \n                    placeholder=\"User\"\n                    value={this.state.newAdmin.user}\n                    onChange={this.handleNewEvent}\n                 />\n            </div>\n            <select \n                name=\"level\" \n                className=\"form-control mr-2\"\n                value={this.state.newAdmin.level}\n                onChange={this.handleNewEvent}\n            >\n                {this.levels.map(l => (\n                    <option key={l.level} value={l.level}>{l.name}</option>\n                ))}\n            </select>\n            <button type=\"submit\" className=\"btn btn-primary\">Create</button>\n        </form>\n    }\n\n    render() {\n        if (this.state.loading)\n            return <Loading />\n        return  <div> \n                <div className=\"d-flex mb-4\">\n                    {this.renderNewAdmin()}\n                </div>\n                <table style={{maxWidth: '500px'}} className=\"table table-dark table-hover\">\n                <thead>\n                    <tr>\n                        <th>User</th>\n                        <th width=\"250px\">Level</th>\n                        <th width=\"1px\"> </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.state.admins.map(admin =>\n                        <tr key={admin.id}>\n                            <td className=\"align-middle\">{admin.name}</td>\n                            <td>\n                                <select \n                                    name=\"level\" \n                                    className=\"form-control\"\n                                    value={admin.level}\n                                    onChange={(e) => {this.handleChangeLevel(e, admin)}}\n                                >\n                                    {this.levels.map(l => (\n                                        <option key={l.level} value={l.level}>{l.name}</option>\n                                    ))}\n                                </select>\n                            </td>\n                            <td className=\"text-right align-middle\">\n                                <i \n                                    className=\"material-icons clickable\" \n                                    title=\"Delete admin\"\n                                    onClick={() => {this.handleDelete(admin)}}\n                                >\n                                    delete_forever\n                                </i>\n                            </td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n        </div>\n    }\n}\n\nexport default Admins","import React from 'react'\nimport {Route, Redirect} from \"react-router-dom\"\nimport {requireAuth} from 'tbot/twitch/utils'\nimport {renderError} from 'tbot/utils'\nimport api from 'tbot/twitch/api'\nimport Loading from 'tbot/components/loading'\nimport Sidebar from './components/sidebar'\nimport Topbar from './components/topbar'\nimport Dashboard from './dashboard'\nimport Commands from './commands'\nimport Command from './command'\nimport Spotify from './spotify'\nimport Discord from './discord'\nimport Admins from './admins'\n\nclass Main extends React.Component {\n\n    render() {\n        if (!this.props.match.params.channel) \n            return <Redirect to={`/twitch/${window.tbot.twitch_user.user}/dashboard`} />\n        if (this.state.loading) {\n            this.getChannel()\n            return <Loading text=\"LOADING\" />\n        }\n        if (this.state.error) {\n            return <div className=\"mt-5 ml-auto mr-auto\" style={{width: '600px'}}>\n                {renderError(this.state.error)}\n            </div>\n        }\n        return <div id=\"main-wrapper\">\n            <Sidebar />\n            <div id=\"content-wrapper\">\n                <Topbar />\n                <div id=\"content\">\n                    <Route exact path='/twitch/:channel/dashboard' component={Dashboard}/>\n                    <Route exact path='/twitch/:channel/commands' component={Commands}/>\n                    <Route exact path='/twitch/:channel/commands/edit/:id' component={Command}/>\n                    <Route exact path='/twitch/:channel/commands/new' component={Command}/>\n                    <Route exact path='/twitch/:channel/spotify' component={Spotify}/>\n                    <Route exact path='/twitch/:channel/discord' component={Discord}/>\n                    <Route exact path='/twitch/:channel/admins' component={Admins}/>\n                </div>\n            </div>\n        </div>\n    }\n\n    constructor(props) {\n        super(props)\n        requireAuth()\n        this.state = {\n            loading: true,\n            errors: null,\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            window.scrollTo(0, 0)\n        }\n    }\n\n    getChannel() {\n        window.managedUser = null\n        api.get(`/api/twitch/channel/${this.props.match.params.channel}`).then(r => {\n            window.managedUser = r.data\n            this.setState({loading: false})\n        }).catch(e => {\n            this.setState({loading: false, error: e.response.data})\n        })\n    }\n\n}\n\nexport default Main","var map = {\n\t\"./af\": 25,\n\t\"./af.js\": 25,\n\t\"./ar\": 26,\n\t\"./ar-dz\": 27,\n\t\"./ar-dz.js\": 27,\n\t\"./ar-kw\": 28,\n\t\"./ar-kw.js\": 28,\n\t\"./ar-ly\": 29,\n\t\"./ar-ly.js\": 29,\n\t\"./ar-ma\": 30,\n\t\"./ar-ma.js\": 30,\n\t\"./ar-sa\": 31,\n\t\"./ar-sa.js\": 31,\n\t\"./ar-tn\": 32,\n\t\"./ar-tn.js\": 32,\n\t\"./ar.js\": 26,\n\t\"./az\": 33,\n\t\"./az.js\": 33,\n\t\"./be\": 34,\n\t\"./be.js\": 34,\n\t\"./bg\": 35,\n\t\"./bg.js\": 35,\n\t\"./bm\": 36,\n\t\"./bm.js\": 36,\n\t\"./bn\": 37,\n\t\"./bn.js\": 37,\n\t\"./bo\": 38,\n\t\"./bo.js\": 38,\n\t\"./br\": 39,\n\t\"./br.js\": 39,\n\t\"./bs\": 40,\n\t\"./bs.js\": 40,\n\t\"./ca\": 41,\n\t\"./ca.js\": 41,\n\t\"./cs\": 42,\n\t\"./cs.js\": 42,\n\t\"./cv\": 43,\n\t\"./cv.js\": 43,\n\t\"./cy\": 44,\n\t\"./cy.js\": 44,\n\t\"./da\": 45,\n\t\"./da.js\": 45,\n\t\"./de\": 46,\n\t\"./de-at\": 47,\n\t\"./de-at.js\": 47,\n\t\"./de-ch\": 48,\n\t\"./de-ch.js\": 48,\n\t\"./de.js\": 46,\n\t\"./dv\": 49,\n\t\"./dv.js\": 49,\n\t\"./el\": 50,\n\t\"./el.js\": 50,\n\t\"./en-au\": 51,\n\t\"./en-au.js\": 51,\n\t\"./en-ca\": 52,\n\t\"./en-ca.js\": 52,\n\t\"./en-gb\": 53,\n\t\"./en-gb.js\": 53,\n\t\"./en-ie\": 54,\n\t\"./en-ie.js\": 54,\n\t\"./en-il\": 55,\n\t\"./en-il.js\": 55,\n\t\"./en-nz\": 56,\n\t\"./en-nz.js\": 56,\n\t\"./eo\": 57,\n\t\"./eo.js\": 57,\n\t\"./es\": 58,\n\t\"./es-do\": 59,\n\t\"./es-do.js\": 59,\n\t\"./es-us\": 60,\n\t\"./es-us.js\": 60,\n\t\"./es.js\": 58,\n\t\"./et\": 61,\n\t\"./et.js\": 61,\n\t\"./eu\": 62,\n\t\"./eu.js\": 62,\n\t\"./fa\": 63,\n\t\"./fa.js\": 63,\n\t\"./fi\": 64,\n\t\"./fi.js\": 64,\n\t\"./fo\": 65,\n\t\"./fo.js\": 65,\n\t\"./fr\": 66,\n\t\"./fr-ca\": 67,\n\t\"./fr-ca.js\": 67,\n\t\"./fr-ch\": 68,\n\t\"./fr-ch.js\": 68,\n\t\"./fr.js\": 66,\n\t\"./fy\": 69,\n\t\"./fy.js\": 69,\n\t\"./gd\": 70,\n\t\"./gd.js\": 70,\n\t\"./gl\": 71,\n\t\"./gl.js\": 71,\n\t\"./gom-latn\": 72,\n\t\"./gom-latn.js\": 72,\n\t\"./gu\": 73,\n\t\"./gu.js\": 73,\n\t\"./he\": 74,\n\t\"./he.js\": 74,\n\t\"./hi\": 75,\n\t\"./hi.js\": 75,\n\t\"./hr\": 76,\n\t\"./hr.js\": 76,\n\t\"./hu\": 77,\n\t\"./hu.js\": 77,\n\t\"./hy-am\": 78,\n\t\"./hy-am.js\": 78,\n\t\"./id\": 79,\n\t\"./id.js\": 79,\n\t\"./is\": 80,\n\t\"./is.js\": 80,\n\t\"./it\": 81,\n\t\"./it.js\": 81,\n\t\"./ja\": 82,\n\t\"./ja.js\": 82,\n\t\"./jv\": 83,\n\t\"./jv.js\": 83,\n\t\"./ka\": 84,\n\t\"./ka.js\": 84,\n\t\"./kk\": 85,\n\t\"./kk.js\": 85,\n\t\"./km\": 86,\n\t\"./km.js\": 86,\n\t\"./kn\": 87,\n\t\"./kn.js\": 87,\n\t\"./ko\": 88,\n\t\"./ko.js\": 88,\n\t\"./ky\": 89,\n\t\"./ky.js\": 89,\n\t\"./lb\": 90,\n\t\"./lb.js\": 90,\n\t\"./lo\": 91,\n\t\"./lo.js\": 91,\n\t\"./lt\": 92,\n\t\"./lt.js\": 92,\n\t\"./lv\": 93,\n\t\"./lv.js\": 93,\n\t\"./me\": 94,\n\t\"./me.js\": 94,\n\t\"./mi\": 95,\n\t\"./mi.js\": 95,\n\t\"./mk\": 96,\n\t\"./mk.js\": 96,\n\t\"./ml\": 97,\n\t\"./ml.js\": 97,\n\t\"./mn\": 98,\n\t\"./mn.js\": 98,\n\t\"./mr\": 99,\n\t\"./mr.js\": 99,\n\t\"./ms\": 100,\n\t\"./ms-my\": 101,\n\t\"./ms-my.js\": 101,\n\t\"./ms.js\": 100,\n\t\"./mt\": 102,\n\t\"./mt.js\": 102,\n\t\"./my\": 103,\n\t\"./my.js\": 103,\n\t\"./nb\": 104,\n\t\"./nb.js\": 104,\n\t\"./ne\": 105,\n\t\"./ne.js\": 105,\n\t\"./nl\": 106,\n\t\"./nl-be\": 107,\n\t\"./nl-be.js\": 107,\n\t\"./nl.js\": 106,\n\t\"./nn\": 108,\n\t\"./nn.js\": 108,\n\t\"./pa-in\": 109,\n\t\"./pa-in.js\": 109,\n\t\"./pl\": 110,\n\t\"./pl.js\": 110,\n\t\"./pt\": 111,\n\t\"./pt-br\": 112,\n\t\"./pt-br.js\": 112,\n\t\"./pt.js\": 111,\n\t\"./ro\": 113,\n\t\"./ro.js\": 113,\n\t\"./ru\": 114,\n\t\"./ru.js\": 114,\n\t\"./sd\": 115,\n\t\"./sd.js\": 115,\n\t\"./se\": 116,\n\t\"./se.js\": 116,\n\t\"./si\": 117,\n\t\"./si.js\": 117,\n\t\"./sk\": 118,\n\t\"./sk.js\": 118,\n\t\"./sl\": 119,\n\t\"./sl.js\": 119,\n\t\"./sq\": 120,\n\t\"./sq.js\": 120,\n\t\"./sr\": 121,\n\t\"./sr-cyrl\": 122,\n\t\"./sr-cyrl.js\": 122,\n\t\"./sr.js\": 121,\n\t\"./ss\": 123,\n\t\"./ss.js\": 123,\n\t\"./sv\": 124,\n\t\"./sv.js\": 124,\n\t\"./sw\": 125,\n\t\"./sw.js\": 125,\n\t\"./ta\": 126,\n\t\"./ta.js\": 126,\n\t\"./te\": 127,\n\t\"./te.js\": 127,\n\t\"./tet\": 128,\n\t\"./tet.js\": 128,\n\t\"./tg\": 129,\n\t\"./tg.js\": 129,\n\t\"./th\": 130,\n\t\"./th.js\": 130,\n\t\"./tl-ph\": 131,\n\t\"./tl-ph.js\": 131,\n\t\"./tlh\": 132,\n\t\"./tlh.js\": 132,\n\t\"./tr\": 133,\n\t\"./tr.js\": 133,\n\t\"./tzl\": 134,\n\t\"./tzl.js\": 134,\n\t\"./tzm\": 135,\n\t\"./tzm-latn\": 136,\n\t\"./tzm-latn.js\": 136,\n\t\"./tzm.js\": 135,\n\t\"./ug-cn\": 137,\n\t\"./ug-cn.js\": 137,\n\t\"./uk\": 138,\n\t\"./uk.js\": 138,\n\t\"./ur\": 139,\n\t\"./ur.js\": 139,\n\t\"./uz\": 140,\n\t\"./uz-latn\": 141,\n\t\"./uz-latn.js\": 141,\n\t\"./uz.js\": 140,\n\t\"./vi\": 142,\n\t\"./vi.js\": 142,\n\t\"./x-pseudo\": 143,\n\t\"./x-pseudo.js\": 143,\n\t\"./yo\": 144,\n\t\"./yo.js\": 144,\n\t\"./zh-cn\": 145,\n\t\"./zh-cn.js\": 145,\n\t\"./zh-hk\": 146,\n\t\"./zh-hk.js\": 146,\n\t\"./zh-tw\": 147,\n\t\"./zh-tw.js\": 147\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 188;","import axios from 'axios';\n\naxios.interceptors.response.use(function(response) {\n    return response;\n}, function (error) {\n    if (error.response.status == 401) {\n        let next = encodeURIComponent(\n            location.pathname + location.search\n        )\n        location.href = '/twitch/login?next='+next;\n        throw 'Not authenticated!';\n    }\n    return Promise.reject(error);\n});\n\nexport default axios;","\nexport function setTitle(title) {\n    document.title = `${title} | ${window.tbot.name}`\n}\n\nexport function setHeader(title) {\n    setTitle(title)\n    document.getElementById('top-title').innerHTML = title\n}\n\nexport function renderError(error) {\n    if (!error)\n        return null\n    if (error.errors)\n        return <div className=\"alert alert-danger\" role=\"alert\">\n            <div className=\"mb-2\"><b>Error:</b> {error.message}</div>\n            {error.errors.map(e => (\n                <div key={e.field}><b>{e.field}:</b> {e.message}</div>\n            ))}\n        </div>\n    return <div className=\"alert alert-danger\" role=\"alert\">\n        <div><b>Error:</b> {error.message}</div>\n    </div>\n}","export default (props) => {\n    return <div className=\"d-flex flex-column text-center\">\n        <div>\n            <div className=\"spinner-grow text-primary\" role=\"status\" style={{\n                width: '5rem',\n                height: '5rem',\n            }}>\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        </div>\n        <div className=\"mt-2\">\n            <h1>{props.text}</h1>\n        </div>\n    </div>\n}","\nexport function isAuthed() {\n\treturn tbot.twitch_user !== null;\n}\n\nexport function requireAuth() {\n\tif (!isAuthed()) {\n        let next = encodeURIComponent(\n            location.pathname + location.search\n        )\n        location.href = '/twitch/login?next='+next;\n\t\tthrow 'Not authenticated!';\n\t}\n}\n\nexport function userLevelName(level) {\n    switch (level) {\n        case 0:\n            return 'Everyone'\n            break\n        case 1:\n            return 'Sub'\n            break\n        case 2:\n            return 'VIP'\n            break\n        case 7:\n            return 'Mod'\n            break\n        case 8:\n            return 'Admin'\n            break\n        case 9:\n            return 'Broadcaster'\n            break\n        default:\n            return 'Unknown user level'\n    }\n}\n\nexport function enabledWhenName(level) {\n    switch (level) {\n        case 0:\n            return 'Always'\n            break\n        case 1:\n            return 'Online'\n            break\n        case 2:\n            return 'Offline'\n            break\n        default:\n            return 'Unknown enabled when level'\n    }\n}"],"sourceRoot":""}